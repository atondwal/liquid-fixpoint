qualif Fst(v : @(1), y : @(0)): ((v = (fst y))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.spec" (line 30, column 8)
qualif Snd(v : @(1), y : @(0)): ((v = (snd y))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.spec" (line 31, column 8)
qualif Auto(VV : a_aIB, x : a_aIB): ((VV < x)) // "/home/atondwal/src/liquidhaskell/tests/pos/hello.hs" (line 12, column 1)
qualif Auto(VV : a_aM4, x : a_aM4): ((VV >= x)) // "/home/atondwal/src/liquidhaskell/tests/pos/hello.hs" (line 6, column 1)
qualif Auto(VV : a_aIX, x : a_aIX): ((VV > x)) // "/home/atondwal/src/liquidhaskell/tests/pos/hello.hs" (line 9, column 1)
qualif IsEmp(v : GHC.Types.Bool, xs : [@(0)]): (((Prop v) <=> ((len xs) > 0))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, xs : [@(0)]): (((Prop v) <=> ((len xs) = 0))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (((len v) = 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (((len v) >= 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (((len v) > 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], xs : [@(0)]): (((len v) = (len xs))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], xs : [@(0)]): (((len v) >= (len xs))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], xs : [@(0)]): (((len v) > (len xs))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], xs : [@(0)]): (((len v) <= (len xs))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], xs : [@(0)]): (((len v) < (len xs))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, xs : [@(0)]): ((v = (len xs))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], x : int): ((x = (len v))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], x : int): (((len v) = (x + 1))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], x : int): (((len v) = (x - 1))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, xs : [@(0)], n : int): ((v = ((len xs) + n))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): ((0 = 1)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): ((0 = 1)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): ((0 = 1)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): ((0 = 1)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): ((0 = 1)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): ((v < 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): ((v <= 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): ((v > 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): ((v >= 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): ((v = 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): ((v != 0)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), x : @(0)): ((v < x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), x : @(0)): ((v <= x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), x : @(0)): ((v > x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), x : @(0)): ((v >= x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), x : @(0)): ((v = x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), x : @(0)): ((v != x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): ((v = 1)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 28, column 8)
qualif True1(v : GHC.Types.Bool): ((Prop v)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 29, column 8)
qualif False1(v : GHC.Types.Bool): ((~ ((Prop v)))) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 30, column 8)
qualif Papp(v : @(0), p : (Pred  @(0))): ((papp1 p v)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 34, column 8)
qualif Papp2(v : @(1), x : @(0), p : (Pred  @(1)  @(0))): ((papp2 p v x)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 37, column 8)
qualif Papp3(v : @(2), x : @(0), y : @(1), p : (Pred  @(2)  @(0)  @(1))): ((papp3 p v x y)) // "/home/atondwal/src/liquidhaskell/.stack-work/install/x86_64-linux-tinfo6/lts-6.14/7.10.3/share/x86_64-linux-ghc-7.10.3/liquidhaskell-0.6.0.0/include/Prelude.hquals" (line 39, column 8)




constant runFun : (func(2, [(Arrow  @(0)  @(1)); @(0); @(1)]))
constant addrLen : (func(0, [Str; int]))
constant papp5 : (func(10, [(Pred  @(0)  @(1)  @(2)  @(3)  @(4));
                            @(5);
                            @(6);
                            @(7);
                            @(8);
                            @(9);
                            bool]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant GHC.Types.False##68 : (GHC.Types.Bool)
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant GHC.Types.True##6u : (GHC.Types.Bool)
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant GHC.Types.LT##6S : (GHC.Types.Ordering)
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(3));
                           @(4);
                           @(5);
                           @(6);
                           @(7);
                           bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.GT##6W : (GHC.Types.Ordering)
constant autolen : (func(1, [@(0); int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant head : (func(1, [[@(0)]; @(0)]))
constant null : (func(1, [[@(0)]; bool]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant fromJust : (func(1, [(GHC.Base.Maybe  @(0)); @(0)]))
constant papp7 : (func(14, [(Pred  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                            @(7);
                            @(8);
                            @(9);
                            @(10);
                            @(11);
                            @(12);
                            @(13);
                            bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant papp6 : (func(12, [(Pred  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                            @(6);
                            @(7);
                            @(8);
                            @(9);
                            @(10);
                            @(11);
                            bool]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant strLen : (func(0, [[Char]; int]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant isJust : (func(1, [(GHC.Base.Maybe  @(0)); bool]))
constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant papp1 : (func(2, [(Pred  @(0)); @(1); bool]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant tail : (func(1, [[@(0)]; [@(0)]]))
constant GHC.Types.EQ##6U : (GHC.Types.Ordering)
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))


distinct GHC.Types.False##68 : (GHC.Types.Bool)
distinct GHC.Types.True##6u : (GHC.Types.Bool)
distinct GHC.Types.LT##6S : (GHC.Types.Ordering)
distinct GHC.Types.GT##6W : (GHC.Types.Ordering)
distinct GHC.Types.EQ##6U : (GHC.Types.Ordering)


bind 0 GHC.Types.False##68 : {VV##57 : GHC.Types.Bool | []}
bind 1 GHC.Types.True##6u : {VV##58 : GHC.Types.Bool | []}
bind 2 GHC.Types.EQ##6U : {VV##61 : GHC.Types.Ordering | [(VV##61 = GHC.Types.EQ##6U)]}
bind 3 GHC.Types.LT##6S : {VV##62 : GHC.Types.Ordering | [(VV##62 = GHC.Types.LT##6S)]}
bind 4 GHC.Types.GT##6W : {VV##63 : GHC.Types.Ordering | [(VV##63 = GHC.Types.GT##6W)]}
bind 5 GHC.Types.True##6u : {v##4 : GHC.Types.Bool | [(Prop v##4)]}
bind 6 GHC.Types.False##68 : {v##5 : GHC.Types.Bool | [(~ ((Prop v##5)))]}
bind 7 GHC.Types.False##68 : {v##5 : GHC.Types.Bool | [(~ ((Prop v##5)))]}
bind 8 GHC.Types.True##6u : {v##4 : GHC.Types.Bool | [(Prop v##4)]}
bind 9 fix$36$$36$dNum_aIC : {VV##74 : (GHC.Num.Num  a_aIB) | []}
bind 10 a_aIB : {VV : num | []}
bind 11 x##azv : {VV : a_aIB | []}
bind 12 lq_anf$##1677724604##dMs : {lq_tmp$x##76 : int | [(lq_tmp$x##76 = 1)]}
bind 13 lq_anf$##1677724605##dMt : {VV : a_aIB | [(VV = lq_anf$##1677724604##dMs)]}
bind 14 fix$36$$36$dNum_aIY : {VV##106 : (GHC.Num.Num  a_aIX) | []}
bind 15 a_aIX : {VV : num | []}
bind 16 x##azu : {VV : a_aIX | []}
bind 17 lq_anf$##1677724606##dMu : {lq_tmp$x##108 : int | [(lq_tmp$x##108 = 1)]}
bind 18 lq_anf$##1677724607##dMv : {VV : a_aIX | [(VV = lq_anf$##1677724606##dMu)]}
bind 19 fix$36$$36$dNum_aM5 : {VV##139 : (GHC.Num.Num  a_aM4) | []}
bind 20 a_aM4 : {VV : num | []}
bind 21 fix$36$$36$dOrd_aM6 : {VV##140 : (GHC.Classes.Ord  a_aM4) | []}
bind 22 x##alA : {VV : a_aM4 | []}
bind 23 lq_anf$##1677724608##dMw : {lq_tmp$x##142 : int | [(lq_tmp$x##142 = 0)]}
bind 24 lq_anf$##1677724609##dMx : {VV : a_aM4 | [(VV = lq_anf$##1677724608##dMw)]}
bind 25 lq_anf$##1677724610##dMy : {lq_tmp$x##155 : GHC.Types.Bool | [((Prop lq_tmp$x##155) <=> (x##alA > lq_anf$##1677724609##dMx))]}
bind 26 lq_anf$##1677724611##dMz : {lq_tmp$x##167 : GHC.Types.Bool | [((Prop lq_tmp$x##167) <=> (x##alA > lq_anf$##1677724609##dMx));
                                                                      (lq_tmp$x##167 = lq_anf$##1677724610##dMy)]}
bind 27 lq_anf$##1677724611##dMz : {lq_tmp$x##169 : GHC.Types.Bool | [((Prop lq_tmp$x##169) <=> (x##alA > lq_anf$##1677724609##dMx));
                                                                      (lq_tmp$x##169 = lq_anf$##1677724610##dMy)]}
bind 28 lq_anf$##1677724611##dMz : {lq_tmp$x##169 : GHC.Types.Bool | [((Prop lq_tmp$x##169) <=> (x##alA > lq_anf$##1677724609##dMx));
                                                                      (lq_tmp$x##169 = lq_anf$##1677724610##dMy);
                                                                      (~ ((Prop lq_tmp$x##169)));
                                                                      (~ ((Prop lq_tmp$x##169)));
                                                                      (~ ((Prop lq_tmp$x##169)))]}
bind 29 lq_anf$##1677724612##dMA : {lq_tmp$x##174 : int | [(lq_tmp$x##174 = 0)]}
bind 30 lq_anf$##1677724613##dMB : {VV : a_aM4 | [(VV = lq_anf$##1677724612##dMA)]}
bind 31 lq_anf$##1677724611##dMz : {lq_tmp$x##195 : GHC.Types.Bool | [((Prop lq_tmp$x##195) <=> (x##alA > lq_anf$##1677724609##dMx));
                                                                      (lq_tmp$x##195 = lq_anf$##1677724610##dMy)]}
bind 32 lq_anf$##1677724611##dMz : {lq_tmp$x##195 : GHC.Types.Bool | [((Prop lq_tmp$x##195) <=> (x##alA > lq_anf$##1677724609##dMx));
                                                                      (lq_tmp$x##195 = lq_anf$##1677724610##dMy);
                                                                      (Prop lq_tmp$x##195);
                                                                      (Prop lq_tmp$x##195);
                                                                      (Prop lq_tmp$x##195)]}
bind 33 fix$36$$36$dNum_aM5 : {VV##213 : (GHC.Num.Num  a_aM4) | []}
bind 34 a_aM4 : {VV : num | []}
bind 35 lq_tmp$x##207 : {VV##214 : (GHC.Classes.Ord  a_aM4) | []}
bind 36 lq_tmp$x##209 : {VV : a_aM4 | []}
bind 37 fix$36$$36$dOrd_aM6 : {VV##216 : (GHC.Classes.Ord  a_aM4) | []}
bind 38 lq_tmp$x##203 : {VV : a_aM4 | []}
bind 39 x##alA : {VV : a_aM4 | []}
bind 40 VV##219 : {VV##219 : int | [(VV##219 = 0);
                                    (VV##219 = lq_anf$##1677724612##dMA)]}
bind 41 VV##221 : {VV##221 : int | [(VV##221 = 0);
                                    (VV##221 = lq_anf$##1677724608##dMw)]}
bind 42 fix$36$$36$dNum_aIY : {VV##223 : (GHC.Num.Num  a_aIX) | []}
bind 43 a_aIX : {VV : num | []}
bind 44 lq_tmp$x##132 : {VV : a_aIX | []}
bind 45 x##azu : {VV : a_aIX | []}
bind 46 VV##226 : {VV##226 : int | [(VV##226 = 1);
                                    (VV##226 = lq_anf$##1677724606##dMu)]}
bind 47 fix$36$$36$dNum_aIC : {VV##228 : (GHC.Num.Num  a_aIB) | []}
bind 48 a_aIB : {VV : num | []}
bind 49 lq_tmp$x##100 : {VV : a_aIB | []}
bind 50 x##azv : {VV : a_aIB | []}
bind 51 VV##231 : {VV##231 : int | [(VV##231 = 1);
                                    (VV##231 = lq_anf$##1677724604##dMs)]}




constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       19;
       20;
       21;
       22;
       23;
       24;
       25;
       26;
       31;
       32]
  lhs {VV##F##1 : a_aM4 | [(VV##F##1 = x##alA)]}
  rhs {VV##F##1 : a_aM4 | [(VV##F##1 >= x##alA)]}
  id 1 tag [3]
  // META constraint id 1 : ()


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       19;
       20;
       21;
       22;
       23;
       24;
       25;
       26;
       27;
       28;
       29;
       30]
  lhs {VV##F##2 : a_aM4 | [(VV##F##2 = (lq_anf$##1677724613##dMB - x##alA))]}
  rhs {VV##F##2 : a_aM4 | [(VV##F##2 >= x##alA)]}
  id 2 tag [3]
  // META constraint id 2 : ()


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 19; 20; 21; 22; 23; 24]
  lhs {VV##F##3 : a_aM4 | [(VV##F##3 = lq_anf$##1677724608##dMw);
                           (VV##F##3 = lq_anf$##1677724609##dMx)]}
  rhs {VV##F##3 : a_aM4 | [$k_##163[lq_tmp$x##160:=x##alA][lq_tmp$x##159:=fix$36$$36$dOrd_aM6][VV##F:=VV##F##3][VV##162:=VV##F##3]]}
  id 3 tag [3]
  // META constraint id 3 : ()


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 19; 20; 21; 22; 23; 24]
  lhs {VV##F##4 : a_aM4 | [(VV##F##4 = x##alA)]}
  rhs {VV##F##4 : a_aM4 | [$k_##163[lq_tmp$x##159:=fix$36$$36$dOrd_aM6][VV##F:=VV##F##4][VV##162:=VV##F##4]]}
  id 4 tag [3]
  // META constraint id 4 : ()


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 14; 15; 16; 17; 18]
  lhs {VV##F##5 : a_aIX | [(VV##F##5 = (x##azu + lq_anf$##1677724607##dMv))]}
  rhs {VV##F##5 : a_aIX | [(VV##F##5 > x##azu)]}
  id 5 tag [2]
  // META constraint id 5 : ()


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  lhs {VV##F##6 : a_aIB | [(VV##F##6 = (x##azv - lq_anf$##1677724605##dMt))]}
  rhs {VV##F##6 : a_aIB | [(VV##F##6 < x##azv)]}
  id 6 tag [1]
  // META constraint id 6 : ()




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 19; 20; 21; 22; 23; 24]
  reft {VV##162 : a_aM4 | [$k_##163]}
  // META wf : ()







