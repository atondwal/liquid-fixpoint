qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#lit#35#meas00.hs#58#8#58#1#45#28#124#function#32#poo : (Str)
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Prim.void##0l : {VV#164 : GHC.Prim.Void# | []}
bind 1 GHC.Err.undefined#02v : {VV : func(1, [@(0)]) | []}
bind 2 GHC.Types.False#68 : {VV#167 : GHC.Types.Bool | []}
bind 3 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 4 GHC.Types.EQ#6U : {VV#171 : GHC.Types.Ordering | [(VV#171 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#172 : GHC.Types.Ordering | [(VV#172 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#173 : GHC.Types.Ordering | [(VV#173 = GHC.Types.GT#6W)]}
bind 7 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 8 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 9 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 10 GHC.Types.EQ#6U : {VV#214 : GHC.Types.Ordering | [(cmp([VV#214]) = GHC.Types.EQ#6U)]}
bind 11 GHC.Types.LT#6S : {VV#215 : GHC.Types.Ordering | [(cmp([VV#215]) = GHC.Types.LT#6S)]}
bind 12 GHC.Types.GT#6W : {VV#216 : GHC.Types.Ordering | [(cmp([VV#216]) = GHC.Types.GT#6W)]}
bind 13 ds_d13J : {VV#245 : [t_a13u] | [$k__246;
                                        (len([VV#245]) >= 0)]}
bind 14 lq_anf__d13M : {lq_tmp_x_253 : [t_a13u] | [(lq_tmp_x_253 = ds_d13J);
                                                   (len([lq_tmp_x_253]) >= 0)]}
bind 15 lq_anf__d13M : {lq_tmp_x_256 : [t_a13u] | [(lq_tmp_x_256 = ds_d13J);
                                                   (len([lq_tmp_x_256]) >= 0);
                                                   (len([lq_tmp_x_256]) >= 0)]}
bind 16 lq_anf__d13M : {lq_tmp_x_256 : [t_a13u] | [(lq_tmp_x_256 = ds_d13J);
                                                   (len([lq_tmp_x_256]) >= 0);
                                                   (len([lq_tmp_x_256]) = 0);
                                                   ((? null([lq_tmp_x_256])) <=> true);
                                                   (lq_tmp_x_256 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (len([lq_tmp_x_256]) = 0);
                                                   ((? null([lq_tmp_x_256])) <=> true);
                                                   (len([lq_tmp_x_256]) >= 0)]}
bind 17 lq_anf__d13M : {lq_tmp_x_269 : [t_a13u] | [(lq_tmp_x_269 = ds_d13J);
                                                   (len([lq_tmp_x_269]) >= 0);
                                                   (len([lq_tmp_x_269]) >= 0)]}
bind 18 lq_anf__d13O : {VV#238 : t_a13u | [$k__239[VV#245:=lq_anf__d13M][lq_tmp_x_253:=lq_anf__d13M][lq_tmp_x_269:=lq_anf__d13M]]}
bind 19 lq_anf__d13P : {lq_tmp_x_279 : [t_a13u] | [(len([lq_tmp_x_279]) >= 0)]}
bind 20 lq_anf__d13M : {lq_tmp_x_269 : [t_a13u] | [(lq_tmp_x_269 = ds_d13J);
                                                   (len([lq_tmp_x_269]) >= 0);
                                                   (len([lq_tmp_x_269]) = (1 + len([lq_anf__d13P])));
                                                   ((? null([lq_tmp_x_269])) <=> false);
                                                   (xsListSelector([lq_tmp_x_269]) = lq_anf__d13P);
                                                   (xListSelector([lq_tmp_x_269]) = lq_anf__d13O);
                                                   (lq_tmp_x_269 = fix#GHC.Types.#58##35#64([lq_anf__d13O;
                                                                                             lq_anf__d13P]));
                                                   (len([lq_tmp_x_269]) = (1 + len([lq_anf__d13P])));
                                                   ((? null([lq_tmp_x_269])) <=> false);
                                                   (xsListSelector([lq_tmp_x_269]) = lq_anf__d13P);
                                                   (xListSelector([lq_tmp_x_269]) = lq_anf__d13O);
                                                   (len([lq_tmp_x_269]) >= 0)]}
bind 21 ds_d13L : {VV#288 : GHC.Prim.Void# | [$k__289]}
bind 22 lq_anf__d13N : {lq_tmp_x_295 : int | [(lq_tmp_x_295 ~~ fix#lit#35#meas00.hs#58#8#58#1#45#28#124#function#32#poo);
                                              (strLen([lq_tmp_x_295]) = 29)]}
bind 23 lq_anf__d13Q : {lq_tmp_x_318 : int | [(lq_tmp_x_318 = (1  :  int))]}
bind 24 lq_tmp_x_332 : {VV#333 : int | []}
bind 25 lq_anf__d13R : {lq_tmp_x_324 : [int] | [(len([lq_tmp_x_324]) = 0);
                                                ((? null([lq_tmp_x_324])) <=> true);
                                                (len([lq_tmp_x_324]) >= 0)]}
bind 26 lq_tmp_x_350 : {VV#351 : int | []}
bind 27 Zog.xs#rZN : {VV#314 : [int] | [$k__315;
                                        (len([VV#314]) >= 0)]}
bind 28 lq_anf__d13S : {lq_tmp_x_363 : GHC.Types.Bool | [$k__250[VV#249:=lq_tmp_x_363][ds_d13J:=Zog.xs#rZN][lq_tmp_x_365:=Zog.xs#rZN]]}
bind 29 Zog.prop1#r12i : {VV#358 : GHC.Types.Bool | [$k__359]}
bind 30 VV#381 : {VV#381 : GHC.Types.Bool | [(? Prop([VV#381]))]}
bind 31 VV#381 : {VV#381 : GHC.Types.Bool | [(? Prop([VV#381]))]}
bind 32 VV#384 : {VV#384 : GHC.Types.Bool | [(VV#384 = lq_anf__d13S)]}
bind 33 VV#384 : {VV#384 : GHC.Types.Bool | [(VV#384 = lq_anf__d13S)]}
bind 34 VV#387 : {VV#387 : [int] | [(VV#387 = Zog.xs#rZN);
                                    (len([VV#387]) >= 0)]}
bind 35 VV#387 : {VV#387 : [int] | [(VV#387 = Zog.xs#rZN);
                                    (len([VV#387]) >= 0)]}
bind 36 VV#390 : {VV#390 : int | [$k__308[VV#307:=VV#390][VV#314:=VV#387][lq_tmp_x_373:=VV#387][lq_tmp_x_370:=VV#390]]}
bind 37 VV#390 : {VV#390 : int | [$k__308[VV#307:=VV#390][VV#314:=VV#387][lq_tmp_x_373:=VV#387][lq_tmp_x_370:=VV#390]]}
bind 38 lq_tmp_x_361 : {VV#393 : int | []}
bind 39 VV#394 : {VV#394 : int | [$k__312[VV#311:=VV#394][lq_tmp_x_310:=lq_tmp_x_361][lq_tmp_x_371:=lq_tmp_x_361][lq_tmp_x_372:=VV#394]]}
bind 40 VV#394 : {VV#394 : int | [$k__312[VV#311:=VV#394][lq_tmp_x_310:=lq_tmp_x_361][lq_tmp_x_371:=lq_tmp_x_361][lq_tmp_x_372:=VV#394]]}
bind 41 VV#397 : {VV#397 : [int] | [(len([VV#397]) = (1 + len([lq_anf__d13R])));
                                    ((? null([VV#397])) <=> false);
                                    (xsListSelector([VV#397]) = lq_anf__d13R);
                                    (xListSelector([VV#397]) = lq_anf__d13Q);
                                    (len([VV#397]) >= 0)]}
bind 42 VV#397 : {VV#397 : [int] | [(len([VV#397]) = (1 + len([lq_anf__d13R])));
                                    ((? null([VV#397])) <=> false);
                                    (xsListSelector([VV#397]) = lq_anf__d13R);
                                    (xListSelector([VV#397]) = lq_anf__d13Q);
                                    (len([VV#397]) >= 0)]}
bind 43 VV#400 : {VV#400 : int | [$k__344[VV#343:=VV#400][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_342:=lq_anf__d13R][lq_tmp_x_338:=VV#397][lq_tmp_x_346:=VV#400]]}
bind 44 VV#400 : {VV#400 : int | [$k__344[VV#343:=VV#400][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_342:=lq_anf__d13R][lq_tmp_x_338:=VV#397][lq_tmp_x_346:=VV#400]]}
bind 45 lq_tmp_x_310 : {VV#403 : int | []}
bind 46 VV#404 : {VV#404 : int | [$k__348[lq_tmp_x_350:=lq_tmp_x_310][VV#347:=VV#404][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_342:=lq_anf__d13R][lq_tmp_x_337:=lq_tmp_x_310][lq_tmp_x_346:=VV#404]]}
bind 47 VV#404 : {VV#404 : int | [$k__348[lq_tmp_x_350:=lq_tmp_x_310][VV#347:=VV#404][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_342:=lq_anf__d13R][lq_tmp_x_337:=lq_tmp_x_310][lq_tmp_x_346:=VV#404]]}
bind 48 VV#407 : {VV#407 : [int] | [(VV#407 = lq_anf__d13R);
                                    (len([VV#407]) >= 0)]}
bind 49 VV#407 : {VV#407 : [int] | [(VV#407 = lq_anf__d13R);
                                    (len([VV#407]) >= 0)]}
bind 50 VV#410 : {VV#410 : int | [$k__326[VV#325:=VV#410][lq_tmp_x_328:=VV#410][lq_tmp_x_324:=VV#407][lq_tmp_x_356:=VV#407][lq_tmp_x_353:=VV#410]]}
bind 51 VV#410 : {VV#410 : int | [$k__326[VV#325:=VV#410][lq_tmp_x_328:=VV#410][lq_tmp_x_324:=VV#407][lq_tmp_x_356:=VV#407][lq_tmp_x_353:=VV#410]]}
bind 52 lq_tmp_x_335 : {VV#413 : int | []}
bind 53 VV#414 : {VV#414 : int | [$k__330[lq_tmp_x_332:=lq_tmp_x_335][VV#329:=VV#414][lq_tmp_x_328:=VV#414][lq_tmp_x_323:=lq_tmp_x_335][lq_tmp_x_354:=lq_tmp_x_335][lq_tmp_x_355:=VV#414]]}
bind 54 VV#414 : {VV#414 : int | [$k__330[lq_tmp_x_332:=lq_tmp_x_335][VV#329:=VV#414][lq_tmp_x_328:=VV#414][lq_tmp_x_323:=lq_tmp_x_335][lq_tmp_x_354:=lq_tmp_x_335][lq_tmp_x_355:=VV#414]]}
bind 55 VV#417 : {VV#417 : int | [(VV#417 = lq_anf__d13Q)]}
bind 56 VV#417 : {VV#417 : int | [(VV#417 = lq_anf__d13Q)]}
bind 57 VV#420 : {VV#420 : int | [(VV#420 = 1)]}
bind 58 VV#420 : {VV#420 : int | [(VV#420 = 1)]}
bind 59 VV#423 : {VV#423 : GHC.Types.Bool | [$k__293[ds_d13L:=GHC.Prim.void##0l][VV#292:=VV#423]]}
bind 60 VV#423 : {VV#423 : GHC.Types.Bool | [$k__293[ds_d13L:=GHC.Prim.void##0l][VV#292:=VV#423]]}
bind 61 VV#426 : {VV#426 : GHC.Prim.Void# | [(VV#426 = GHC.Prim.void##0l)]}
bind 62 VV#426 : {VV#426 : GHC.Prim.Void# | [(VV#426 = GHC.Prim.void##0l)]}
bind 63 VV#429 : {VV#429 : GHC.Types.Bool | [$k__301[VV#300:=VV#429][lq_tmp_x_299:=lq_anf__d13N][lq_tmp_x_303:=VV#429]]}
bind 64 VV#429 : {VV#429 : GHC.Types.Bool | [$k__301[VV#300:=VV#429][lq_tmp_x_299:=lq_anf__d13N][lq_tmp_x_303:=VV#429]]}
bind 65 VV#432 : {VV#432 : int | [(VV#432 = lq_anf__d13N)]}
bind 66 VV#432 : {VV#432 : int | [(VV#432 = lq_anf__d13N)]}
bind 67 VV#435 : {VV#435 : GHC.Types.Bool | [(? Prop([VV#435]))]}
bind 68 VV#435 : {VV#435 : GHC.Types.Bool | [(? Prop([VV#435]))]}
bind 69 VV#438 : {VV#438 : GHC.Types.Bool | [(VV#438 = GHC.Types.False#68)]}
bind 70 VV#438 : {VV#438 : GHC.Types.Bool | [(VV#438 = GHC.Types.False#68)]}
bind 71 VV#366 : {VV#366 : int | [$k__367]}
bind 72 VV#358 : {VV#358 : GHC.Types.Bool | [$k__359]}
bind 73 VV#347 : {VV#347 : int | [$k__348]}
bind 74 VV#343 : {VV#343 : int | [$k__344]}
bind 75 VV#329 : {VV#329 : int | [$k__330]}
bind 76 VV#325 : {VV#325 : int | [$k__326]}
bind 77 VV#314 : {VV#314 : [int] | [$k__315; (len([VV#314]) >= 0)]}
bind 78 VV#307 : {VV#307 : int | [$k__308]}
bind 79 lq_tmp_x_310 : {VV#449 : int | []}
bind 80 VV#311 : {VV#311 : int | [$k__312]}
bind 81 VV#245 : {VV#245 : [t_a13u] | [$k__246;
                                       (len([VV#245]) >= 0)]}
bind 82 lq_tmp_x_241 : {VV : t_a13u | []}
bind 83 VV#288 : {VV#288 : GHC.Prim.Void# | [$k__289]}
bind 84 VV#300 : {VV#300 : GHC.Types.Bool | [$k__301]}
bind 85 VV#292 : {VV#292 : GHC.Types.Bool | [$k__293]}
bind 86 VV#249 : {VV#249 : GHC.Types.Bool | [$k__250]}
bind 87 VV#228 : {VV#228 : [a_a13k] | [$k__229;
                                       (len([VV#228]) >= 0)]}
bind 88 lq_tmp_x_224 : {VV : a_a13k | []}
bind 89 lq_tmp_x_220 : {VV#228 : [a_a13k] | [$k__229;
                                             (len([VV#228]) >= 0)]}




constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       63]
  grd true
  lhs {VV#F16 : GHC.Types.Bool | [$k__301[VV#300:=VV#F16][lq_tmp_x_299:=lq_anf__d13N][lq_tmp_x_303:=VV#F16][VV#429:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : GHC.Types.Bool | [$k__293[VV#292:=VV#F16][VV#429:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [2]
  // META constraint id 16 : <no location info>


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 30]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__359[VV#358:=VV#F1][VV#381:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : meas00.hs:10:10-31


constraint:
  env [0; 16; 1; 2; 3; 67; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F17 : GHC.Types.Bool | [(? Prop([VV#F17]))]}
  rhs {VV#F17 : GHC.Types.Bool | [$k__250[VV#249:=VV#F17][VV#435:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [2]
  // META constraint id 17 : meas00.hs:8:10-28


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d13S)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [4]
  // META constraint id 2 : meas00.hs:10:25-30


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 69; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F18 : GHC.Types.Bool | [(VV#F18 = GHC.Types.False#68)]}
  rhs {VV#F18 : GHC.Types.Bool | [(? Prop([VV#F18]))]}
  id 18 tag [2]
  // META constraint id 18 : meas00.hs:8:24-28


constraint:
  env [0; 1; 2; 34; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12]
  grd true
  lhs {VV#F3 : [int] | [(VV#F3 = Zog.xs#rZN); (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [int] | [$k__246[VV#245:=VV#F3][lq_tmp_x_362:=VV#F3][VV#387:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : meas00.hs:10:29-30


constraint:
  env [0; 1; 2; 3; 35; 4; 36; 5; 6; 7; 8; 9; 10; 11; 27; 12]
  grd true
  lhs {VV#F4 : int | [$k__308[VV#307:=VV#F4][VV#314:=VV#387][lq_tmp_x_373:=VV#387][lq_tmp_x_370:=VV#F4][VV#390:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__367[VV#366:=VV#F4][lq_tmp_x_362:=VV#387][lq_tmp_x_369:=VV#F4][VV#390:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : meas00.hs:10:29-30


constraint:
  env [0; 1; 2; 3; 35; 4; 36; 5; 6; 7; 8; 9; 10; 11; 27; 12]
  grd true
  lhs {VV#F5 : int | [$k__308[VV#307:=VV#F5][VV#314:=VV#387][lq_tmp_x_373:=VV#387][lq_tmp_x_370:=VV#F5][VV#390:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__239[VV#245:=VV#387][VV#238:=VV#F5][lq_tmp_x_362:=VV#387][lq_tmp_x_369:=VV#F5][VV#390:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : meas00.hs:10:29-30


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 38; 7; 39; 8; 9; 10; 11; 27; 12]
  grd true
  lhs {VV#F6 : int | [$k__312[VV#311:=VV#F6][lq_tmp_x_310:=lq_tmp_x_361][lq_tmp_x_371:=lq_tmp_x_361][lq_tmp_x_372:=VV#F6][VV#394:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__243[lq_tmp_x_241:=lq_tmp_x_361][VV#242:=VV#F6][lq_tmp_x_369:=VV#F6][VV#394:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : meas00.hs:10:29-30


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 25; 41; 10; 11; 12]
  grd true
  lhs {VV#F7 : [int] | [(len([VV#F7]) = (1 + len([lq_anf__d13R])));
                        ((? null([VV#F7])) <=> false);
                        (xsListSelector([VV#F7]) = lq_anf__d13R);
                        (xListSelector([VV#F7]) = lq_anf__d13Q);
                        (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [int] | [$k__315[VV#314:=VV#F7][VV#397:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : meas00.hs:6:6-8


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 25; 10; 42; 11; 43; 12]
  grd true
  lhs {VV#F8 : int | [$k__344[VV#343:=VV#F8][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_342:=lq_anf__d13R][lq_tmp_x_338:=VV#397][lq_tmp_x_346:=VV#F8][VV#400:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__308[VV#314:=VV#397][VV#307:=VV#F8][VV#400:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : meas00.hs:6:6-8


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 25; 10; 42; 11; 12; 45; 46]
  grd true
  lhs {VV#F9 : int | [$k__348[lq_tmp_x_350:=lq_tmp_x_310][VV#347:=VV#F9][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_342:=lq_anf__d13R][lq_tmp_x_337:=lq_tmp_x_310][lq_tmp_x_346:=VV#F9][VV#404:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__312[VV#311:=VV#F9][VV#404:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : meas00.hs:6:6-8


constraint:
  env [0; 1; 49; 2; 50; 3; 4; 5; 6; 7; 23; 8; 9; 25; 10; 11; 12]
  grd true
  lhs {VV#F10 : int | [$k__326[VV#325:=VV#F10][lq_tmp_x_328:=VV#F10][lq_tmp_x_324:=VV#407][lq_tmp_x_356:=VV#407][lq_tmp_x_353:=VV#F10][VV#410:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : int | [$k__344[VV#343:=VV#F10][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_336:=VV#407][lq_tmp_x_346:=VV#F10][VV#410:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : meas00.hs:6:6-8


constraint:
  env [0; 1; 49; 2; 50; 3; 4; 5; 6; 7; 23; 8; 9; 25; 10; 11; 12]
  grd true
  lhs {VV#F11 : int | [$k__326[VV#325:=VV#F11][lq_tmp_x_328:=VV#F11][lq_tmp_x_324:=VV#407][lq_tmp_x_356:=VV#407][lq_tmp_x_353:=VV#F11][VV#410:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__348[lq_tmp_x_350:=lq_anf__d13Q][VV#347:=VV#F11][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_336:=VV#407][lq_tmp_x_346:=VV#F11][VV#410:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : meas00.hs:6:6-8


constraint:
  env [0; 1; 49; 2; 3; 4; 52; 5; 53; 6; 7; 23; 8; 9; 25; 10; 11; 12]
  grd true
  lhs {VV#F12 : int | [$k__330[lq_tmp_x_332:=lq_tmp_x_335][VV#329:=VV#F12][lq_tmp_x_328:=VV#F12][lq_tmp_x_323:=lq_tmp_x_335][lq_tmp_x_354:=lq_tmp_x_335][lq_tmp_x_355:=VV#F12][VV#414:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__348[lq_tmp_x_350:=lq_tmp_x_335][VV#347:=VV#F12][lq_tmp_x_341:=lq_anf__d13Q][lq_tmp_x_346:=VV#F12][VV#414:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : meas00.hs:6:6-8


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 55; 8; 9; 25; 10; 11; 12]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__d13Q)]}
  rhs {VV#F13 : int | [$k__344[VV#343:=VV#F13][lq_tmp_x_346:=VV#F13][VV#417:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : meas00.hs:6:7


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       59;
       12;
       13;
       14]
  grd true
  lhs {VV#F14 : GHC.Types.Bool | [$k__293[ds_d13L:=GHC.Prim.void##0l][VV#292:=VV#F14][VV#423:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : GHC.Types.Bool | [$k__250[VV#249:=VV#F14][VV#423:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [2]
  // META constraint id 14 : <no location info>


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       61;
       14]
  grd true
  lhs {VV#F15 : GHC.Prim.Void# | [(VV#F15 = GHC.Prim.void##0l)]}
  rhs {VV#F15 : GHC.Prim.Void# | [$k__289[VV#288:=VV#F15][VV#426:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [2]
  // META constraint id 15 : <no location info>




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12]
  reft {VV#366 : int | [$k__367]}
  
  // META wf  : meas00.hs:10:25-27


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12]
  reft {VV#358 : GHC.Types.Bool | [$k__359]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 25; 10; 26; 11; 12]
  reft {VV#347 : int | [$k__348]}
  
  // META wf  : meas00.hs:6:6-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 25; 10; 11; 12]
  reft {VV#343 : int | [$k__344]}
  
  // META wf  : meas00.hs:6:6-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 10; 11; 12]
  reft {VV#329 : int | [$k__330]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 10; 11; 12]
  reft {VV#325 : int | [$k__326]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#314 : [int] | [$k__315]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 77]
  reft {VV#307 : int | [$k__308]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 79]
  reft {VV#311 : int | [$k__312]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#245 : [t_a13u] | [$k__246]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 81; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#238 : t_a13u | [$k__239]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 82; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#242 : t_a13u | [$k__243]}
  
  // META wf  : <no location info>


wf:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14]
  reft {VV#288 : GHC.Prim.Void# | [$k__289]}
  
  // META wf  : <no location info>


wf:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14]
  reft {VV#300 : GHC.Types.Bool | [$k__301]}
  
  // META wf  : <no location info>


wf:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14]
  reft {VV#292 : GHC.Types.Bool | [$k__293]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#249 : GHC.Types.Bool | [$k__250]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#228 : [a_a13k] | [$k__229]}
  
  // META wf  : meas00.hs:16:10-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 87; 8; 9; 10; 11; 12]
  reft {VV#221 : a_a13k | [$k__222]}
  
  // META wf  : meas00.hs:16:10-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 88; 9; 10; 11; 12]
  reft {VV#225 : a_a13k | [$k__226]}
  
  // META wf  : meas00.hs:16:10-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 89; 10; 11; 12]
  reft {VV#231 : a_a13k | [$k__232]}
  
  // META wf  : meas00.hs:16:10-18







