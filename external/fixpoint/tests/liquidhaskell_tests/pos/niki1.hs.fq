qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : b_a12o, fix##126#A0 : a_a12n): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "niki1.hs" (line 6, column 17)
qualif Auto(vv : a_a12n, fix##126#A0 : a_a12n): (vv = fix##126#A0) // "niki1.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12n  b_a12o), fix##126#A0 : b_a12o): (y([VV]) = fix##126#A0) // "niki1.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12n  b_a12o), fix##126#A0 : a_a12n): (x([VV]) = fix##126#A0) // "niki1.hs" (line 6, column 17)
qualif Auto(v : b_a12o, fix##126#P : (Pred  b_a12o  a_a12n), fix##126#A0 : a_a12n): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "niki1.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : b_a12o, fix##126#A0 : a_a12n): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "niki1.hs" (line 6, column 17)
qualif Auto(vv : a_a12n, fix##126#A0 : a_a12n): (vv = fix##126#A0) // "niki1.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12n  b_a12o), fix##126#A0 : b_a12o): (y([VV]) = fix##126#A0) // "niki1.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12n  b_a12o), fix##126#A0 : a_a12n): (x([VV]) = fix##126#A0) // "niki1.hs" (line 6, column 17)
qualif Auto(v : b_a12o, fix##126#P : (Pred  b_a12o  a_a12n), fix##126#A0 : a_a12n): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "niki1.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant y : (func(2, [(Niki.Pair  @(0)  @(1)); @(1)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant Niki.P#r12h : (func(2, [@(0);
                                 @(1);
                                 (Niki.Pair  @(0)  @(1))]))
constant x : (func(2, [(Niki.Pair  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant Niki.P#r12h : (func(2, [@(0);
                                 @(1);
                                 (Niki.Pair  @(0)  @(1))]))


bind 0 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#181 : (GHC.Classes.Ord  int) | []}
bind 1 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#182 : (GHC.Num.Num  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#186 : GHC.Types.Ordering | [(VV#186 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#187 : GHC.Types.Ordering | [(VV#187 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#188 : GHC.Types.Ordering | [(VV#188 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#229 : GHC.Types.Ordering | [(cmp([VV#229]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#230 : GHC.Types.Ordering | [(cmp([VV#230]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#231 : GHC.Types.Ordering | [(cmp([VV#231]) = GHC.Types.GT#6W)]}
bind 10 x#a13x : {VV#236 : int | [$k__237]}
bind 11 lq_anf__d149 : {lq_tmp_x_244 : int | [(lq_tmp_x_244 = (1  :  int))]}
bind 12 x#a13y : {VV#263 : int | [$k__264]}
bind 13 lq_anf__d14a : {lq_tmp_x_281 : int | [$k__241[VV#240:=lq_tmp_x_281][x#a13x:=x#a13y][lq_tmp_x_283:=x#a13y]]}
bind 14 lq_tmp_x_303 : {VV#304 : int | []}
bind 15 ds_d148 : {VV#318 : (Niki.Pair  int  int) | [$k__319]}
bind 16 lq_anf__d14b : {lq_tmp_x_329 : (Niki.Pair  int  int) | [(lq_tmp_x_329 = ds_d148)]}
bind 17 lq_anf__d14b : {lq_tmp_x_335 : (Niki.Pair  int  int) | [(lq_tmp_x_335 = ds_d148)]}
bind 18 x#a13A : {lq_tmp_x_331 : int | [$k__309[VV#308:=lq_tmp_x_331][VV#318:=lq_anf__d14b][lq_tmp_x_325:=lq_tmp_x_331][lq_tmp_x_329:=lq_anf__d14b][lq_tmp_x_335:=lq_anf__d14b]]}
bind 19 y#a13B : {lq_tmp_x_332 : int | [$k__312[VV#311:=lq_tmp_x_332][VV#318:=lq_anf__d14b][lq_tmp_x_326:=lq_tmp_x_332][lq_tmp_x_329:=lq_anf__d14b][lq_tmp_x_335:=lq_anf__d14b][lq_tmp_x_340:=x#a13A];
                                        $k__316[VV#315:=lq_tmp_x_332][lq_tmp_x_314:=x#a13A][lq_tmp_x_328:=lq_tmp_x_332][lq_tmp_x_327:=x#a13A][lq_tmp_x_333:=x#a13A][lq_tmp_x_334:=lq_tmp_x_332][lq_tmp_x_340:=x#a13A]]}
bind 20 lq_anf__d14b : {lq_tmp_x_335 : (Niki.Pair  int  int) | [(lq_tmp_x_335 = ds_d148);
                                                                (y([lq_tmp_x_335]) = y#a13B);
                                                                (x([lq_tmp_x_335]) = x#a13A);
                                                                (lq_tmp_x_335 = Niki.P#r12h([x#a13A;
                                                                                             y#a13B]));
                                                                (y([lq_tmp_x_335]) = y#a13B);
                                                                (x([lq_tmp_x_335]) = x#a13A)]}
bind 21 lq_anf__d14c : {lq_tmp_x_351 : GHC.Types.Bool | [((? Prop([lq_tmp_x_351])) <=> (x#a13A < y#a13B))]}
bind 22 lq_anf__d14d : {lq_tmp_x_377 : int | [(lq_tmp_x_377 = (100  :  int))]}
bind 23 n#a13z : {lq_tmp_x_383 : int | []}
bind 24 lq_anf__d14e : {lq_tmp_x_393 : (Niki.Pair  int  int) | [$k__278[VV#277:=lq_tmp_x_393][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z]]}
bind 25 Niki.prop#r12k : {VV#373 : GHC.Types.Bool | [$k__374]}
bind 26 VV#412 : {VV#412 : GHC.Types.Bool | [$k__323[VV#322:=VV#412][ds_d148:=lq_anf__d14e][lq_tmp_x_405:=lq_anf__d14e][lq_tmp_x_403:=VV#412]]}
bind 27 VV#412 : {VV#412 : GHC.Types.Bool | [$k__323[VV#322:=VV#412][ds_d148:=lq_anf__d14e][lq_tmp_x_405:=lq_anf__d14e][lq_tmp_x_403:=VV#412]]}
bind 28 VV#415 : {VV#415 : (Niki.Pair  int  int) | [(VV#415 = lq_anf__d14e)]}
bind 29 VV#415 : {VV#415 : (Niki.Pair  int  int) | [(VV#415 = lq_anf__d14e)]}
bind 30 VV#418 : {VV#418 : int | [$k__268[VV#267:=VV#418][VV#277:=VV#415][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_389:=VV#418][lq_tmp_x_393:=VV#415][lq_tmp_x_410:=VV#415][lq_tmp_x_406:=VV#418]]}
bind 31 VV#418 : {VV#418 : int | [$k__268[VV#267:=VV#418][VV#277:=VV#415][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_389:=VV#418][lq_tmp_x_393:=VV#415][lq_tmp_x_410:=VV#415][lq_tmp_x_406:=VV#418]]}
bind 32 VV#421 : {VV#421 : int | [$k__271[VV#270:=VV#421][VV#277:=VV#415][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_390:=VV#421][lq_tmp_x_393:=VV#415][lq_tmp_x_410:=VV#415][lq_tmp_x_407:=VV#421]]}
bind 33 VV#421 : {VV#421 : int | [$k__271[VV#270:=VV#421][VV#277:=VV#415][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_390:=VV#421][lq_tmp_x_393:=VV#415][lq_tmp_x_410:=VV#415][lq_tmp_x_407:=VV#421]]}
bind 34 lq_tmp_x_400 : {VV#424 : int | []}
bind 35 VV#425 : {VV#425 : int | [$k__275[VV#274:=VV#425][lq_tmp_x_273:=lq_tmp_x_400][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_392:=VV#425][lq_tmp_x_391:=lq_tmp_x_400][lq_tmp_x_408:=lq_tmp_x_400][lq_tmp_x_409:=VV#425]]}
bind 36 VV#425 : {VV#425 : int | [$k__275[VV#274:=VV#425][lq_tmp_x_273:=lq_tmp_x_400][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_392:=VV#425][lq_tmp_x_391:=lq_tmp_x_400][lq_tmp_x_408:=lq_tmp_x_400][lq_tmp_x_409:=VV#425]]}
bind 37 VV#428 : {VV#428 : int | [(VV#428 = n#a13z)]}
bind 38 VV#428 : {VV#428 : int | [(VV#428 = n#a13z)]}
bind 39 VV#431 : {VV#431 : int | [(VV#431 = lq_anf__d14d)]}
bind 40 VV#431 : {VV#431 : int | [(VV#431 = lq_anf__d14d)]}
bind 41 VV#434 : {VV#434 : int | [(VV#434 = 100)]}
bind 42 VV#434 : {VV#434 : int | [(VV#434 = 100)]}
bind 43 VV#437 : {VV#437 : GHC.Types.Bool | [(? Prop([VV#437]))]}
bind 44 VV#437 : {VV#437 : GHC.Types.Bool | [(? Prop([VV#437]))]}
bind 45 VV#440 : {VV#440 : GHC.Types.Bool | [(VV#440 = lq_anf__d14c)]}
bind 46 VV#440 : {VV#440 : GHC.Types.Bool | [(VV#440 = lq_anf__d14c)]}
bind 47 VV#443 : {VV#443 : int | [(VV#443 = y#a13B)]}
bind 48 VV#443 : {VV#443 : int | [(VV#443 = y#a13B)]}
bind 49 VV#446 : {VV#446 : int | [(VV#446 = x#a13A)]}
bind 50 VV#446 : {VV#446 : int | [(VV#446 = x#a13A)]}
bind 51 VV#449 : {VV#449 : (Niki.Pair  int  int) | [(y([VV#449]) = lq_anf__d14a);
                                                    (x([VV#449]) = x#a13y)]}
bind 52 VV#449 : {VV#449 : (Niki.Pair  int  int) | [(y([VV#449]) = lq_anf__d14a);
                                                    (x([VV#449]) = x#a13y)]}
bind 53 VV#452 : {VV#452 : int | [$k__293[VV#292:=VV#452][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_287:=VV#449][lq_tmp_x_295:=VV#452]]}
bind 54 VV#452 : {VV#452 : int | [$k__293[VV#292:=VV#452][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_287:=VV#449][lq_tmp_x_295:=VV#452]]}
bind 55 VV#455 : {VV#455 : int | [$k__297[VV#296:=VV#455][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_287:=VV#449][lq_tmp_x_299:=VV#455]]}
bind 56 VV#455 : {VV#455 : int | [$k__297[VV#296:=VV#455][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_287:=VV#449][lq_tmp_x_299:=VV#455]]}
bind 57 lq_tmp_x_273 : {VV#458 : int | []}
bind 58 VV#459 : {VV#459 : int | [$k__301[lq_tmp_x_303:=lq_tmp_x_273][VV#300:=VV#459][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_286:=lq_tmp_x_273][lq_tmp_x_299:=VV#459]]}
bind 59 VV#459 : {VV#459 : int | [$k__301[lq_tmp_x_303:=lq_tmp_x_273][VV#300:=VV#459][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_286:=lq_tmp_x_273][lq_tmp_x_299:=VV#459]]}
bind 60 VV#462 : {VV#462 : int | [(VV#462 = lq_anf__d14a)]}
bind 61 VV#462 : {VV#462 : int | [(VV#462 = lq_anf__d14a)]}
bind 62 VV#465 : {VV#465 : int | [(VV#465 = x#a13y)]}
bind 63 VV#465 : {VV#465 : int | [(VV#465 = x#a13y)]}
bind 64 VV#468 : {VV#468 : int | [(VV#468 = x#a13y)]}
bind 65 VV#468 : {VV#468 : int | [(VV#468 = x#a13y)]}
bind 66 VV#471 : {VV#471 : int | [(VV#471 = (x#a13x + lq_anf__d149))]}
bind 67 VV#471 : {VV#471 : int | [(VV#471 = (x#a13x + lq_anf__d149))]}
bind 68 VV#474 : {VV#474 : int | [(VV#474 = lq_anf__d149)]}
bind 69 VV#474 : {VV#474 : int | [(VV#474 = lq_anf__d149)]}
bind 70 VV#477 : {VV#477 : int | [(VV#477 = x#a13x)]}
bind 71 VV#477 : {VV#477 : int | [(VV#477 = x#a13x)]}
bind 72 VV#480 : {VV#480 : int | [(VV#480 = 1)]}
bind 73 VV#480 : {VV#480 : int | [(VV#480 = 1)]}
bind 74 VV#373 : {VV#373 : GHC.Types.Bool | [$k__374]}
bind 75 VV#318 : {VV#318 : (Niki.Pair  int  int) | [$k__319]}
bind 76 VV#308 : {VV#308 : int | [$k__309]}
bind 77 VV#311 : {VV#311 : int | [$k__312]}
bind 78 lq_tmp_x_314 : {VV#487 : int | []}
bind 79 VV#315 : {VV#315 : int | [$k__316]}
bind 80 VV#358 : {VV#358 : int | [$k__359]}
bind 81 VV#322 : {VV#322 : GHC.Types.Bool | [$k__323]}
bind 82 VV#263 : {VV#263 : int | [$k__264]}
bind 83 VV#300 : {VV#300 : int | [$k__301]}
bind 84 VV#296 : {VV#296 : int | [$k__297]}
bind 85 VV#292 : {VV#292 : int | [$k__293]}
bind 86 VV#277 : {VV#277 : (Niki.Pair  int  int) | [$k__278]}
bind 87 VV#267 : {VV#267 : int | [$k__268]}
bind 88 VV#270 : {VV#270 : int | [$k__271]}
bind 89 lq_tmp_x_273 : {VV#498 : int | []}
bind 90 VV#274 : {VV#274 : int | [$k__275]}
bind 91 VV#236 : {VV#236 : int | [$k__237]}
bind 92 VV#240 : {VV#240 : int | [$k__241]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 60; 13]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = lq_anf__d14a)]}
  rhs {VV#F16 : int | [$k__301[lq_tmp_x_303:=x#a13y][VV#300:=VV#F16][lq_tmp_x_290:=x#a13y][lq_tmp_x_299:=VV#F16][VV#462:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [3]
  // META constraint id 16 : niki1.hs:12:14-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 26]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [$k__323[VV#322:=VV#F1][ds_d148:=lq_anf__d14e][lq_tmp_x_405:=lq_anf__d14e][lq_tmp_x_403:=VV#F1][VV#412:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__374[VV#373:=VV#F1][VV#412:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : niki1.hs:15:8-18


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 62]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = x#a13y)]}
  rhs {VV#F17 : int | [$k__293[VV#292:=VV#F17][lq_tmp_x_295:=VV#F17][VV#465:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [3]
  // META constraint id 17 : niki1.hs:12:11


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 28]
  grd true
  lhs {VV#F2 : (Niki.Pair  int  int) | [(VV#F2 = lq_anf__d14e)]}
  rhs {VV#F2 : (Niki.Pair  int  int) | [$k__319[VV#318:=VV#F2][lq_tmp_x_402:=VV#F2][VV#415:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [4]
  // META constraint id 2 : niki1.hs:15:13-17


constraint:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12]
  grd true
  lhs {VV#F18 : int | [(VV#F18 = x#a13y)]}
  rhs {VV#F18 : int | [$k__237[VV#236:=VV#F18][lq_tmp_x_280:=VV#F18][VV#468:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [3]
  // META constraint id 18 : niki1.hs:12:19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 29; 30]
  grd true
  lhs {VV#F3 : int | [$k__268[VV#267:=VV#F3][VV#277:=VV#415][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_389:=VV#F3][lq_tmp_x_393:=VV#415][lq_tmp_x_410:=VV#415][lq_tmp_x_406:=VV#F3][VV#418:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__309[VV#308:=VV#F3][VV#318:=VV#415][lq_tmp_x_402:=VV#415][lq_tmp_x_398:=VV#F3][VV#418:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : niki1.hs:15:13-17


constraint:
  env [0; 1; 2; 66; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  grd true
  lhs {VV#F19 : int | [(VV#F19 = (x#a13x + lq_anf__d149))]}
  rhs {VV#F19 : int | [$k__241[VV#240:=VV#F19][VV#471:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [2]
  // META constraint id 19 : niki1.hs:9:10-14


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 29]
  grd true
  lhs {VV#F4 : int | [$k__271[VV#270:=VV#F4][VV#277:=VV#415][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_390:=VV#F4][lq_tmp_x_393:=VV#415][lq_tmp_x_410:=VV#415][lq_tmp_x_407:=VV#F4][VV#421:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__312[VV#311:=VV#F4][VV#318:=VV#415][lq_tmp_x_402:=VV#415][lq_tmp_x_399:=VV#F4][VV#421:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : niki1.hs:15:13-17


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 5; 6; 22; 7; 23; 8; 24; 9; 29]
  grd true
  lhs {VV#F5 : int | [$k__275[VV#274:=VV#F5][lq_tmp_x_273:=lq_tmp_x_400][x#a13y:=n#a13z][lq_tmp_x_395:=n#a13z][lq_tmp_x_392:=VV#F5][lq_tmp_x_391:=lq_tmp_x_400][lq_tmp_x_408:=lq_tmp_x_400][lq_tmp_x_409:=VV#F5][VV#425:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__316[VV#315:=VV#F5][lq_tmp_x_314:=lq_tmp_x_400][lq_tmp_x_401:=VV#F5][VV#425:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : niki1.hs:15:13-17


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 22; 7; 23; 8; 9]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = n#a13z)]}
  rhs {VV#F6 : int | [$k__264[VV#263:=VV#F6][lq_tmp_x_388:=VV#F6][VV#428:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : niki1.hs:15:17


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9; 43; 15]
  grd true
  lhs {VV#F7 : GHC.Types.Bool | [(? Prop([VV#F7]))]}
  rhs {VV#F7 : GHC.Types.Bool | [$k__323[VV#322:=VV#F7][VV#437:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : niki1.hs:22:15-35


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9; 45; 15]
  grd true
  lhs {VV#F8 : GHC.Types.Bool | [(VV#F8 = lq_anf__d14c)]}
  rhs {VV#F8 : GHC.Types.Bool | [(? Prop([VV#F8]))]}
  id 8 tag [1]
  // META constraint id 8 : niki1.hs:22:30-34


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9; 15; 47]
  grd true
  lhs {VV#F9 : int | [(VV#F9 = y#a13B)]}
  rhs {VV#F9 : int | [$k__359[VV#358:=VV#F9][lq_tmp_x_355:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_356:=x#a13A][lq_tmp_x_361:=VV#F9][VV#443:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : niki1.hs:22:34


constraint:
  env [0; 16; 1; 17; 49; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = x#a13A)]}
  rhs {VV#F10 : int | [$k__359[VV#358:=VV#F10][lq_tmp_x_355:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_361:=VV#F10][VV#446:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : niki1.hs:22:30


constraint:
  env [0; 1; 2; 3; 51; 4; 5; 6; 7; 8; 9; 12; 13]
  grd true
  lhs {VV#F11 : (Niki.Pair  int  int) | [(y([VV#F11]) = lq_anf__d14a);
                                         (x([VV#F11]) = x#a13y)]}
  rhs {VV#F11 : (Niki.Pair  int  int) | [$k__278[VV#277:=VV#F11][VV#449:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : niki1.hs:12:9-20


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 53; 6; 7; 8; 9; 12; 13]
  grd true
  lhs {VV#F12 : int | [$k__293[VV#292:=VV#F12][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_287:=VV#449][lq_tmp_x_295:=VV#F12][VV#452:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__268[VV#277:=VV#449][VV#267:=VV#F12][VV#452:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : niki1.hs:12:9-20


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 7; 55; 8; 9; 12; 13]
  grd true
  lhs {VV#F13 : int | [$k__297[VV#296:=VV#F13][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_287:=VV#449][lq_tmp_x_299:=VV#F13][VV#455:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : int | [$k__271[VV#277:=VV#449][VV#270:=VV#F13][VV#455:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : niki1.hs:12:9-20


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 7; 8; 9; 57; 58; 12; 13]
  grd true
  lhs {VV#F14 : int | [$k__301[lq_tmp_x_303:=lq_tmp_x_273][VV#300:=VV#F14][lq_tmp_x_290:=x#a13y][lq_tmp_x_291:=lq_anf__d14a][lq_tmp_x_286:=lq_tmp_x_273][lq_tmp_x_299:=VV#F14][VV#459:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : int | [$k__275[VV#274:=VV#F14][VV#459:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [3]
  // META constraint id 14 : niki1.hs:12:9-20


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 60; 13]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = lq_anf__d14a)]}
  rhs {VV#F15 : int | [$k__297[VV#296:=VV#F15][lq_tmp_x_290:=x#a13y][lq_tmp_x_299:=VV#F15][VV#462:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [3]
  // META constraint id 15 : niki1.hs:12:14-19




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#373 : GHC.Types.Bool | [$k__374]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#318 : (Niki.Pair  int  int) | [$k__319]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 75]
  reft {VV#308 : int | [$k__309]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 75]
  reft {VV#311 : int | [$k__312]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 78]
  reft {VV#315 : int | [$k__316]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9; 15]
  reft {VV#358 : int | [$k__359]}
  
  // META wf  : niki1.hs:22:32


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#322 : GHC.Types.Bool | [$k__323]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#263 : int | [$k__264]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14]
  reft {VV#300 : int | [$k__301]}
  
  // META wf  : niki1.hs:12:9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13]
  reft {VV#296 : int | [$k__297]}
  
  // META wf  : niki1.hs:12:9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13]
  reft {VV#292 : int | [$k__293]}
  
  // META wf  : niki1.hs:12:9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12]
  reft {VV#277 : (Niki.Pair  int  int) | [$k__278]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 86; 7; 8; 9; 12]
  reft {VV#267 : int | [$k__268]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 86; 7; 8; 9; 12]
  reft {VV#270 : int | [$k__271]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 89; 12]
  reft {VV#274 : int | [$k__275]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#236 : int | [$k__237]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#240 : int | [$k__241]}
  
  // META wf  : <no location info>







