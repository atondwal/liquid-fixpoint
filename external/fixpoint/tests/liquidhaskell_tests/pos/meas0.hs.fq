qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Types.False#68 : {VV#179 : GHC.Types.Bool | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 GHC.Types.True#6u : {VV#182 : GHC.Types.Bool | []}
bind 3 fix#GHC.Integer.Type.#36#fEqInteger#35#rX4 : {VV#185 : (GHC.Classes.Eq  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#186 : GHC.Types.Ordering | [(VV#186 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#187 : GHC.Types.Ordering | [(VV#187 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#188 : GHC.Types.Ordering | [(VV#188 = GHC.Types.GT#6W)]}
bind 7 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 8 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 9 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 10 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 11 GHC.Types.EQ#6U : {VV#231 : GHC.Types.Ordering | [(cmp([VV#231]) = GHC.Types.EQ#6U)]}
bind 12 GHC.Types.LT#6S : {VV#232 : GHC.Types.Ordering | [(cmp([VV#232]) = GHC.Types.LT#6S)]}
bind 13 GHC.Types.GT#6W : {VV#233 : GHC.Types.Ordering | [(cmp([VV#233]) = GHC.Types.GT#6W)]}
bind 14 ds_d17W : {VV#244 : [t_a16U] | [$k__245;
                                        (len([VV#244]) >= 0)]}
bind 15 lq_anf__d180 : {lq_tmp_x_252 : [t_a16U] | [(lq_tmp_x_252 = ds_d17W);
                                                   (len([lq_tmp_x_252]) >= 0)]}
bind 16 lq_anf__d180 : {lq_tmp_x_255 : [t_a16U] | [(lq_tmp_x_255 = ds_d17W);
                                                   (len([lq_tmp_x_255]) >= 0);
                                                   (len([lq_tmp_x_255]) >= 0)]}
bind 17 lq_anf__d180 : {lq_tmp_x_255 : [t_a16U] | [(lq_tmp_x_255 = ds_d17W);
                                                   (len([lq_tmp_x_255]) >= 0);
                                                   (len([lq_tmp_x_255]) = 0);
                                                   ((? null([lq_tmp_x_255])) <=> true);
                                                   (lq_tmp_x_255 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (len([lq_tmp_x_255]) = 0);
                                                   ((? null([lq_tmp_x_255])) <=> true);
                                                   (len([lq_tmp_x_255]) >= 0)]}
bind 18 lq_anf__d180 : {lq_tmp_x_268 : [t_a16U] | [(lq_tmp_x_268 = ds_d17W);
                                                   (len([lq_tmp_x_268]) >= 0);
                                                   (len([lq_tmp_x_268]) >= 0)]}
bind 19 x#a16E : {VV#237 : t_a16U | [$k__238[VV#244:=lq_anf__d180][lq_tmp_x_252:=lq_anf__d180][lq_tmp_x_268:=lq_anf__d180]]}
bind 20 ds_d17X : {lq_tmp_x_278 : [t_a16U] | [(len([lq_tmp_x_278]) >= 0)]}
bind 21 lq_anf__d180 : {lq_tmp_x_268 : [t_a16U] | [(lq_tmp_x_268 = ds_d17W);
                                                   (len([lq_tmp_x_268]) >= 0);
                                                   (len([lq_tmp_x_268]) = (1 + len([ds_d17X])));
                                                   ((? null([lq_tmp_x_268])) <=> false);
                                                   (xsListSelector([lq_tmp_x_268]) = ds_d17X);
                                                   (xListSelector([lq_tmp_x_268]) = x#a16E);
                                                   (lq_tmp_x_268 = fix#GHC.Types.#58##35#64([x#a16E;
                                                                                             ds_d17X]));
                                                   (len([lq_tmp_x_268]) = (1 + len([ds_d17X])));
                                                   ((? null([lq_tmp_x_268])) <=> false);
                                                   (xsListSelector([lq_tmp_x_268]) = ds_d17X);
                                                   (xListSelector([lq_tmp_x_268]) = x#a16E);
                                                   (len([lq_tmp_x_268]) >= 0)]}
bind 22 lq_anf__d181 : {lq_tmp_x_287 : int | [(lq_tmp_x_287 = 0)]}
bind 23 lq_anf__d182 : {lq_tmp_x_289 : int | [(lq_tmp_x_289 = 0)]}
bind 24 ds_d17Y : {VV#308 : t_a175 | [$k__309]}
bind 25 ds_d17Z : {VV#314 : t_a17g | [$k__315]}
bind 26 x#a16C : {VV#320 : t_a17w | [$k__321]}
bind 27 lq_tmp_x_342 : {VV : t_a17w | []}
bind 28 lq_anf__d183 : {lq_tmp_x_335 : [t_a17w] | [(len([lq_tmp_x_335]) = 0);
                                                   ((? null([lq_tmp_x_335])) <=> true);
                                                   (len([lq_tmp_x_335]) >= 0)]}
bind 29 lq_tmp_x_359 : {VV : t_a17w | []}
bind 30 z#a16D : {lq_tmp_x_348 : [t_a17w] | [(len([lq_tmp_x_348]) = (1 + len([lq_anf__d183])));
                                             ((? null([lq_tmp_x_348])) <=> false);
                                             (xsListSelector([lq_tmp_x_348]) = lq_anf__d183);
                                             (xListSelector([lq_tmp_x_348]) = x#a16C);
                                             (len([lq_tmp_x_348]) >= 0)]}
bind 31 lq_anf__d184 : {lq_tmp_x_378 : int | [(lq_tmp_x_378 = (0  :  int))]}
bind 32 lq_anf__d185 : {lq_tmp_x_384 : int | []}
bind 33 Range.xs#r12k : {VV#374 : [int] | [$k__375;
                                           (len([VV#374]) >= 0)]}
bind 34 lq_anf__d186 : {lq_tmp_x_404 : GHC.Types.Bool | [$k__249[VV#248:=lq_tmp_x_404][ds_d17W:=Range.xs#r12k][lq_tmp_x_406:=Range.xs#r12k]]}
bind 35 Range.prop1#r12l : {VV#399 : GHC.Types.Bool | [$k__400]}
bind 36 VV#422 : {VV#422 : GHC.Types.Bool | [(? Prop([VV#422]))]}
bind 37 VV#422 : {VV#422 : GHC.Types.Bool | [(? Prop([VV#422]))]}
bind 38 VV#425 : {VV#425 : GHC.Types.Bool | [(VV#425 = lq_anf__d186)]}
bind 39 VV#425 : {VV#425 : GHC.Types.Bool | [(VV#425 = lq_anf__d186)]}
bind 40 VV#428 : {VV#428 : [int] | [(VV#428 = Range.xs#r12k);
                                    (len([VV#428]) >= 0)]}
bind 41 VV#428 : {VV#428 : [int] | [(VV#428 = Range.xs#r12k);
                                    (len([VV#428]) >= 0)]}
bind 42 VV#431 : {VV#431 : int | [$k__368[VV#367:=VV#431][VV#374:=VV#428][lq_tmp_x_414:=VV#428][lq_tmp_x_411:=VV#431]]}
bind 43 VV#431 : {VV#431 : int | [$k__368[VV#367:=VV#431][VV#374:=VV#428][lq_tmp_x_414:=VV#428][lq_tmp_x_411:=VV#431]]}
bind 44 lq_tmp_x_402 : {VV#434 : int | []}
bind 45 VV#435 : {VV#435 : int | [$k__372[VV#371:=VV#435][lq_tmp_x_370:=lq_tmp_x_402][lq_tmp_x_412:=lq_tmp_x_402][lq_tmp_x_413:=VV#435]]}
bind 46 VV#435 : {VV#435 : int | [$k__372[VV#371:=VV#435][lq_tmp_x_370:=lq_tmp_x_402][lq_tmp_x_412:=lq_tmp_x_402][lq_tmp_x_413:=VV#435]]}
bind 47 VV#438 : {VV#438 : [int] | [$k__332[VV#331:=VV#438][x#a16C:=lq_anf__d185][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438];
                                    (len([VV#438]) >= 0)]}
bind 48 VV#438 : {VV#438 : [int] | [$k__332[VV#331:=VV#438][x#a16C:=lq_anf__d185][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438];
                                    (len([VV#438]) >= 0)]}
bind 49 VV#441 : {VV#441 : int | [$k__394[VV#393:=VV#441][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438][lq_tmp_x_396:=VV#441];
                                  $k__325[VV#331:=VV#438][x#a16C:=lq_anf__d185][VV#324:=VV#441][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438][lq_tmp_x_396:=VV#441]]}
bind 50 VV#441 : {VV#441 : int | [$k__394[VV#393:=VV#441][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438][lq_tmp_x_396:=VV#441];
                                  $k__325[VV#331:=VV#438][x#a16C:=lq_anf__d185][VV#324:=VV#441][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438][lq_tmp_x_396:=VV#441]]}
bind 51 lq_tmp_x_370 : {VV#444 : int | []}
bind 52 VV#445 : {VV#445 : int | [$k__329[lq_tmp_x_327:=lq_tmp_x_370][x#a16C:=lq_anf__d185][VV#328:=VV#445][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_389:=lq_tmp_x_370][lq_tmp_x_396:=VV#445]]}
bind 53 VV#445 : {VV#445 : int | [$k__329[lq_tmp_x_327:=lq_tmp_x_370][x#a16C:=lq_anf__d185][VV#328:=VV#445][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_389:=lq_tmp_x_370][lq_tmp_x_396:=VV#445]]}
bind 54 VV#448 : {VV#448 : int | [(VV#448 = lq_anf__d185)]}
bind 55 VV#448 : {VV#448 : int | [(VV#448 = lq_anf__d185)]}
bind 56 VV#451 : {VV#451 : int | [(VV#451 = lq_anf__d184)]}
bind 57 VV#451 : {VV#451 : int | [(VV#451 = lq_anf__d184)]}
bind 58 VV#454 : {VV#454 : int | [(VV#454 = 0)]}
bind 59 VV#454 : {VV#454 : int | [(VV#454 = 0)]}
bind 60 VV#457 : {VV#457 : [t_a17w] | [(VV#457 = z#a16D);
                                       (len([VV#457]) >= 0)]}
bind 61 VV#457 : {VV#457 : [t_a17w] | [(VV#457 = z#a16D);
                                       (len([VV#457]) >= 0)]}
bind 62 VV#353 : {VV#353 : t_a17w | [$k__354[lq_tmp_x_351:=x#a16C][lq_tmp_x_352:=lq_anf__d183][lq_tmp_x_348:=VV#457][lq_tmp_x_365:=VV#457]]}
bind 63 lq_tmp_x_327 : {VV : t_a17w | []}
bind 64 VV#353 : {VV#353 : t_a17w | [$k__357[lq_tmp_x_359:=lq_tmp_x_327][VV#356:=VV#353][lq_tmp_x_351:=x#a16C][lq_tmp_x_352:=lq_anf__d183][lq_tmp_x_347:=lq_tmp_x_327][lq_tmp_x_364:=lq_tmp_x_327]]}
bind 65 VV#463 : {VV#463 : [t_a17w] | [(VV#463 = lq_anf__d183);
                                       (len([VV#463]) >= 0)]}
bind 66 VV#463 : {VV#463 : [t_a17w] | [(VV#463 = lq_anf__d183);
                                       (len([VV#463]) >= 0)]}
bind 67 VV#336 : {VV#336 : t_a17w | [$k__337[lq_tmp_x_335:=VV#463][lq_tmp_x_362:=VV#463]]}
bind 68 lq_tmp_x_345 : {VV : t_a17w | []}
bind 69 VV#336 : {VV#336 : t_a17w | [$k__340[lq_tmp_x_342:=lq_tmp_x_345][VV#339:=VV#336][lq_tmp_x_334:=lq_tmp_x_345][lq_tmp_x_361:=lq_tmp_x_345]]}
bind 70 VV#320 : {VV#320 : t_a17w | [(VV#320 = x#a16C)]}
bind 71 VV#470 : {VV#470 : GHC.Types.Bool | [((? Prop([VV#470])) <=> (lq_anf__d181 = lq_anf__d182))]}
bind 72 VV#470 : {VV#470 : GHC.Types.Bool | [((? Prop([VV#470])) <=> (lq_anf__d181 = lq_anf__d182))]}
bind 73 VV#473 : {VV#473 : int | [(VV#473 = lq_anf__d182)]}
bind 74 VV#473 : {VV#473 : int | [(VV#473 = lq_anf__d182)]}
bind 75 VV#476 : {VV#476 : int | [(VV#476 = lq_anf__d181)]}
bind 76 VV#476 : {VV#476 : int | [(VV#476 = lq_anf__d181)]}
bind 77 VV#479 : {VV#479 : GHC.Types.Bool | [(? Prop([VV#479]))]}
bind 78 VV#479 : {VV#479 : GHC.Types.Bool | [(? Prop([VV#479]))]}
bind 79 VV#482 : {VV#482 : GHC.Types.Bool | [(VV#482 = GHC.Types.False#68)]}
bind 80 VV#482 : {VV#482 : GHC.Types.Bool | [(VV#482 = GHC.Types.False#68)]}
bind 81 VV#407 : {VV#407 : int | [$k__408]}
bind 82 VV#399 : {VV#399 : GHC.Types.Bool | [$k__400]}
bind 83 VV#393 : {VV#393 : int | [$k__394]}
bind 84 VV#374 : {VV#374 : [int] | [$k__375; (len([VV#374]) >= 0)]}
bind 85 VV#367 : {VV#367 : int | [$k__368]}
bind 86 lq_tmp_x_370 : {VV#490 : int | []}
bind 87 VV#371 : {VV#371 : int | [$k__372]}
bind 88 VV#331 : {VV#331 : [t_a17w] | [$k__332;
                                       (len([VV#331]) >= 0)]}
bind 89 lq_tmp_x_327 : {VV : t_a17w | []}
bind 90 VV#244 : {VV#244 : [t_a16U] | [$k__245;
                                       (len([VV#244]) >= 0)]}
bind 91 lq_tmp_x_240 : {VV : t_a16U | []}
bind 92 VV#299 : {VV#299 : int | [$k__300]}
bind 93 VV#248 : {VV#248 : GHC.Types.Bool | [$k__249]}




constraint:
  env [0; 1; 2; 66; 3; 67; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 13]
  grd true
  lhs {VV#F16 : t_a17w | [$k__337[lq_tmp_x_335:=VV#463][lq_tmp_x_362:=VV#463][VV#336:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : t_a17w | [$k__357[lq_tmp_x_359:=x#a16C][VV#356:=VV#F16][lq_tmp_x_351:=x#a16C][lq_tmp_x_346:=VV#463][VV#353:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [4]
  // META constraint id 16 : meas0.hs:5:17-19


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 36; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__400[VV#399:=VV#F1][VV#422:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [6]
  // META constraint id 1 : meas0.hs:15:9-30


constraint:
  env [0;
       1;
       2;
       66;
       3;
       4;
       68;
       5;
       69;
       6;
       7;
       8;
       9;
       10;
       26;
       11;
       12;
       28;
       13]
  grd true
  lhs {VV#F17 : t_a17w | [$k__340[lq_tmp_x_342:=lq_tmp_x_345][VV#339:=VV#F17][lq_tmp_x_334:=lq_tmp_x_345][lq_tmp_x_361:=lq_tmp_x_345][VV#336:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : t_a17w | [$k__357[lq_tmp_x_359:=lq_tmp_x_345][VV#356:=VV#F17][lq_tmp_x_351:=x#a16C][VV#353:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [4]
  // META constraint id 17 : meas0.hs:5:17-19


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 5; 6; 38; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d186)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [6]
  // META constraint id 2 : meas0.hs:15:24-29


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 10; 26; 11; 12; 28; 13]
  grd true
  lhs {VV#F18 : t_a17w | [(VV#F18 = x#a16C)]}
  rhs {VV#F18 : t_a17w | [$k__354[VV#353:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [4]
  // META constraint id 18 : meas0.hs:5:18


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 40; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F3 : [int] | [(VV#F3 = Range.xs#r12k);
                        (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [int] | [$k__245[VV#244:=VV#F3][lq_tmp_x_403:=VV#F3][VV#428:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [6]
  // META constraint id 3 : meas0.hs:15:28-29


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       71;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F19 : GHC.Types.Bool | [((? Prop([VV#F19])) <=> (lq_anf__d181 = lq_anf__d182))]}
  rhs {VV#F19 : GHC.Types.Bool | [$k__249[VV#248:=VV#F19][VV#470:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [1]
  // META constraint id 19 : meas0.hs:10:13-18


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 41; 10; 42; 11; 12; 13]
  grd true
  lhs {VV#F4 : int | [$k__368[VV#367:=VV#F4][VV#374:=VV#428][lq_tmp_x_414:=VV#428][lq_tmp_x_411:=VV#F4][VV#431:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__408[VV#407:=VV#F4][lq_tmp_x_403:=VV#428][lq_tmp_x_410:=VV#F4][VV#431:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [6]
  // META constraint id 4 : meas0.hs:15:28-29


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       73;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F20 : int | [(VV#F20 = lq_anf__d182)]}
  rhs {VV#F20 : int | [$k__300[VV#299:=VV#F20][lq_tmp_x_296:=fix#GHC.Integer.Type.#36#fEqInteger#35#rX4][lq_tmp_x_297:=lq_anf__d181][lq_tmp_x_302:=VV#F20][VV#473:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [1]
  // META constraint id 20 : meas0.hs:10:18


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 41; 10; 42; 11; 12; 13]
  grd true
  lhs {VV#F5 : int | [$k__368[VV#367:=VV#F5][VV#374:=VV#428][lq_tmp_x_414:=VV#428][lq_tmp_x_411:=VV#F5][VV#431:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__238[VV#244:=VV#428][VV#237:=VV#F5][lq_tmp_x_403:=VV#428][lq_tmp_x_410:=VV#F5][VV#431:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [6]
  // META constraint id 5 : meas0.hs:15:28-29


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       75;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F21 : int | [(VV#F21 = lq_anf__d181)]}
  rhs {VV#F21 : int | [$k__300[VV#299:=VV#F21][lq_tmp_x_296:=fix#GHC.Integer.Type.#36#fEqInteger#35#rX4][lq_tmp_x_302:=VV#F21][VV#476:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [1]
  // META constraint id 21 : meas0.hs:10:13


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 41; 10; 11; 12; 44; 13; 45]
  grd true
  lhs {VV#F6 : int | [$k__372[VV#371:=VV#F6][lq_tmp_x_370:=lq_tmp_x_402][lq_tmp_x_412:=lq_tmp_x_402][lq_tmp_x_413:=VV#F6][VV#435:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__242[lq_tmp_x_240:=lq_tmp_x_402][VV#241:=VV#F6][lq_tmp_x_410:=VV#F6][VV#435:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [6]
  // META constraint id 6 : meas0.hs:15:28-29


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       77;
       14;
       15]
  grd true
  lhs {VV#F22 : GHC.Types.Bool | [(? Prop([VV#F22]))]}
  rhs {VV#F22 : GHC.Types.Bool | [$k__249[VV#248:=VV#F22][VV#479:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [1]
  // META constraint id 22 : meas0.hs:11:13-31


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 31; 47]
  grd true
  lhs {VV#F7 : [int] | [$k__332[VV#331:=VV#F7][x#a16C:=lq_anf__d185][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#F7][VV#438:=VV#F7][VV#F:=VV#F7];
                        (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [int] | [$k__375[VV#374:=VV#F7][VV#438:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [5]
  // META constraint id 7 : meas0.hs:13:6-19


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       79]
  grd true
  lhs {VV#F23 : GHC.Types.Bool | [(VV#F23 = GHC.Types.False#68)]}
  rhs {VV#F23 : GHC.Types.Bool | [(? Prop([VV#F23]))]}
  id 23 tag [1]
  // META constraint id 23 : meas0.hs:11:27-31


constraint:
  env [0; 32; 48; 1; 49; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 31]
  grd true
  lhs {VV#F8 : int | [$k__394[VV#393:=VV#F8][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438][lq_tmp_x_396:=VV#F8][VV#441:=VV#F8][VV#F:=VV#F8];
                      $k__325[VV#331:=VV#438][x#a16C:=lq_anf__d185][VV#324:=VV#F8][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_390:=VV#438][lq_tmp_x_396:=VV#F8][VV#441:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__368[VV#374:=VV#438][VV#367:=VV#F8][VV#441:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [5]
  // META constraint id 8 : meas0.hs:13:6-19


constraint:
  env [0;
       32;
       48;
       1;
       2;
       3;
       51;
       4;
       52;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       31]
  grd true
  lhs {VV#F9 : int | [$k__329[lq_tmp_x_327:=lq_tmp_x_370][x#a16C:=lq_anf__d185][VV#328:=VV#F9][lq_tmp_x_392:=lq_anf__d185][lq_tmp_x_389:=lq_tmp_x_370][lq_tmp_x_396:=VV#F9][VV#445:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__372[VV#371:=VV#F9][VV#445:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [5]
  // META constraint id 9 : meas0.hs:13:6-19


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 54; 7; 8; 9; 10; 11; 12; 13; 31]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = lq_anf__d185)]}
  rhs {VV#F10 : int | [$k__394[VV#393:=VV#F10][lq_tmp_x_396:=VV#F10][VV#448:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [5]
  // META constraint id 10 : meas0.hs:13:11-18


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 54; 7; 8; 9; 10; 11; 12; 13; 31]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = lq_anf__d185)]}
  rhs {VV#F11 : int | [$k__321[VV#320:=VV#F11][lq_tmp_x_396:=VV#F11][VV#448:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [5]
  // META constraint id 11 : meas0.hs:13:11-18


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 60; 13; 30]
  grd true
  lhs {VV#F12 : [t_a17w] | [(VV#F12 = z#a16D); (len([VV#F12]) >= 0)]}
  rhs {VV#F12 : [t_a17w] | [$k__332[VV#331:=VV#F12][VV#457:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [4]
  // META constraint id 12 : meas0.hs:5:24


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       26;
       11;
       12;
       28;
       13;
       61;
       30;
       62]
  grd true
  lhs {VV#F13 : t_a17w | [$k__354[lq_tmp_x_351:=x#a16C][lq_tmp_x_352:=lq_anf__d183][lq_tmp_x_348:=VV#457][lq_tmp_x_365:=VV#457][VV#353:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : t_a17w | [$k__325[VV#331:=VV#457][VV#324:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [4]
  // META constraint id 13 : meas0.hs:5:24


constraint:
  env [0;
       64;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       26;
       11;
       12;
       28;
       13;
       61;
       30;
       63]
  grd true
  lhs {VV#F14 : t_a17w | [$k__357[lq_tmp_x_359:=lq_tmp_x_327][VV#356:=VV#F14][lq_tmp_x_351:=x#a16C][lq_tmp_x_352:=lq_anf__d183][lq_tmp_x_347:=lq_tmp_x_327][lq_tmp_x_364:=lq_tmp_x_327][VV#353:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : t_a17w | [$k__329[VV#328:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [4]
  // META constraint id 14 : meas0.hs:5:24


constraint:
  env [0; 1; 2; 66; 3; 67; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 13]
  grd true
  lhs {VV#F15 : t_a17w | [$k__337[lq_tmp_x_335:=VV#463][lq_tmp_x_362:=VV#463][VV#336:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : t_a17w | [$k__354[lq_tmp_x_351:=x#a16C][lq_tmp_x_346:=VV#463][VV#353:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [4]
  // META constraint id 15 : meas0.hs:5:17-19




wf:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#407 : int | [$k__408]}
  
  // META wf  : meas0.hs:15:24-26


wf:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#399 : GHC.Types.Bool | [$k__400]}
  
  // META wf  : <no location info>


wf:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 31]
  reft {VV#393 : int | [$k__394]}
  
  // META wf  : meas0.hs:13:6-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#374 : [int] | [$k__375]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 84; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#367 : int | [$k__368]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 86; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#371 : int | [$k__372]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#320 : t_a17w | [$k__321]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 13; 29]
  reft {VV#356 : t_a17w | [$k__357]}
  
  // META wf  : meas0.hs:5:17-19


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 13]
  reft {VV#353 : t_a17w | [$k__354]}
  
  // META wf  : meas0.hs:5:17-19


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 27; 12; 13]
  reft {VV#339 : t_a17w | [$k__340]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13]
  reft {VV#336 : t_a17w | [$k__337]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13]
  reft {VV#331 : [t_a17w] | [$k__332]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 88; 9; 10; 26; 11; 12; 13]
  reft {VV#324 : t_a17w | [$k__325]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 89; 10; 26; 11; 12; 13]
  reft {VV#328 : t_a17w | [$k__329]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#314 : t_a17g | [$k__315]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#308 : t_a175 | [$k__309]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#244 : [t_a16U] | [$k__245]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 90; 11; 12; 13]
  reft {VV#237 : t_a16U | [$k__238]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 91; 12; 13]
  reft {VV#241 : t_a16U | [$k__242]}
  
  // META wf  : <no location info>


wf:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#299 : int | [$k__300]}
  
  // META wf  : meas0.hs:10:15-16


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#248 : GHC.Types.Bool | [$k__249]}
  
  // META wf  : <no location info>







