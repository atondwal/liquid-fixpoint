qualif PappL(v : @(0), fix##126#P : (Pred  @(0)  ResolvePred.L), fix##126#A : int, fix##126#As : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                                           v;
                                                                                                                           ResolvePred.C#rpw([fix##126#A;
                                                                                                                                              fix##126#As])])) // "ResolvePred.hs" (line 24, column 12)
qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : int, fix##126#A1 : ResolvePred.L): (VV = ResolvePred.C#rpw([fix##126#A0;
                                                                                                          fix##126#A1])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : ResolvePred.L): (VV = ResolvePred.N#rpv) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L)): (? papp2([fix##126#P;
                                                                             v;
                                                                             ResolvePred.N#rpv])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : ResolvePred.L): (llen([VV]) = (1 + llen([fix##126#A0]))) // "ResolvePred.hs" (line 6, column 10)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : ResolvePred.L): (t([VV]) = fix##126#A0) // "ResolvePred.hs" (line 6, column 10)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : int): (h([VV]) = fix##126#A0) // "ResolvePred.hs" (line 6, column 10)
qualif Auto(VV : ResolvePred.L): (llen([VV]) = 0) // "ResolvePred.hs" (line 6, column 20)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif PappL(v : @(0), fix##126#P : (Pred  @(0)  ResolvePred.L), fix##126#A : int, fix##126#As : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                                           v;
                                                                                                                           ResolvePred.C#rpw([fix##126#A;
                                                                                                                                              fix##126#As])])) // "ResolvePred.hs" (line 24, column 12)
qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : int, fix##126#A1 : ResolvePred.L): (VV = ResolvePred.C#rpw([fix##126#A0;
                                                                                                          fix##126#A1])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : ResolvePred.L): (VV = ResolvePred.N#rpv) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : t_aKU, fix##126#A0 : ResolvePred.L): (? papp2([q;
                                                                VV;
                                                                fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(vv : ResolvePred.L, fix##126#A0 : ResolvePred.L): (vv = fix##126#A0) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L)): (? papp2([fix##126#P;
                                                                             v;
                                                                             ResolvePred.N#rpv])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(v : t_aKU, fix##126#P : (Pred  t_aKU  ResolvePred.L), fix##126#A0 : ResolvePred.L): (? papp2([fix##126#P;
                                                                                                          v;
                                                                                                          fix##126#A0])) // "ResolvePred.hs" (line 14, column 1)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : ResolvePred.L): (llen([VV]) = (1 + llen([fix##126#A0]))) // "ResolvePred.hs" (line 6, column 10)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : ResolvePred.L): (t([VV]) = fix##126#A0) // "ResolvePred.hs" (line 6, column 10)
qualif Auto(VV : ResolvePred.L, fix##126#A0 : int): (h([VV]) = fix##126#A0) // "ResolvePred.hs" (line 6, column 10)
qualif Auto(VV : ResolvePred.L): (llen([VV]) = 0) // "ResolvePred.hs" (line 6, column 20)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)


cut $k__165
cut $k__162


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant llen : (func(0, [ResolvePred.L; int]))
constant h : (func(0, [ResolvePred.L; int]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant ResolvePred.C#rpw : (func(0, [int;
                                       ResolvePred.L;
                                       ResolvePred.L]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant t : (func(0, [ResolvePred.L; ResolvePred.L]))
constant ResolvePred.N#rpv : (ResolvePred.L)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 ResolvePred.C#rpw : {VV : func(0, [int;
                                          ResolvePred.L;
                                          ResolvePred.L]) | []}
bind 1 ResolvePred.N#rpv : {VV#113 : ResolvePred.L | [(llen([VV#113]) >= 0)]}
bind 2 GHC.Types.EQ#6U : {VV#114 : GHC.Types.Ordering | [(VV#114 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#115 : GHC.Types.Ordering | [(VV#115 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#116 : GHC.Types.Ordering | [(VV#116 = GHC.Types.GT#6W)]}
bind 5 ResolvePred.C#rpw : {VV : func(0, [int;
                                          ResolvePred.L;
                                          ResolvePred.L]) | []}
bind 6 ResolvePred.N#rpv : {VV#118 : ResolvePred.L | [(VV#118 = ResolvePred.N#rpv);
                                                      (llen([VV#118]) >= 0)]}
bind 7 fix#GHC.Num.#42##35#ru : {VV : func(1, [@(0);
                                               @(0);
                                               @(0)]) | []}
bind 8 GHC.Base..#r2q : {VV : func(3, [func(0, [@(0); @(1)]);
                                       func(0, [@(2); @(0)]);
                                       @(2);
                                       @(1)]) | []}
bind 9 GHC.Integer.Type.smallInteger#0Z : {VV : func(0, [int;
                                                         int]) | []}
bind 10 fix#GHC.Num.#43##35#rt : {VV : func(1, [@(0);
                                                @(0);
                                                @(0)]) | []}
bind 11 fix#GHC.Num.#45##35#02B : {VV : func(1, [@(0);
                                                 @(0);
                                                 @(0)]) | []}
bind 12 GHC.Types.I##6c : {VV : func(0, [int; int]) | []}
bind 13 fix#GHC.Prim.#43##35##35#98 : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 14 fix#GHC.Prim.#45##35##35#99 : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 15 fix#GHC.Prim.#61##61##35##35#9o : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 16 fix#GHC.Prim.#62##61##35##35#9n : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 17 fix#GHC.Prim.#60##61##35##35#9r : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 18 fix#GHC.Prim.#60##35##35#9q : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 19 fix#GHC.Prim.#62##35##35#9m : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 20 fix#GHC.Types.#58##35#64 : {VV : func(1, [@(0);
                                                  [@(0)];
                                                  [@(0)]]) | []}
bind 21 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 22 fix#GHC.Tuple.#40##44##41##35#74 : {VV : func(2, [@(0);
                                                          @(1);
                                                          (Tuple  @(0)  @(1))]) | []}
bind 23 fix#GHC.Tuple.#40##44##44##41##35#76 : {VV : func(3, [@(0);
                                                              @(1);
                                                              @(2);
                                                              (Tuple  @(0)  @(1)  @(2))]) | []}
bind 24 fix#GHC.Tuple.#40##44##44##44##41##35#78 : {VV : func(4, [@(0);
                                                                  @(1);
                                                                  @(2);
                                                                  @(3);
                                                                  (Tuple  @(0)  @(1)  @(2)  @(3))]) | []}
bind 25 fix#GHC.Tuple.#40##44##44##44##44##41##35#7a : {VV : func(5, [@(0);
                                                                      @(1);
                                                                      @(2);
                                                                      @(3);
                                                                      @(4);
                                                                      (Tuple  @(0)  @(1)  @(2)  @(3)  @(4))]) | []}
bind 26 fix#GHC.Tuple.#40##44##44##44##44##44##41##35#7c : {VV : func(6, [@(0);
                                                                          @(1);
                                                                          @(2);
                                                                          @(3);
                                                                          @(4);
                                                                          @(5);
                                                                          (Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5))]) | []}
bind 27 fix#GHC.Tuple.#40##44##44##44##44##44##44##41##35#7e : {VV : func(7, [@(0);
                                                                              @(1);
                                                                              @(2);
                                                                              @(3);
                                                                              @(4);
                                                                              @(5);
                                                                              @(6);
                                                                              (Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6))]) | []}
bind 28 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 29 GHC.Types.EQ#6U : {VV#141 : GHC.Types.Ordering | [(cmp([VV#141]) = GHC.Types.EQ#6U)]}
bind 30 GHC.Types.LT#6S : {VV#142 : GHC.Types.Ordering | [(cmp([VV#142]) = GHC.Types.LT#6S)]}
bind 31 GHC.Types.GT#6W : {VV#143 : GHC.Types.Ordering | [(cmp([VV#143]) = GHC.Types.GT#6W)]}
bind 32 fix#GHC.Real.D#58#Fractional#35#rkT : {VV : func(1, [func(0, [@(0);
                                                                      @(0);
                                                                      @(0)]);
                                                             func(0, [@(0); @(0)]);
                                                             func(0, [(GHC.Real.Ratio  int); @(0)]);
                                                             (GHC.Real.Fractional  @(0))]) | []}
bind 33 fix#GHC.Real.D#58#Integral#35#r6o : {VV : func(1, [func(0, [@(0);
                                                                    @(0);
                                                                    @(0)]);
                                                           func(0, [@(0); @(0); @(0)]);
                                                           func(0, [@(0); @(0); @(0)]);
                                                           func(0, [@(0); @(0); @(0)]);
                                                           func(0, [@(0);
                                                                    @(0);
                                                                    (Tuple  @(0)  @(0))]);
                                                           func(0, [@(0);
                                                                    @(0);
                                                                    (Tuple  @(0)  @(0))]);
                                                           func(0, [@(0); int]);
                                                           (GHC.Real.Integral  @(0))]) | []}
bind 34 ResolvePred.C#rpw : {VV : func(0, [int;
                                           ResolvePred.L;
                                           ResolvePred.L]) | []}
bind 35 ResolvePred.N#rpv : {VV#147 : ResolvePred.L | [(llen([VV#147]) = 0);
                                                       (llen([VV#147]) >= 0)]}
bind 36 Data.Maybe.Just#r1a : {VV : func(1, [@(0);
                                             (Data.Maybe.Maybe  @(0))]) | []}
bind 37 q : {VV#155 : (Pred  t_aKU  ResolvePred.L) | []}
bind 38 lq_tmp_db_0 : {VV#156 : ResolvePred.L | [(llen([VV#156]) >= 0)]}
bind 39 lq_tmp_x_158 : {VV#159 : ResolvePred.L | [(VV#159 = ResolvePred.N#rpv);
                                                  (llen([VV#159]) >= 0)]}
bind 40 z#aKw : {VV : t_aKU | [(? papp2([q; VV; lq_tmp_x_158]))]}
bind 41 go#aKJ : {VV : func(0, [ResolvePred.L; t_aKU]) | []}
bind 42 ds_dL3 : {VV#161 : ResolvePred.L | [$k__162;
                                            (llen([VV#161]) >= 0)]}
bind 43 lq_anf__dL4 : {lq_tmp_x_171 : ResolvePred.L | [(lq_tmp_x_171 = ds_dL3);
                                                       (llen([lq_tmp_x_171]) >= 0)]}
bind 44 lq_anf__dL4 : {lq_tmp_x_173 : ResolvePred.L | [(lq_tmp_x_173 = ds_dL3);
                                                       (llen([lq_tmp_x_173]) >= 0);
                                                       (llen([lq_tmp_x_173]) >= 0)]}
bind 45 a#aKy : {lq_tmp_x_181 : int | []}
bind 46 as#aKz : {lq_tmp_x_182 : ResolvePred.L | [(llen([lq_tmp_x_182]) >= 0)]}
bind 47 lq_anf__dL4 : {lq_tmp_x_173 : ResolvePred.L | [(lq_tmp_x_173 = ds_dL3);
                                                       (llen([lq_tmp_x_173]) >= 0);
                                                       (llen([lq_tmp_x_173]) = (1 + llen([as#aKz])));
                                                       (t([lq_tmp_x_173]) = as#aKz);
                                                       (h([lq_tmp_x_173]) = a#aKy);
                                                       (lq_tmp_x_173 = ResolvePred.C#rpw([a#aKy;
                                                                                          as#aKz]));
                                                       (llen([lq_tmp_x_173]) = (1 + llen([as#aKz])));
                                                       (t([lq_tmp_x_173]) = as#aKz);
                                                       (h([lq_tmp_x_173]) = a#aKy);
                                                       (llen([lq_tmp_x_173]) >= 0)]}
bind 48 lq_anf__dL5 : {VV#164 : t_aKU | [$k__165[ds_dL3:=as#aKz][lq_tmp_x_167:=as#aKz][lq_tmp_x_168:=as#aKz]]}
bind 49 lq_anf__dL4 : {lq_tmp_x_207 : ResolvePred.L | [(lq_tmp_x_207 = ds_dL3);
                                                       (llen([lq_tmp_x_207]) >= 0);
                                                       (llen([lq_tmp_x_207]) >= 0)]}
bind 50 lq_anf__dL4 : {lq_tmp_x_207 : ResolvePred.L | [(lq_tmp_x_207 = ds_dL3);
                                                       (llen([lq_tmp_x_207]) >= 0);
                                                       (llen([lq_tmp_x_207]) = 0);
                                                       (llen([lq_tmp_x_207]) >= 0);
                                                       (lq_tmp_x_207 = ResolvePred.N#rpv);
                                                       (llen([lq_tmp_x_207]) = 0);
                                                       (llen([lq_tmp_x_207]) >= 0);
                                                       (llen([lq_tmp_x_207]) >= 0)]}
bind 51 go#aKx : {lq_tmp_x_213 : func(0, [ResolvePred.L;
                                          t_aKU]) | [(lq_tmp_x_213 = go#aKJ)]}
bind 52 lq_tmp_x_217 : {lq_tmp_x_217 : func(0, [ResolvePred.L;
                                                t_aKU]) | [(lq_tmp_x_217 = go#aKx)]}
bind 53 VV#221 : {VV#221 : ResolvePred.L | [(llen([VV#221]) >= 0)]}
bind 54 VV#221 : {VV#221 : ResolvePred.L | [(llen([VV#221]) >= 0)]}
bind 55 lq_tmp_x_154 : {VV#224 : ResolvePred.L | [(llen([VV#224]) >= 0)]}
bind 56 VV#164 : {VV#164 : t_aKU | [$k__165[ds_dL3:=lq_tmp_x_154][lq_tmp_x_167:=lq_tmp_x_154][lq_tmp_x_168:=lq_tmp_x_154][lq_tmp_x_214:=lq_tmp_x_154][lq_tmp_x_218:=lq_tmp_x_154]]}
bind 57 VV : {VV : t_aKU | [(VV = z#aKw)]}
bind 58 lq_tmp_x_227 : {lq_tmp_x_197 : ResolvePred.L | [(lq_tmp_x_197 = ResolvePred.C#rpw([a#aKy;
                                                                                           as#aKz]));
                                                        (llen([lq_tmp_x_197]) = (1 + llen([as#aKz])));
                                                        (t([lq_tmp_x_197]) = as#aKz);
                                                        (h([lq_tmp_x_197]) = a#aKy);
                                                        (llen([lq_tmp_x_197]) >= 0)]}
bind 59 VV : {VV : t_aKU | [(? papp2([q; VV; lq_tmp_x_227]))]}
bind 60 VV#164 : {VV#164 : t_aKU | [(VV#164 = lq_anf__dL5)]}
bind 61 VV#231 : {VV#231 : int | [(VV#231 = a#aKy)]}
bind 62 VV#231 : {VV#231 : int | [(VV#231 = a#aKy)]}
bind 63 VV#234 : {VV#234 : ResolvePred.L | [(VV#234 = as#aKz);
                                            (llen([VV#234]) >= 0)]}
bind 64 VV#234 : {VV#234 : ResolvePred.L | [(VV#234 = as#aKz);
                                            (llen([VV#234]) >= 0)]}
bind 65 VV#237 : {VV#237 : ResolvePred.L | [(VV#237 = as#aKz);
                                            (llen([VV#237]) >= 0)]}
bind 66 VV#237 : {VV#237 : ResolvePred.L | [(VV#237 = as#aKz);
                                            (llen([VV#237]) >= 0)]}
bind 67 VV#161 : {VV#161 : ResolvePred.L | [$k__162;
                                            (llen([VV#161]) >= 0)]}
bind 68 ds_dL3 : {VV#161 : ResolvePred.L | [$k__162;
                                            (llen([VV#161]) >= 0)]}




constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       2;
       18;
       34;
       3;
       19;
       35;
       51;
       4;
       20;
       36;
       5;
       21;
       37;
       53;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       29;
       14;
       30;
       15;
       31]
  grd true
  lhs {VV#F1 : ResolvePred.L | [(llen([VV#F1]) >= 0)]}
  rhs {VV#F1 : ResolvePred.L | [$k__162[VV#161:=VV#F1][lq_tmp_x_212:=VV#F1][lq_tmp_x_216:=VV#F1][VV#221:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]
  // META constraint id 1 : ResolvePred.hs:14:14-15


constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       2;
       18;
       34;
       3;
       19;
       35;
       51;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       55;
       8;
       24;
       40;
       56;
       9;
       25;
       41;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       29;
       14;
       30;
       15;
       31]
  grd true
  lhs {VV#F2 : t_aKU | [$k__165[ds_dL3:=lq_tmp_x_154][lq_tmp_x_167:=lq_tmp_x_154][lq_tmp_x_168:=lq_tmp_x_154][lq_tmp_x_214:=lq_tmp_x_154][lq_tmp_x_218:=lq_tmp_x_154][VV#164:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : t_aKU | [(? papp2([q; VV#F2; lq_tmp_x_154]))]}
  id 2 tag [1]
  // META constraint id 2 : ResolvePred.hs:14:14-15


constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       49;
       2;
       18;
       34;
       50;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       57;
       10;
       26;
       42;
       11;
       27;
       43;
       12;
       28;
       13;
       29;
       14;
       30;
       15;
       31]
  grd true
  lhs {VV#F3 : t_aKU | [(VV#F3 = z#aKw)]}
  rhs {VV#F3 : t_aKU | [$k__165[ds_dL3:=ds_dL3][lq_tmp_x_167:=ds_dL3][lq_tmp_x_168:=ds_dL3][VV#164:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : ResolvePred.hs:16:18


constraint:
  env [0;
       16;
       32;
       48;
       1;
       17;
       33;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       10;
       26;
       42;
       58;
       11;
       27;
       43;
       59;
       12;
       28;
       44;
       13;
       29;
       45;
       14;
       30;
       46;
       15;
       31;
       47]
  grd true
  lhs {VV#F4 : t_aKU | [(? papp2([q; VV#F4; lq_tmp_x_227]))]}
  rhs {VV#F4 : t_aKU | [$k__165[ds_dL3:=ds_dL3][lq_tmp_x_167:=ds_dL3][lq_tmp_x_168:=ds_dL3][VV#164:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : ResolvePred.hs:17:19-32


constraint:
  env [0;
       16;
       32;
       48;
       1;
       17;
       33;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       10;
       26;
       42;
       11;
       27;
       43;
       12;
       28;
       44;
       60;
       13;
       29;
       45;
       14;
       30;
       46;
       15;
       31;
       47]
  grd true
  lhs {VV#F5 : t_aKU | [(VV#F5 = lq_anf__dL5)]}
  rhs {VV#F5 : t_aKU | [(? papp2([q; VV#F5; as#aKz]))]}
  id 5 tag [1]
  // META constraint id 5 : ResolvePred.hs:17:27-31


constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       65;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       10;
       26;
       42;
       11;
       27;
       43;
       12;
       28;
       44;
       13;
       29;
       45;
       14;
       30;
       46;
       15;
       31;
       47]
  grd true
  lhs {VV#F6 : ResolvePred.L | [(VV#F6 = as#aKz);
                                (llen([VV#F6]) >= 0)]}
  rhs {VV#F6 : ResolvePred.L | [$k__162[VV#161:=VV#F6][VV#237:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : ResolvePred.hs:17:30-31


constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       65;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       10;
       26;
       42;
       11;
       27;
       43;
       12;
       28;
       44;
       13;
       29;
       45;
       14;
       30;
       46;
       15;
       31;
       47]
  grd true
  lhs {VV#F7 : ResolvePred.L | [(VV#F7 = as#aKz);
                                (llen([VV#F7]) >= 0)]}
  rhs {VV#F7 : ResolvePred.L | [(llen([VV#F7]) < llen([ds_dL3]))]}
  id 7 tag [1]
  // META constraint id 7 : ResolvePred.hs:17:30-31


constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       65;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       41;
       10;
       26;
       42;
       11;
       27;
       43;
       12;
       28;
       44;
       13;
       29;
       45;
       14;
       30;
       46;
       15;
       31;
       47]
  grd true
  lhs {VV#F8 : ResolvePred.L | [(VV#F8 = as#aKz);
                                (llen([VV#F8]) >= 0)]}
  rhs {VV#F8 : ResolvePred.L | [(llen([VV#F8]) >= 0)]}
  id 8 tag [1]
  // META constraint id 8 : ResolvePred.hs:17:30-31




wf:
  env [0;
       16;
       32;
       1;
       17;
       33;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       29;
       14;
       30;
       15;
       31]
  reft {VV#161 : ResolvePred.L | [$k__162]}
  
  // META wf  : ResolvePred.hs:14:1-6


wf:
  env [0;
       16;
       32;
       1;
       17;
       33;
       2;
       18;
       34;
       3;
       19;
       35;
       4;
       20;
       36;
       68;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       24;
       40;
       9;
       25;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       29;
       14;
       30;
       15;
       31]
  reft {VV#164 : t_aKU | [$k__165]}
  
  // META wf  : ResolvePred.hs:14:1-6







