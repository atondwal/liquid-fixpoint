qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant Deptup.P#r12h : (func(2, [@(0);
                                   @(1);
                                   (Deptup.Pair  @(0)  @(1))]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant Deptup.P#r12h : (func(2, [@(0);
                                   @(1);
                                   (Deptup.Pair  @(0)  @(1))]))


bind 0 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#177 : (GHC.Classes.Ord  int) | []}
bind 1 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#178 : (GHC.Num.Num  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#182 : GHC.Types.Ordering | [(VV#182 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#183 : GHC.Types.Ordering | [(VV#183 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#184 : GHC.Types.Ordering | [(VV#184 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#225 : GHC.Types.Ordering | [(cmp([VV#225]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#226 : GHC.Types.Ordering | [(cmp([VV#226]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#227 : GHC.Types.Ordering | [(cmp([VV#227]) = GHC.Types.GT#6W)]}
bind 10 lq_anf__d147 : {lq_tmp_x_235 : int | [(lq_tmp_x_235 = (0  :  int))]}
bind 11 Deptup.n#r12k : {VV#231 : int | [$k__232]}
bind 12 x#a13w : {VV#246 : int | [$k__247]}
bind 13 lq_anf__d148 : {lq_tmp_x_254 : int | [(lq_tmp_x_254 = (1  :  int))]}
bind 14 x#a13x : {VV#273 : int | [$k__274]}
bind 15 lq_anf__d149 : {lq_tmp_x_287 : int | [$k__251[VV#250:=lq_tmp_x_287][x#a13w:=x#a13x][lq_tmp_x_289:=x#a13x]]}
bind 16 ds_d146 : {VV#314 : (Deptup.Pair  int  int) | [$k__315]}
bind 17 lq_anf__d14a : {lq_tmp_x_323 : (Deptup.Pair  int  int) | [(lq_tmp_x_323 = ds_d146)]}
bind 18 lq_anf__d14a : {lq_tmp_x_327 : (Deptup.Pair  int  int) | [(lq_tmp_x_327 = ds_d146)]}
bind 19 x#a13y : {lq_tmp_x_325 : int | [$k__309[VV#308:=lq_tmp_x_325][VV#314:=lq_anf__d14a][lq_tmp_x_321:=lq_tmp_x_325][lq_tmp_x_323:=lq_anf__d14a][lq_tmp_x_327:=lq_anf__d14a]]}
bind 20 y#a13z : {lq_tmp_x_326 : int | [$k__312[VV#311:=lq_tmp_x_326][VV#314:=lq_anf__d14a][lq_tmp_x_322:=lq_tmp_x_326][lq_tmp_x_323:=lq_anf__d14a][lq_tmp_x_327:=lq_anf__d14a][lq_tmp_x_331:=x#a13y]]}
bind 21 lq_anf__d14a : {lq_tmp_x_327 : (Deptup.Pair  int  int) | [(lq_tmp_x_327 = ds_d146);
                                                                  (lq_tmp_x_327 = Deptup.P#r12h([x#a13y;
                                                                                                 y#a13z]))]}
bind 22 lq_anf__d14b : {lq_tmp_x_341 : GHC.Types.Bool | [((? Prop([lq_tmp_x_341])) <=> (x#a13y <= y#a13z))]}
bind 23 lq_anf__d14c : {lq_tmp_x_369 : (Deptup.Pair  int  int) | [$k__284[VV#283:=lq_tmp_x_369][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k]]}
bind 24 Deptup.prop_baz#r12l : {VV#363 : GHC.Types.Bool | [$k__364]}
bind 25 VV#384 : {VV#384 : GHC.Types.Bool | [$k__319[VV#318:=VV#384][ds_d146:=lq_anf__d14c][lq_tmp_x_379:=lq_anf__d14c][lq_tmp_x_377:=VV#384]]}
bind 26 VV#384 : {VV#384 : GHC.Types.Bool | [$k__319[VV#318:=VV#384][ds_d146:=lq_anf__d14c][lq_tmp_x_379:=lq_anf__d14c][lq_tmp_x_377:=VV#384]]}
bind 27 VV#387 : {VV#387 : (Deptup.Pair  int  int) | [(VV#387 = lq_anf__d14c)]}
bind 28 VV#387 : {VV#387 : (Deptup.Pair  int  int) | [(VV#387 = lq_anf__d14c)]}
bind 29 VV#390 : {VV#390 : int | [$k__278[VV#277:=VV#390][VV#283:=VV#387][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k][lq_tmp_x_367:=VV#390][lq_tmp_x_369:=VV#387][lq_tmp_x_382:=VV#387][lq_tmp_x_380:=VV#390]]}
bind 30 VV#390 : {VV#390 : int | [$k__278[VV#277:=VV#390][VV#283:=VV#387][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k][lq_tmp_x_367:=VV#390][lq_tmp_x_369:=VV#387][lq_tmp_x_382:=VV#387][lq_tmp_x_380:=VV#390]]}
bind 31 VV#393 : {VV#393 : int | [$k__281[VV#280:=VV#393][VV#283:=VV#387][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k][lq_tmp_x_368:=VV#393][lq_tmp_x_369:=VV#387][lq_tmp_x_382:=VV#387][lq_tmp_x_381:=VV#393]]}
bind 32 VV#393 : {VV#393 : int | [$k__281[VV#280:=VV#393][VV#283:=VV#387][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k][lq_tmp_x_368:=VV#393][lq_tmp_x_369:=VV#387][lq_tmp_x_382:=VV#387][lq_tmp_x_381:=VV#393]]}
bind 33 VV#396 : {VV#396 : int | [(VV#396 = Deptup.n#r12k)]}
bind 34 VV#396 : {VV#396 : int | [(VV#396 = Deptup.n#r12k)]}
bind 35 VV#399 : {VV#399 : GHC.Types.Bool | [(? Prop([VV#399]))]}
bind 36 VV#399 : {VV#399 : GHC.Types.Bool | [(? Prop([VV#399]))]}
bind 37 VV#402 : {VV#402 : GHC.Types.Bool | [(VV#402 = lq_anf__d14b)]}
bind 38 VV#402 : {VV#402 : GHC.Types.Bool | [(VV#402 = lq_anf__d14b)]}
bind 39 VV#405 : {VV#405 : int | [(VV#405 = y#a13z)]}
bind 40 VV#405 : {VV#405 : int | [(VV#405 = y#a13z)]}
bind 41 VV#408 : {VV#408 : int | [(VV#408 = x#a13y)]}
bind 42 VV#408 : {VV#408 : int | [(VV#408 = x#a13y)]}
bind 43 VV#411 : {VV#411 : (Deptup.Pair  int  int) | []}
bind 44 VV#411 : {VV#411 : (Deptup.Pair  int  int) | []}
bind 45 VV#414 : {VV#414 : int | [$k__298[VV#297:=VV#414][lq_tmp_x_295:=x#a13x][lq_tmp_x_296:=lq_anf__d149][lq_tmp_x_292:=VV#411][lq_tmp_x_300:=VV#414]]}
bind 46 VV#414 : {VV#414 : int | [$k__298[VV#297:=VV#414][lq_tmp_x_295:=x#a13x][lq_tmp_x_296:=lq_anf__d149][lq_tmp_x_292:=VV#411][lq_tmp_x_300:=VV#414]]}
bind 47 VV#417 : {VV#417 : int | [$k__302[VV#301:=VV#417][lq_tmp_x_295:=x#a13x][lq_tmp_x_296:=lq_anf__d149][lq_tmp_x_292:=VV#411][lq_tmp_x_304:=VV#417]]}
bind 48 VV#417 : {VV#417 : int | [$k__302[VV#301:=VV#417][lq_tmp_x_295:=x#a13x][lq_tmp_x_296:=lq_anf__d149][lq_tmp_x_292:=VV#411][lq_tmp_x_304:=VV#417]]}
bind 49 VV#420 : {VV#420 : int | [(VV#420 = lq_anf__d149)]}
bind 50 VV#420 : {VV#420 : int | [(VV#420 = lq_anf__d149)]}
bind 51 VV#423 : {VV#423 : int | [(VV#423 = x#a13x)]}
bind 52 VV#423 : {VV#423 : int | [(VV#423 = x#a13x)]}
bind 53 VV#426 : {VV#426 : int | [(VV#426 = x#a13x)]}
bind 54 VV#426 : {VV#426 : int | [(VV#426 = x#a13x)]}
bind 55 VV#429 : {VV#429 : int | [(VV#429 = (x#a13w + lq_anf__d148))]}
bind 56 VV#429 : {VV#429 : int | [(VV#429 = (x#a13w + lq_anf__d148))]}
bind 57 VV#432 : {VV#432 : int | [(VV#432 = lq_anf__d148)]}
bind 58 VV#432 : {VV#432 : int | [(VV#432 = lq_anf__d148)]}
bind 59 VV#435 : {VV#435 : int | [(VV#435 = x#a13w)]}
bind 60 VV#435 : {VV#435 : int | [(VV#435 = x#a13w)]}
bind 61 VV#438 : {VV#438 : int | [(VV#438 = 1)]}
bind 62 VV#438 : {VV#438 : int | [(VV#438 = 1)]}
bind 63 VV#441 : {VV#441 : int | []}
bind 64 VV#441 : {VV#441 : int | []}
bind 65 VV#444 : {VV#444 : int | [(VV#444 = lq_anf__d147)]}
bind 66 VV#444 : {VV#444 : int | [(VV#444 = lq_anf__d147)]}
bind 67 VV#447 : {VV#447 : int | [(VV#447 = 0)]}
bind 68 VV#447 : {VV#447 : int | [(VV#447 = 0)]}
bind 69 VV#363 : {VV#363 : GHC.Types.Bool | [$k__364]}
bind 70 VV#314 : {VV#314 : (Deptup.Pair  int  int) | [$k__315]}
bind 71 VV#308 : {VV#308 : int | [$k__309]}
bind 72 VV#311 : {VV#311 : int | [$k__312]}
bind 73 VV#348 : {VV#348 : int | [$k__349]}
bind 74 VV#318 : {VV#318 : GHC.Types.Bool | [$k__319]}
bind 75 VV#273 : {VV#273 : int | [$k__274]}
bind 76 VV#301 : {VV#301 : int | [$k__302]}
bind 77 VV#297 : {VV#297 : int | [$k__298]}
bind 78 VV#283 : {VV#283 : (Deptup.Pair  int  int) | [$k__284]}
bind 79 VV#277 : {VV#277 : int | [$k__278]}
bind 80 VV#280 : {VV#280 : int | [$k__281]}
bind 81 VV#246 : {VV#246 : int | [$k__247]}
bind 82 VV#250 : {VV#250 : int | [$k__251]}
bind 83 VV#231 : {VV#231 : int | [$k__232]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 55; 8; 9; 11; 12; 13]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = (x#a13w + lq_anf__d148))]}
  rhs {VV#F16 : int | [$k__251[VV#250:=VV#F16][VV#429:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [3]
  // META constraint id 16 : deptup3.hs:8:10-14


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 25; 11]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [$k__319[VV#318:=VV#F1][ds_d146:=lq_anf__d14c][lq_tmp_x_379:=lq_anf__d14c][lq_tmp_x_377:=VV#F1][VV#384:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__364[VV#363:=VV#F1][VV#384:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [5]
  // META constraint id 1 : deptup3.hs:16:15-25


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 63]
  grd true
  lhs {VV#F17 : int | []}
  rhs {VV#F17 : int | [$k__232[VV#231:=VV#F17][VV#441:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [2]
  // META constraint id 17 : deptup3.hs:14:15-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 11; 27]
  grd true
  lhs {VV#F2 : (Deptup.Pair  int  int) | [(VV#F2 = lq_anf__d14c)]}
  rhs {VV#F2 : (Deptup.Pair  int  int) | [$k__315[VV#314:=VV#F2][lq_tmp_x_376:=VV#F2][VV#387:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [5]
  // META constraint id 2 : deptup3.hs:16:20-24


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 11; 28; 29]
  grd true
  lhs {VV#F3 : int | [$k__278[VV#277:=VV#F3][VV#283:=VV#387][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k][lq_tmp_x_367:=VV#F3][lq_tmp_x_369:=VV#387][lq_tmp_x_382:=VV#387][lq_tmp_x_380:=VV#F3][VV#390:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__309[VV#308:=VV#F3][VV#314:=VV#387][lq_tmp_x_376:=VV#387][lq_tmp_x_374:=VV#F3][VV#390:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [5]
  // META constraint id 3 : deptup3.hs:16:20-24


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 11; 28; 31]
  grd true
  lhs {VV#F4 : int | [$k__281[VV#280:=VV#F4][VV#283:=VV#387][x#a13x:=Deptup.n#r12k][lq_tmp_x_371:=Deptup.n#r12k][lq_tmp_x_368:=VV#F4][lq_tmp_x_369:=VV#387][lq_tmp_x_382:=VV#387][lq_tmp_x_381:=VV#F4][VV#393:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__312[VV#311:=VV#F4][VV#314:=VV#387][lq_tmp_x_376:=VV#387][lq_tmp_x_375:=VV#F4][VV#393:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [5]
  // META constraint id 4 : deptup3.hs:16:20-24


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = Deptup.n#r12k)]}
  rhs {VV#F5 : int | [$k__274[VV#273:=VV#F5][lq_tmp_x_366:=VV#F5][VV#396:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [5]
  // META constraint id 5 : deptup3.hs:16:24


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       35;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       11]
  grd true
  lhs {VV#F6 : GHC.Types.Bool | [(? Prop([VV#F6]))]}
  rhs {VV#F6 : GHC.Types.Bool | [$k__319[VV#318:=VV#F6][VV#399:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : deptup3.hs:19:15-36


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       37;
       6;
       22;
       7;
       8;
       9;
       11]
  grd true
  lhs {VV#F7 : GHC.Types.Bool | [(VV#F7 = lq_anf__d14b)]}
  rhs {VV#F7 : GHC.Types.Bool | [(? Prop([VV#F7]))]}
  id 7 tag [1]
  // META constraint id 7 : deptup3.hs:19:30-35


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 39; 8; 9; 11]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = y#a13z)]}
  rhs {VV#F8 : int | [$k__349[VV#348:=VV#F8][lq_tmp_x_345:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_346:=x#a13y][lq_tmp_x_351:=VV#F8][VV#405:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : deptup3.hs:19:35


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9; 41; 11]
  grd true
  lhs {VV#F9 : int | [(VV#F9 = x#a13y)]}
  rhs {VV#F9 : int | [$k__349[VV#348:=VV#F9][lq_tmp_x_345:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_351:=VV#F9][VV#408:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : deptup3.hs:19:30


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 43; 14; 15]
  grd true
  lhs {VV#F10 : (Deptup.Pair  int  int) | []}
  rhs {VV#F10 : (Deptup.Pair  int  int) | [$k__284[VV#283:=VV#F10][VV#411:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [4]
  // META constraint id 10 : deptup3.hs:11:10-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 44; 45; 14; 15]
  grd true
  lhs {VV#F11 : int | [$k__298[VV#297:=VV#F11][lq_tmp_x_295:=x#a13x][lq_tmp_x_296:=lq_anf__d149][lq_tmp_x_292:=VV#411][lq_tmp_x_300:=VV#F11][VV#414:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__278[VV#283:=VV#411][VV#277:=VV#F11][VV#414:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [4]
  // META constraint id 11 : deptup3.hs:11:10-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 44; 14; 15; 47]
  grd true
  lhs {VV#F12 : int | [$k__302[VV#301:=VV#F12][lq_tmp_x_295:=x#a13x][lq_tmp_x_296:=lq_anf__d149][lq_tmp_x_292:=VV#411][lq_tmp_x_304:=VV#F12][VV#417:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__281[VV#283:=VV#411][VV#280:=VV#F12][VV#417:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [4]
  // META constraint id 12 : deptup3.hs:11:10-21


constraint:
  env [0; 1; 49; 2; 3; 4; 5; 6; 7; 8; 9; 11; 14; 15]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__d149)]}
  rhs {VV#F13 : int | [$k__302[VV#301:=VV#F13][lq_tmp_x_295:=x#a13x][lq_tmp_x_304:=VV#F13][VV#420:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [4]
  // META constraint id 13 : deptup3.hs:11:15-20


constraint:
  env [0; 1; 2; 3; 51; 4; 5; 6; 7; 8; 9; 11; 14; 15]
  grd true
  lhs {VV#F14 : int | [(VV#F14 = x#a13x)]}
  rhs {VV#F14 : int | [$k__298[VV#297:=VV#F14][lq_tmp_x_300:=VV#F14][VV#423:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [4]
  // META constraint id 14 : deptup3.hs:11:12


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 8; 9; 11; 14]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = x#a13x)]}
  rhs {VV#F15 : int | [$k__247[VV#246:=VV#F15][lq_tmp_x_286:=VV#F15][VV#426:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [4]
  // META constraint id 15 : deptup3.hs:11:20




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  reft {VV#363 : GHC.Types.Bool | [$k__364]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  reft {VV#314 : (Deptup.Pair  int  int) | [$k__315]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 11]
  reft {VV#308 : int | [$k__309]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 11]
  reft {VV#311 : int | [$k__312]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9; 11]
  reft {VV#348 : int | [$k__349]}
  
  // META wf  : deptup3.hs:19:32-33


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  reft {VV#318 : GHC.Types.Bool | [$k__319]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  reft {VV#273 : int | [$k__274]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 14; 15]
  reft {VV#301 : int | [$k__302]}
  
  // META wf  : deptup3.hs:11:10


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 14; 15]
  reft {VV#297 : int | [$k__298]}
  
  // META wf  : deptup3.hs:11:10


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 14]
  reft {VV#283 : (Deptup.Pair  int  int) | [$k__284]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 14; 78]
  reft {VV#277 : int | [$k__278]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 14; 78]
  reft {VV#280 : int | [$k__281]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  reft {VV#246 : int | [$k__247]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 12]
  reft {VV#250 : int | [$k__251]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#231 : int | [$k__232]}
  
  // META wf  : <no location info>







