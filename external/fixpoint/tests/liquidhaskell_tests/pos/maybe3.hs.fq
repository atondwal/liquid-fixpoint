//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:GHC.Types.Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif CmpLen(v:[a], ~A:[b])  : len([v]) [= ; >=; >; <=; <] len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif Cmp(v:int,~A:int)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:GHC.Types.Bool)   : Prop(v)
qualif False1(v:GHC.Types.Bool)  : ~ Prop(v)


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(1, [Pred @(0); @(0); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

qualif Papp3(v:a,~X:b, ~Y:c, ~P:Pred a b c) : papp3(~P, v, ~X, ~Y)
constant papp3 : func(6, [Pred @(0) @(1) @(2); @(3); @(4); @(5); bool])

// qualif Papp4(v:a,~X:b, ~Y:c, ~Z:d, ~P:Pred a b c d) : papp4(~P, v, ~X, ~Y, ~Z)
constant papp4 : func(8, [Pred @(0) @(1) @(2) @(6); @(3); @(4); @(5); @(7); bool])


constant Prop : func(0, [GHC.Types.Bool; bool])
qualif Fst(v : a, fix##126#Y : b): (v = fst([fix##126#Y])) // "/Users/niki/.cabal/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.3.1.0/include/GHC/Base.spec" (line 26, column 8)
qualif Snd(v : a, fix##126#Y : b): (v = snd([fix##126#Y])) // "/Users/niki/.cabal/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.3.1.0/include/GHC/Base.spec" (line 27, column 8)
qualif Auto(VV : a_aLQ, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aLQ): ((? isJust([fix##126#A0])) => (VV <= fromJust([fix##126#A0]))) // "maybe3.hs" (line 20, column 1)
qualif Auto(v : FAppTy Data.Maybe.Maybe  a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (v = fix##126#A0) // "maybe3.hs" (line 12, column 1)
qualif Auto(VV : a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (? isJust([fix##126#A0])) // "maybe3.hs" (line 12, column 1)
qualif Auto(VV : a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (VV = fromJust([fix##126#A0])) // "maybe3.hs" (line 12, column 1)
qualif Auto(v : FAppTy Data.Maybe.Maybe  a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (&& [(? isJust([fix##126#A0]));
                                                                                                    (? isJust([v]))] => (fromJust([v]) >= fromJust([fix##126#A0]))) // "maybe3.hs" (line 12, column 1)
qualif Auto(v : FAppTy Data.Maybe.Maybe  a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (v = fix##126#A0) // "maybe3.hs" (line 12, column 1)
qualif Auto(VV : a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (? isJust([fix##126#A0])) // "maybe3.hs" (line 12, column 1)
qualif Auto(VV : a_aM2, fix##126#A0 : FAppTy Data.Maybe.Maybe  a_aM2): (VV = fromJust([fix##126#A0])) // "maybe3.hs" (line 12, column 1)

constant Prop : func(0, [GHC.Types.Bool; bool])
constant x_Tuple64 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(3)])
constant x_Tuple54 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(3)])
constant x_Tuple44 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(3)])
constant xListSelector : func(1, [[@(0)]; @(0)])
constant x_Tuple41 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(0)])
constant x_Tuple76 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(5)])
constant addrLen : func(0, [int; int])
constant x_Tuple65 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(4)])
constant x_Tuple52 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(1)])
constant x_Tuple75 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(4)])
constant x_Tuple33 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(2)])
constant fst : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                        @(0)])
constant x_Tuple73 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(2)])
constant x_Tuple31 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(0)])
constant x_Tuple43 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(2)])
constant x_Tuple71 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(0)])
constant x_Tuple32 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(1)])
constant x_Tuple72 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(1)])
constant x_Tuple63 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(2)])
constant x_Tuple51 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(0)])
constant len : func(1, [[@(0)]; int])
constant xsListSelector : func(1, [[@(0)]; [@(0)]])
constant null : func(1, [[@(0)]; bool])
constant x_Tuple53 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(2)])
constant x_Tuple22 : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                              @(1)])
constant fromJust : func(1, [FAppTy Data.Maybe.Maybe  @(0); @(0)])
constant snd : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                        @(1)])
constant x_Tuple62 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(1)])
constant x_Tuple55 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(4)])
constant x_Tuple74 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(3)])
constant cmp : func(0, [GHC.Types.Ordering; GHC.Types.Ordering])
constant x_Tuple42 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(1)])
constant x_Tuple21 : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                              @(0)])
constant x_Tuple61 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(0)])
constant isJust : func(1, [FAppTy Data.Maybe.Maybe  @(0); bool])
constant x_Tuple66 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(5)])
constant GHC.Types.True#6u : GHC.Types.Bool
constant x_Tuple77 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(6)])
bind 0 GHC.Types.True#6u : {VV#94 : GHC.Types.Bool | []}
bind 1 GHC.Types.EQ#6U : {VV#96 : GHC.Types.Ordering | []}
bind 2 GHC.Types.LT#6S : {VV#97 : GHC.Types.Ordering | []}
bind 3 GHC.Types.GT#6W : {VV#98 : GHC.Types.Ordering | []}
bind 4 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 5 GHC.Integer.Type.smallInteger#0Z : {VV : func(0, [int;
                                                         int]) | []}
bind 6 GHC.Types.I##6c : {VV : func(0, [int; int]) | []}
bind 7 fix#GHC.Prim.#43##35##35#98 : {VV : func(0, [int;
                                                    int;
                                                    int]) | []}
bind 8 fix#GHC.Prim.#45##35##35#99 : {VV : func(0, [int;
                                                    int;
                                                    int]) | []}
bind 9 fix#GHC.Prim.#61##61##35##35#9o : {VV : func(0, [int;
                                                        int;
                                                        int]) | []}
bind 10 fix#GHC.Prim.#62##61##35##35#9n : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 11 fix#GHC.Prim.#60##61##35##35#9r : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 12 fix#GHC.Prim.#60##35##35#9q : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 13 fix#GHC.Prim.#62##35##35#9m : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 14 GHC.Types.EQ#6U : {VV#116 : GHC.Types.Ordering | [(cmp([VV#116]) = GHC.Types.EQ#6U)]}
bind 15 GHC.Types.LT#6S : {VV#118 : GHC.Types.Ordering | [(cmp([VV#118]) = GHC.Types.LT#6S)]}
bind 16 GHC.Types.GT#6W : {VV#119 : GHC.Types.Ordering | [(cmp([VV#119]) = GHC.Types.GT#6W)]}
bind 17 hi#aLF : {VV#131 : FAppTy Data.Maybe.Maybe  a_aLQ | []}
bind 18 lo#aLG : {VV#132 : FAppTy Data.Maybe.Maybe  a_aLQ | []}
bind 19 lo0#aLB : {VV#139 : FAppTy Data.Maybe.Maybe  a_aM2 | []}
bind 20 lo#aLC : {v : FAppTy Data.Maybe.Maybe  a_aM2 | [(v = lo0#aLB)]}
bind 21 hi0#aLD : {VV#141 : FAppTy Data.Maybe.Maybe  a_aM2 | []}
bind 22 hi#aLE : {v : FAppTy Data.Maybe.Maybe  a_aM2 | [&& [(&& [(? isJust([lo#aLC]));
                                                                 (? isJust([v]))] => (fromJust([v]) >= fromJust([lo#aLC])));
                                                            (v = hi0#aLD)]]}
bind 23 lq_anf__dMa : {lq_tmp_x151 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_149[VV#148:=lq_tmp_x151][lq_tmp_x144:=hi#aLE];
                                                                       (lq_tmp_x151 = hi#aLE)]}
bind 24 lq_anf__dMb : {lq_tmp_x162 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_160[VV#159:=lq_tmp_x162][lq_tmp_x155:=lo#aLC];
                                                                       (lq_tmp_x162 = lo#aLC)]}
bind 25 VV#178 : {VV#178 : GHC.Types.Bool | []}
bind 26 VV#178 : {VV#178 : GHC.Types.Bool | []}
bind 27 VV#181 : {VV#181 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_160[VV#159:=VV#181][lq_tmp_x155:=lo#aLC][lq_tmp_x162:=VV#181][lq_tmp_x176:=VV#181];
                                                             (VV#181 = lo#aLC);
                                                             (VV#181 = lq_anf__dMb)]}
bind 28 VV#181 : {VV#181 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_160[VV#159:=VV#181][lq_tmp_x155:=lo#aLC][lq_tmp_x162:=VV#181][lq_tmp_x176:=VV#181];
                                                             (VV#181 = lo#aLC);
                                                             (VV#181 = lq_anf__dMb)]}
bind 29 VV#156 : {VV#156 : a_aM2 | [k_157[VV#159:=VV#181][lq_tmp_x155:=lo#aLC][lq_tmp_x162:=VV#181][lq_tmp_x176:=VV#181]]}
bind 30 VV#185 : {VV#185 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_149[VV#148:=VV#185][lq_tmp_x144:=hi#aLE][lq_tmp_x151:=VV#185][lq_tmp_x175:=VV#185];
                                                             (VV#185 = hi#aLE);
                                                             (VV#185 = lq_anf__dMa)]}
bind 31 VV#185 : {VV#185 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_149[VV#148:=VV#185][lq_tmp_x144:=hi#aLE][lq_tmp_x151:=VV#185][lq_tmp_x175:=VV#185];
                                                             (VV#185 = hi#aLE);
                                                             (VV#185 = lq_anf__dMa)]}
bind 32 VV#145 : {VV#145 : a_aM2 | [k_146[VV#148:=VV#185][lq_tmp_x144:=hi#aLE][lq_tmp_x151:=VV#185][lq_tmp_x175:=VV#185]]}
bind 33 VV#189 : {VV#189 : FAppTy Data.Maybe.Maybe  a_aM2 | [(VV#189 = lo0#aLB);
                                                             (VV#189 = lo#aLC)]}
bind 34 VV#189 : {VV#189 : FAppTy Data.Maybe.Maybe  a_aM2 | [(VV#189 = lo0#aLB);
                                                             (VV#189 = lo#aLC)]}
bind 35 VV : {VV : a_aM2 | [&& [(? isJust([lo0#aLB]));
                                (VV = fromJust([lo0#aLB]))]]}
bind 36 VV#193 : {VV#193 : FAppTy Data.Maybe.Maybe  a_aM2 | [&& [(&& [(? isJust([lo#aLC]));
                                                                      (? isJust([VV#193]))] => (fromJust([VV#193]) >= fromJust([lo#aLC])));
                                                                 (VV#193 = hi0#aLD)];
                                                             (VV#193 = hi#aLE)]}
bind 37 VV#193 : {VV#193 : FAppTy Data.Maybe.Maybe  a_aM2 | [&& [(&& [(? isJust([lo#aLC]));
                                                                      (? isJust([VV#193]))] => (fromJust([VV#193]) >= fromJust([lo#aLC])));
                                                                 (VV#193 = hi0#aLD)];
                                                             (VV#193 = hi#aLE)]}
bind 38 VV : {VV : a_aM2 | [&& [(? isJust([hi0#aLD]));
                                (VV = fromJust([hi0#aLD]))]]}
bind 39 VV#197 : {VV#197 : GHC.Types.Bool | [(? Prop([VV#197]));
                                             (VV#197 = GHC.Types.True#6u)]}
bind 40 VV#197 : {VV#197 : GHC.Types.Bool | [(? Prop([VV#197]));
                                             (VV#197 = GHC.Types.True#6u)]}
bind 41 VV#159 : {VV#159 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_160]}
bind 42 VV#148 : {VV#148 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_149]}


constraint:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       14;
       15]
  grd true
  lhs {VV#F1 : a_aM2 | [k_157[VV#159:=VV#181][lq_tmp_x155:=lo#aLC][lq_tmp_x162:=VV#181][lq_tmp_x176:=VV#181][VV#156:=VV#F1][VV#F:=VV#F1];
                        true]}
  rhs {VV#F1 : a_aM2 | [k_173[lq_tmp_x170:=lq_anf__dMa][lq_tmp_x166:=VV#181][VV#172:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]


constraint:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       14;
       15]
  grd true
  lhs {VV#F2 : a_aM2 | [k_157[VV#159:=VV#181][lq_tmp_x155:=lo#aLC][lq_tmp_x162:=VV#181][lq_tmp_x176:=VV#181][VV#156:=VV#F2][VV#F:=VV#F2];
                        true]}
  rhs {VV#F2 : a_aM2 | [((? isJust([lq_anf__dMa])) => (VV#F2 <= fromJust([lq_anf__dMa])))]}
  id 2 tag [2]


constraint:
  env [0;
       16;
       32;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       31]
  grd true
  lhs {VV#F3 : a_aM2 | [k_146[VV#148:=VV#185][lq_tmp_x144:=hi#aLE][lq_tmp_x151:=VV#185][lq_tmp_x175:=VV#185][VV#145:=VV#F3][VV#F:=VV#F3];
                        true]}
  rhs {VV#F3 : a_aM2 | [k_173[lq_tmp_x165:=VV#185][VV#172:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]


constraint:
  env [0;
       16;
       1;
       33;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F4 : FAppTy Data.Maybe.Maybe  a_aM2 | [(VV#F4 = lo0#aLB);
                                                 (VV#F4 = lo#aLC);
                                                 true]}
  rhs {VV#F4 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_160[VV#159:=VV#F4][lq_tmp_x162:=VV#F4][VV#189:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]


constraint:
  env [0;
       16;
       1;
       2;
       34;
       3;
       19;
       35;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F5 : a_aM2 | [&& [(? isJust([lo0#aLB]));
                            (VV#F5 = fromJust([lo0#aLB]))];
                        true]}
  rhs {VV#F5 : a_aM2 | [k_157[VV#159:=VV#189][lq_tmp_x162:=VV#189][VV#156:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]


constraint:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       36;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F6 : FAppTy Data.Maybe.Maybe  a_aM2 | [&& [(&& [(? isJust([lo#aLC]));
                                                          (? isJust([VV#F6]))] => (fromJust([VV#F6]) >= fromJust([lo#aLC])));
                                                     (VV#F6 = hi0#aLD)];
                                                 (VV#F6 = hi#aLE);
                                                 true]}
  rhs {VV#F6 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_149[VV#148:=VV#F6][lq_tmp_x151:=VV#F6][VV#193:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]


constraint:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F7 : a_aM2 | [&& [(? isJust([hi0#aLD]));
                            (VV#F7 = fromJust([hi0#aLD]))];
                        true]}
  rhs {VV#F7 : a_aM2 | [k_146[VV#148:=VV#193][lq_tmp_x151:=VV#193][VV#145:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]


wf:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#172 : a_aM2 | [k_173]}
  


wf:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#159 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_160]}
  


wf:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       41;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#156 : a_aM2 | [k_157]}
  


wf:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#148 : FAppTy Data.Maybe.Maybe  a_aM2 | [k_149]}
  


wf:
  env [0;
       16;
       1;
       2;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       10;
       42;
       11;
       12;
       13;
       14;
       15]
  reft {VV#145 : a_aM2 | [k_146]}
  