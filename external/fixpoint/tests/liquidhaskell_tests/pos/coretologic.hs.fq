qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [int]): (listElts([v]) = Set_empty([0])) // "coretologic.hs" (line 13, column 1)
qualif Auto(VV : (Set_Set  a_a14a), fix##126#A0 : [a_a14a]): (VV = goo([fix##126#A0])) // "coretologic.hs" (line 18, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [int]): (listElts([v]) = Set_empty([0])) // "coretologic.hs" (line 13, column 1)
qualif Auto(VV : (Set_Set  a_a14a), fix##126#A0 : [a_a14a]): (VV = goo([fix##126#A0])) // "coretologic.hs" (line 18, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant Set_emp : (func(1, [(Set_Set  @(0)); bool]))
constant Set_empty : (func(1, [int; (Set_Set  @(0))]))
constant goo : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_cup : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant Set_sub : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             bool]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant Set_dif : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant strLen : (func(0, [int; int]))
constant Set_cap : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant listElts : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_sng : (func(1, [@(0); (Set_Set  @(0))]))
constant Set_mem : (func(1, [@(0); (Set_Set  @(0)); bool]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 Data.Set.Base.empty#r3r : {VV : func(1, [(Set_Set  @(0))]) | []}
bind 2 GHC.Types.EQ#6U : {VV#143 : GHC.Types.Ordering | [(VV#143 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#144 : GHC.Types.Ordering | [(VV#144 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#145 : GHC.Types.Ordering | [(VV#145 = GHC.Types.GT#6W)]}
bind 5 Data.Set.Base.empty#r3r : {VV : func(1, [(Set_Set  @(0))]) | []}
bind 6 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 7 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 8 GHC.Types.EQ#6U : {VV#171 : GHC.Types.Ordering | [(cmp([VV#171]) = GHC.Types.EQ#6U)]}
bind 9 GHC.Types.LT#6S : {VV#172 : GHC.Types.Ordering | [(cmp([VV#172]) = GHC.Types.LT#6S)]}
bind 10 GHC.Types.GT#6W : {VV#173 : GHC.Types.Ordering | [(cmp([VV#173]) = GHC.Types.GT#6W)]}
bind 11 fix##36#dOrd_a14b : {VV#182 : (GHC.Classes.Ord  a_a14a) | []}
bind 12 ds_d14o : {VV#183 : [a_a14a] | [(len([VV#183]) >= 0)]}
bind 13 lq_anf__d14p : {lq_tmp_x_185 : [a_a14a] | [(lq_tmp_x_185 = ds_d14o);
                                                   (len([lq_tmp_x_185]) >= 0)]}
bind 14 lq_anf__d14p : {lq_tmp_x_188 : [a_a14a] | [(lq_tmp_x_188 = ds_d14o);
                                                   (len([lq_tmp_x_188]) >= 0);
                                                   (len([lq_tmp_x_188]) >= 0)]}
bind 15 lq_anf__d14p : {lq_tmp_x_188 : [a_a14a] | [(lq_tmp_x_188 = ds_d14o);
                                                   (len([lq_tmp_x_188]) >= 0);
                                                   (? Set_emp([listElts([lq_tmp_x_188])]));
                                                   (len([lq_tmp_x_188]) = 0);
                                                   ((? null([lq_tmp_x_188])) <=> true);
                                                   (goo([lq_tmp_x_188]) = Set_empty([0]));
                                                   (lq_tmp_x_188 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (? Set_emp([listElts([lq_tmp_x_188])]));
                                                   (len([lq_tmp_x_188]) = 0);
                                                   ((? null([lq_tmp_x_188])) <=> true);
                                                   (goo([lq_tmp_x_188]) = Set_empty([0]));
                                                   (len([lq_tmp_x_188]) >= 0)]}
bind 16 lq_anf__d14p : {lq_tmp_x_200 : [a_a14a] | [(lq_tmp_x_200 = ds_d14o);
                                                   (len([lq_tmp_x_200]) >= 0);
                                                   (len([lq_tmp_x_200]) >= 0)]}
bind 17 x#a13V : {VV : a_a14a | []}
bind 18 xs#a13W : {lq_tmp_x_210 : [a_a14a] | [(len([lq_tmp_x_210]) >= 0)]}
bind 19 lq_anf__d14p : {lq_tmp_x_200 : [a_a14a] | [(lq_tmp_x_200 = ds_d14o);
                                                   (len([lq_tmp_x_200]) >= 0);
                                                   (listElts([lq_tmp_x_200]) = Set_cup([Set_sng([x#a13V]);
                                                                                        listElts([xs#a13W])]));
                                                   (len([lq_tmp_x_200]) = (1 + len([xs#a13W])));
                                                   ((? null([lq_tmp_x_200])) <=> false);
                                                   (xsListSelector([lq_tmp_x_200]) = xs#a13W);
                                                   (xListSelector([lq_tmp_x_200]) = x#a13V);
                                                   (goo([lq_tmp_x_200]) = Set_cup([Set_sng([x#a13V]);
                                                                                   goo([xs#a13W])]));
                                                   (lq_tmp_x_200 = fix#GHC.Types.#58##35#64([x#a13V;
                                                                                             xs#a13W]));
                                                   (listElts([lq_tmp_x_200]) = Set_cup([Set_sng([x#a13V]);
                                                                                        listElts([xs#a13W])]));
                                                   (len([lq_tmp_x_200]) = (1 + len([xs#a13W])));
                                                   ((? null([lq_tmp_x_200])) <=> false);
                                                   (xsListSelector([lq_tmp_x_200]) = xs#a13W);
                                                   (xListSelector([lq_tmp_x_200]) = x#a13V);
                                                   (goo([lq_tmp_x_200]) = Set_cup([Set_sng([x#a13V]);
                                                                                   goo([xs#a13W])]));
                                                   (len([lq_tmp_x_200]) >= 0)]}
bind 20 lq_anf__d14q : {lq_tmp_x_219 : (Set_Set  a_a14a) | [(lq_tmp_x_219 = Set_sng([x#a13V]))]}
bind 21 lq_anf__d14r : {VV#240 : (Set_Set  a_a14a) | [(VV#240 = goo([xs#a13W]))]}
bind 22 lq_tmp_x_266 : {VV#267 : int | []}
bind 23 CoreToLog.foo#rpm : {v : [int] | [(listElts([v]) = Set_empty([0]));
                                          (len([v]) >= 0)]}
bind 24 VV#269 : {VV#269 : [int] | [(? Set_emp([listElts([VV#269])]));
                                    (len([VV#269]) = 0);
                                    ((? null([VV#269])) <=> true);
                                    (goo([VV#269]) = Set_empty([0]));
                                    (len([VV#269]) >= 0)]}
bind 25 VV#269 : {VV#269 : [int] | [(? Set_emp([listElts([VV#269])]));
                                    (len([VV#269]) = 0);
                                    ((? null([VV#269])) <=> true);
                                    (goo([VV#269]) = Set_empty([0]));
                                    (len([VV#269]) >= 0)]}
bind 26 VV#272 : {VV#272 : int | [$k__260[VV#259:=VV#272][lq_tmp_x_258:=VV#269][lq_tmp_x_262:=VV#272]]}
bind 27 VV#272 : {VV#272 : int | [$k__260[VV#259:=VV#272][lq_tmp_x_258:=VV#269][lq_tmp_x_262:=VV#272]]}
bind 28 fldList : {VV#275 : int | []}
bind 29 VV#276 : {VV#276 : int | [$k__264[lq_tmp_x_266:=fldList][VV#263:=VV#276][lq_tmp_x_257:=fldList][lq_tmp_x_262:=VV#276]]}
bind 30 VV#276 : {VV#276 : int | [$k__264[lq_tmp_x_266:=fldList][VV#263:=VV#276][lq_tmp_x_257:=fldList][lq_tmp_x_262:=VV#276]]}
bind 31 VV#279 : {VV#279 : (Set_Set  a_a14a) | [(VV#279 = Set_cup([lq_anf__d14q;
                                                                   lq_anf__d14r]))]}
bind 32 VV#279 : {VV#279 : (Set_Set  a_a14a) | [(VV#279 = Set_cup([lq_anf__d14q;
                                                                   lq_anf__d14r]))]}
bind 33 VV#251 : {VV#251 : a_a14a | [$k__252[lq_tmp_x_248:=fix##36#dOrd_a14b][lq_tmp_x_249:=lq_anf__d14q][lq_tmp_x_250:=lq_anf__d14r][lq_tmp_x_244:=VV#279]]}
bind 34 VV#283 : {VV#283 : (Set_Set  a_a14a) | [(VV#283 = lq_anf__d14r)]}
bind 35 VV#283 : {VV#283 : (Set_Set  a_a14a) | [(VV#283 = lq_anf__d14r)]}
bind 36 VV#234 : {VV#234 : a_a14a | [$k__235[lq_tmp_x_179:=fix##36#dOrd_a14b][lq_tmp_x_180:=xs#a13W][VV:=VV#283][VV#240:=VV#283][lq_tmp_x_256:=VV#283]]}
bind 37 VV#287 : {VV#287 : (Set_Set  a_a14a) | [(VV#287 = lq_anf__d14q)]}
bind 38 VV#287 : {VV#287 : (Set_Set  a_a14a) | [(VV#287 = lq_anf__d14q)]}
bind 39 VV#222 : {VV#222 : a_a14a | [$k__223[lq_tmp_x_221:=x#a13V][lq_tmp_x_219:=VV#287][lq_tmp_x_255:=VV#287]]}
bind 40 VV#291 : {VV#291 : [a_a14a] | [(VV#291 = xs#a13W);
                                       (len([VV#291]) >= 0)]}
bind 41 VV#291 : {VV#291 : [a_a14a] | [(VV#291 = xs#a13W);
                                       (len([VV#291]) >= 0)]}
bind 42 VV : {VV : a_a14a | []}
bind 43 fldList : {VV : a_a14a | []}
bind 44 VV : {VV : a_a14a | []}
bind 45 VV : {VV : a_a14a | [(VV = x#a13V)]}
bind 46 VV#298 : {VV#298 : (Set_Set  a_a14a) | [(? Set_emp([VV#298]))]}
bind 47 VV#298 : {VV#298 : (Set_Set  a_a14a) | [(? Set_emp([VV#298]))]}
bind 48 VV#196 : {VV#196 : a_a14a | [$k__197[lq_tmp_x_195:=VV#298]]}
bind 49 VV#263 : {VV#263 : int | [$k__264]}
bind 50 VV#259 : {VV#259 : int | [$k__260]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10]
  grd true
  lhs {VV#F1 : [int] | [(? Set_emp([listElts([VV#F1])]));
                        (len([VV#F1]) = 0);
                        ((? null([VV#F1])) <=> true);
                        (goo([VV#F1]) = Set_empty([0]));
                        (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [int] | [(listElts([VV#F1]) = Set_empty([0]))]}
  id 1 tag [2]
  // META constraint id 1 : coretologic.hs:13:7-8


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       31]
  grd true
  lhs {VV#F2 : (Set_Set  a_a14a) | [(VV#F2 = Set_cup([lq_anf__d14q;
                                                      lq_anf__d14r]))]}
  rhs {VV#F2 : (Set_Set  a_a14a) | [(VV#F2 = goo([ds_d14o]))]}
  id 2 tag [1]
  // META constraint id 2 : coretologic.hs:19:14-43


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       35;
       4;
       20;
       36;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F3 : a_a14a | [$k__235[lq_tmp_x_179:=fix##36#dOrd_a14b][lq_tmp_x_180:=xs#a13W][VV:=VV#283][VV#240:=VV#283][lq_tmp_x_256:=VV#283][VV#234:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : a_a14a | [$k__252[lq_tmp_x_248:=fix##36#dOrd_a14b][lq_tmp_x_249:=lq_anf__d14q][lq_tmp_x_243:=VV#283][VV#251:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : coretologic.hs:19:37-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       38;
       7;
       39;
       8;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F4 : a_a14a | [$k__223[lq_tmp_x_221:=x#a13V][lq_tmp_x_219:=VV#287][lq_tmp_x_255:=VV#287][VV#222:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : a_a14a | [$k__252[lq_tmp_x_248:=fix##36#dOrd_a14b][lq_tmp_x_242:=VV#287][VV#251:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : coretologic.hs:19:15-25


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       40;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F5 : [a_a14a] | [(VV#F5 = xs#a13W); (len([VV#F5]) >= 0)]}
  rhs {VV#F5 : [a_a14a] | [(len([VV#F5]) < len([ds_d14o]))]}
  id 5 tag [1]
  // META constraint id 5 : coretologic.hs:19:41-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       40;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F6 : [a_a14a] | [(VV#F6 = xs#a13W); (len([VV#F6]) >= 0)]}
  rhs {VV#F6 : [a_a14a] | [(len([VV#F6]) >= 0)]}
  id 6 tag [1]
  // META constraint id 6 : coretologic.hs:19:41-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       41;
       10;
       42;
       11;
       12;
       13]
  grd true
  lhs {VV#F7 : a_a14a | []}
  rhs {VV#F7 : a_a14a | [$k__235[lq_tmp_x_179:=fix##36#dOrd_a14b][VV:=VV#291][VV#234:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : coretologic.hs:19:41-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       45]
  grd true
  lhs {VV#F8 : a_a14a | [(VV#F8 = x#a13V)]}
  rhs {VV#F8 : a_a14a | [$k__223[VV#222:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : coretologic.hs:19:25


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 46; 15]
  grd true
  lhs {VV#F9 : (Set_Set  a_a14a) | [(? Set_emp([VV#F9]))]}
  rhs {VV#F9 : (Set_Set  a_a14a) | [(VV#F9 = goo([ds_d14o]))]}
  id 9 tag [1]
  // META constraint id 9 : coretologic.hs:18:14-18




wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 9; 10]
  reft {VV#263 : int | [$k__264]}
  
  // META wf  : coretologic.hs:13:7-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#259 : int | [$k__260]}
  
  // META wf  : coretologic.hs:13:7-8


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  reft {VV#251 : a_a14a | [$k__252]}
  
  // META wf  : coretologic.hs:19:28-34


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  reft {VV#234 : a_a14a | [$k__235]}
  
  // META wf  : coretologic.hs:19:37-39


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#222 : a_a14a | [$k__223]}
  
  // META wf  : coretologic.hs:19:15-23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#196 : a_a14a | [$k__197]}
  
  // META wf  : coretologic.hs:18:14-18







