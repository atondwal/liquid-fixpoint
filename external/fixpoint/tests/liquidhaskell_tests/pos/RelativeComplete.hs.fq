qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int, fix##126#A0 : int): (fix##126#A0 <= v) // "RelativeComplete.hs" (line 12, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int, fix##126#A0 : int): (fix##126#A0 <= v) // "RelativeComplete.hs" (line 12, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Err.undefined#02v : {VV : func(1, [@(0)]) | []}
bind 1 GHC.Types.False#68 : {VV#116 : GHC.Types.Bool | []}
bind 2 GHC.Types.True#6u : {VV#118 : GHC.Types.Bool | []}
bind 3 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#120 : (GHC.Num.Num  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#121 : GHC.Types.Ordering | [(VV#121 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#122 : GHC.Types.Ordering | [(VV#122 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#123 : GHC.Types.Ordering | [(VV#123 = GHC.Types.GT#6W)]}
bind 7 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 8 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 9 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 10 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 11 GHC.Types.EQ#6U : {VV#148 : GHC.Types.Ordering | [(cmp([VV#148]) = GHC.Types.EQ#6U)]}
bind 12 GHC.Types.LT#6S : {VV#149 : GHC.Types.Ordering | [(cmp([VV#149]) = GHC.Types.LT#6S)]}
bind 13 GHC.Types.GT#6W : {VV#150 : GHC.Types.Ordering | [(cmp([VV#150]) = GHC.Types.GT#6W)]}
bind 14 p : {VV#185 : (Pred  int) | []}
bind 15 q : {VV#186 : (Pred  int) | []}
bind 16 x#aLA : {VV#188 : int | [(? papp1([q; VV#188]))]}
bind 17 lq_anf__dM1 : {lq_tmp_x_189 : GHC.Types.Bool | []}
bind 18 lq_anf__dM2 : {lq_tmp_x_198 : GHC.Types.Bool | [(lq_tmp_x_198 = lq_anf__dM1)]}
bind 19 lq_anf__dM2 : {lq_tmp_x_200 : GHC.Types.Bool | [(lq_tmp_x_200 = lq_anf__dM1)]}
bind 20 lq_anf__dM2 : {lq_tmp_x_200 : GHC.Types.Bool | [(lq_tmp_x_200 = lq_anf__dM1);
                                                        (~ ((? Prop([lq_tmp_x_200]))));
                                                        (~ ((? Prop([lq_tmp_x_200]))));
                                                        (~ ((? Prop([lq_tmp_x_200]))))]}
bind 21 lq_anf__dM2 : {lq_tmp_x_210 : GHC.Types.Bool | [(lq_tmp_x_210 = lq_anf__dM1)]}
bind 22 lq_anf__dM2 : {lq_tmp_x_210 : GHC.Types.Bool | [(lq_tmp_x_210 = lq_anf__dM1);
                                                        (? Prop([lq_tmp_x_210]));
                                                        (? Prop([lq_tmp_x_210]));
                                                        (? Prop([lq_tmp_x_210]))]}
bind 23 lq_anf__dM3 : {lq_tmp_x_216 : int | [(lq_tmp_x_216 = (1  :  int))]}
bind 24 lq_anf__dM4 : {lq_tmp_x_229 : int | [(lq_tmp_x_229 = (x#aLA + lq_anf__dM3))]}
bind 25 x : {VV#241 : int | [$k__236[VV#235:=VV#241][VV:=VV#241]]}
bind 26 i#aLy : {VV#248 : int | []}
bind 27 x : {VV#264 : int | [$k__259[VV#258:=VV#264][VV:=VV#264]]}
bind 28 VV#271 : {VV#271 : Tuple | []}
bind 29 VV#271 : {VV#271 : Tuple | []}
bind 30 VV#274 : {VV#274 : int | [(VV#274 = i#aLy)]}
bind 31 VV#274 : {VV#274 : int | [(VV#274 = i#aLy)]}
bind 32 VV#278 : {VV#278 : int | [$k__262[VV#261:=VV#278][VV:=VV#278]]}
bind 33 VV#278 : {VV#278 : int | [$k__262[VV#261:=VV#278][VV:=VV#278]]}
bind 34 lq_tmp_db_4 : {VV#281 : int | [$k__262[VV#261:=VV#281][VV:=VV#281]]}
bind 35 VV#282 : {VV#282 : Tuple | []}
bind 36 VV#282 : {VV#282 : Tuple | []}
bind 37 VV#285 : {VV#285 : int | [(VV#285 = (x + 1))]}
bind 38 VV#285 : {VV#285 : int | [(VV#285 = (x + 1))]}
bind 39 VV#288 : {VV#288 : int | [$k__259[VV#258:=VV#288][VV:=VV#288]]}
bind 40 VV#288 : {VV#288 : int | [$k__259[VV#258:=VV#288][VV:=VV#288]]}
bind 41 VV#291 : {VV#291 : int | [(VV#291 = i#aLy)]}
bind 42 VV#291 : {VV#291 : int | [(VV#291 = i#aLy)]}
bind 43 VV#294 : {VV#294 : Tuple | []}
bind 44 VV#294 : {VV#294 : Tuple | []}
bind 45 VV#297 : {VV#297 : int | [(VV#297 = lq_anf__dM4)]}
bind 46 VV#297 : {VV#297 : int | [(VV#297 = lq_anf__dM4)]}
bind 47 VV#301 : {VV#301 : int | [$k__239[VV#238:=VV#301][VV:=VV#301]]}
bind 48 VV#301 : {VV#301 : int | [$k__239[VV#238:=VV#301][VV:=VV#301]]}
bind 49 lq_tmp_db_4 : {VV#304 : int | [$k__239[VV#238:=VV#304][VV:=VV#304]]}
bind 50 VV#305 : {VV#305 : Tuple | []}
bind 51 VV#305 : {VV#305 : Tuple | []}
bind 52 VV#308 : {VV#308 : int | [(VV#308 = (x + 1))]}
bind 53 VV#308 : {VV#308 : int | [(VV#308 = (x + 1))]}
bind 54 VV#311 : {VV#311 : int | [$k__236[VV#235:=VV#311][VV:=VV#311]]}
bind 55 VV#311 : {VV#311 : int | [$k__236[VV#235:=VV#311][VV:=VV#311]]}
bind 56 VV#314 : {VV#314 : int | [(VV#314 = lq_anf__dM3)]}
bind 57 VV#314 : {VV#314 : int | [(VV#314 = lq_anf__dM3)]}
bind 58 VV#317 : {VV#317 : int | [(VV#317 = x#aLA)]}
bind 59 VV#317 : {VV#317 : int | [(VV#317 = x#aLA)]}
bind 60 VV#320 : {VV#320 : int | [(VV#320 = 1)]}
bind 61 VV#320 : {VV#320 : int | [(VV#320 = 1)]}
bind 62 VV#323 : {VV#323 : Tuple | []}
bind 63 VV#323 : {VV#323 : Tuple | []}
bind 64 VV#326 : {VV#326 : int | [(VV#326 = x#aLA)]}
bind 65 VV#326 : {VV#326 : int | [(VV#326 = x#aLA)]}
bind 66 VV#329 : {VV#329 : int | [(VV#329 = x#aLA)]}
bind 67 VV#329 : {VV#329 : int | [(VV#329 = x#aLA)]}
bind 68 VV#333 : {VV#333 : int | []}
bind 69 VV#333 : {VV#333 : int | []}
bind 70 lq_tmp_x_165 : {VV#336 : int | []}
bind 71 VV#338 : {VV#338 : int | [(lq_tmp_x_165 <= VV#338)]}
bind 72 VV#338 : {VV#338 : int | [(lq_tmp_x_165 <= VV#338)]}
bind 73 lq_tmp_x_166 : {v : int | [(lq_tmp_x_165 <= v)]}
bind 74 VV#342 : {VV#342 : Tuple | [$k__176[VV#175:=VV#342][lq_tmp_x_167:=lq_tmp_x_165][lq_tmp_x_171:=lq_tmp_x_166][lq_tmp_x_180:=VV#342]]}
bind 75 VV#342 : {VV#342 : Tuple | [$k__176[VV#175:=VV#342][lq_tmp_x_167:=lq_tmp_x_165][lq_tmp_x_171:=lq_tmp_x_166][lq_tmp_x_180:=VV#342]]}
bind 76 VV : {VV : a_aLI | []}
bind 77 lq_tmp_x_154 : {VV : a_aLI | []}
bind 78 VV#348 : {VV#348 : GHC.Types.Bool | [$k__160[VV#159:=VV#348][lq_tmp_x_155:=lq_tmp_x_154][lq_tmp_x_162:=VV#348]]}
bind 79 VV#348 : {VV#348 : GHC.Types.Bool | [$k__160[VV#159:=VV#348][lq_tmp_x_155:=lq_tmp_x_154][lq_tmp_x_162:=VV#348]]}
bind 80 VV#261 : {VV#261 : int | [$k__262]}
bind 81 VV#258 : {VV#258 : int | [$k__259]}
bind 82 VV#238 : {VV#238 : int | [$k__239]}
bind 83 VV#235 : {VV#235 : int | [$k__236]}
bind 84 VV#192 : {VV#192 : int | [$k__193]}
bind 85 VV#168 : {VV#168 : int | [$k__169]}
bind 86 lq_tmp_x_167 : {VV#168 : int | [$k__169]}
bind 87 VV#172 : {VV#172 : int | [$k__173]}
bind 88 lq_tmp_x_171 : {VV#172 : int | [$k__173]}
bind 89 VV#175 : {VV#175 : Tuple | [$k__176]}
bind 90 lq_tmp_x_155 : {VV#156 : a_aLI | [$k__157]}
bind 91 VV#159 : {VV#159 : GHC.Types.Bool | [$k__160]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13; 30]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = i#aLy)]}
  rhs {VV#F1 : int | [$k__259[VV#258:=VV#F1][lq_tmp_db_3:=lq_anf__dM5][VV:=VV#F1][VV#274:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : RelativeComplete.hs:8:24


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13]
  grd true
  lhs {VV#F2 : int | [$k__262[VV#261:=VV#F2][VV:=VV#F2][VV#278:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [(i#aLy <= VV#F2)]}
  id 2 tag [4]
  // META constraint id 2 : RelativeComplete.hs:8:15-21


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 8; 9; 10; 26; 11; 27; 12; 13]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = (x + 1))]}
  rhs {VV#F3 : int | [$k__259[VV#258:=VV#F3][VV:=VV#F3][VV#285:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : RelativeComplete.hs:8:10-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 39; 8; 9; 10; 26; 11; 12; 13]
  grd true
  lhs {VV#F4 : int | [$k__259[VV#258:=VV#F4][VV:=VV#F4][VV#288:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__262[VV#261:=VV#F4][VV:=VV#F4][VV#288:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : RelativeComplete.hs:8:10-22


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       45;
       14;
       15]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = lq_anf__dM4);
                      (&& [(lq_anf__dM4 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F5 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; VV#F5]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F5 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; VV#F5]))]);
                      (&& [(lq_anf__dM3 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (VV#F5 + 1));
                           (? papp1([q; VV#F5]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (VV#F5 + 1));
                           (? papp1([q; VV#F5]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F5 = (VV#F5 + 1));
                           (? papp1([q; VV#F5]))] => && [(? papp1([q; VV#F5]))]);
                      (&& [(lq_anf__dM3 = (VV#F5 + 1));
                           (? papp1([q; VV#F5]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F5 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; VV#F5]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      ((? papp1([q; lq_anf__dM4])) => && [(? papp1([p; lq_anf__dM4]))]);
                      ((? papp1([q; x#aLA])) => && [(? papp1([p; x#aLA]))]);
                      ((? papp1([q; VV#F5])) => && [(? papp1([p; VV#F5]))]);
                      ((? papp1([q; lq_anf__dM3])) => && [(? papp1([p; lq_anf__dM3]))])]}
  rhs {VV#F5 : int | [$k__236[VV#235:=VV#F5][lq_tmp_db_3:=f#aLz][VV:=VV#F5][VV#297:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : RelativeComplete.hs:20:30-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       47]
  grd true
  lhs {VV#F6 : int | [$k__239[VV#238:=VV#F6][VV:=VV#F6][VV#301:=VV#F6][VV#F:=VV#F6];
                      (&& [(lq_anf__dM4 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(VV#F6 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; VV#F6]))]);
                      (&& [(x#aLA = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (VV#F6 + 1));
                           (? papp1([q; VV#F6]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(VV#F6 = (VV#F6 + 1));
                           (? papp1([q; VV#F6]))] => && [(? papp1([q; VV#F6]))]);
                      (&& [(x#aLA = (VV#F6 + 1));
                           (? papp1([q; VV#F6]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(lq_anf__dM3 = (VV#F6 + 1));
                           (? papp1([q; VV#F6]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(VV#F6 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; VV#F6]))]);
                      (&& [(x#aLA = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(lq_anf__dM3 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(VV#F6 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; VV#F6]))]);
                      (&& [(x#aLA = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      ((? papp1([q; lq_anf__dM4])) => && [(? papp1([p; lq_anf__dM4]))]);
                      ((? papp1([q; VV#F6])) => && [(? papp1([p; VV#F6]))]);
                      ((? papp1([q; x#aLA])) => && [(? papp1([p; x#aLA]))]);
                      ((? papp1([q; lq_anf__dM3])) => && [(? papp1([p; lq_anf__dM3]))])]}
  rhs {VV#F6 : int | [(? papp1([p; VV#F6]))]}
  id 6 tag [2]
  // META constraint id 6 : RelativeComplete.hs:20:27


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       52;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = (x + 1));
                      (&& [(x = (x + 1)); (? papp1([q; x]))] => && [(? papp1([q; x]))]);
                      (&& [(lq_anf__dM4 = (x + 1));
                           (? papp1([q; x]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (x + 1)); (? papp1([q; x]))] => && [(? papp1([q;
                                                                                  x#aLA]))]);
                      (&& [(VV#F7 = (x + 1)); (? papp1([q; x]))] => && [(? papp1([q;
                                                                                  VV#F7]))]);
                      (&& [(lq_anf__dM3 = (x + 1));
                           (? papp1([q; x]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(x = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; x]))]);
                      (&& [(lq_anf__dM4 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F7 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; VV#F7]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(x = (x#aLA + 1)); (? papp1([q; x#aLA]))] => && [(? papp1([q;
                                                                                      x]))]);
                      (&& [(lq_anf__dM4 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F7 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; VV#F7]))]);
                      (&& [(lq_anf__dM3 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(x = (VV#F7 + 1)); (? papp1([q; VV#F7]))] => && [(? papp1([q;
                                                                                      x]))]);
                      (&& [(lq_anf__dM4 = (VV#F7 + 1));
                           (? papp1([q; VV#F7]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (VV#F7 + 1));
                           (? papp1([q; VV#F7]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F7 = (VV#F7 + 1));
                           (? papp1([q; VV#F7]))] => && [(? papp1([q; VV#F7]))]);
                      (&& [(lq_anf__dM3 = (VV#F7 + 1));
                           (? papp1([q; VV#F7]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(x = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; x]))]);
                      (&& [(lq_anf__dM4 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F7 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; VV#F7]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      ((? papp1([q; x])) => && [(? papp1([p; x]))]);
                      ((? papp1([q; lq_anf__dM4])) => && [(? papp1([p; lq_anf__dM4]))]);
                      ((? papp1([q; x#aLA])) => && [(? papp1([p; x#aLA]))]);
                      ((? papp1([q; VV#F7])) => && [(? papp1([p; VV#F7]))]);
                      ((? papp1([q; lq_anf__dM3])) => && [(? papp1([p; lq_anf__dM3]))])]}
  rhs {VV#F7 : int | [$k__236[VV#235:=VV#F7][VV:=VV#F7][VV#308:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : RelativeComplete.hs:20:23-27


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       54;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F8 : int | [$k__236[VV#235:=VV#F8][VV:=VV#F8][VV#311:=VV#F8][VV#F:=VV#F8];
                      (&& [(lq_anf__dM4 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F8 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; VV#F8]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM4 + 1));
                           (? papp1([q; lq_anf__dM4]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F8 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; VV#F8]))]);
                      (&& [(lq_anf__dM3 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (VV#F8 + 1));
                           (? papp1([q; VV#F8]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (VV#F8 + 1));
                           (? papp1([q; VV#F8]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F8 = (VV#F8 + 1));
                           (? papp1([q; VV#F8]))] => && [(? papp1([q; VV#F8]))]);
                      (&& [(lq_anf__dM3 = (VV#F8 + 1));
                           (? papp1([q; VV#F8]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      (&& [(lq_anf__dM4 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM4]))]);
                      (&& [(x#aLA = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F8 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; VV#F8]))]);
                      (&& [(lq_anf__dM3 = (lq_anf__dM3 + 1));
                           (? papp1([q; lq_anf__dM3]))] => && [(? papp1([q; lq_anf__dM3]))]);
                      ((? papp1([q; lq_anf__dM4])) => && [(? papp1([p; lq_anf__dM4]))]);
                      ((? papp1([q; x#aLA])) => && [(? papp1([p; x#aLA]))]);
                      ((? papp1([q; VV#F8])) => && [(? papp1([p; VV#F8]))]);
                      ((? papp1([q; lq_anf__dM3])) => && [(? papp1([p; lq_anf__dM3]))])]}
  rhs {VV#F8 : int | [$k__239[VV#238:=VV#F8][VV:=VV#F8][VV#311:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : RelativeComplete.hs:20:23-27


constraint:
  env [0;
       16;
       64;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F9 : int | [(VV#F9 = x#aLA);
                      (&& [(x#aLA = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F9 = (x#aLA + 1));
                           (? papp1([q; x#aLA]))] => && [(? papp1([q; VV#F9]))]);
                      (&& [(x#aLA = (VV#F9 + 1));
                           (? papp1([q; VV#F9]))] => && [(? papp1([q; x#aLA]))]);
                      (&& [(VV#F9 = (VV#F9 + 1));
                           (? papp1([q; VV#F9]))] => && [(? papp1([q; VV#F9]))]);
                      ((? papp1([q; x#aLA])) => && [(? papp1([p; x#aLA]))]);
                      ((? papp1([q; VV#F9])) => && [(? papp1([p; VV#F9]))])]}
  rhs {VV#F9 : int | [(? papp1([p; VV#F9]))]}
  id 9 tag [2]
  // META constraint id 9 : RelativeComplete.hs:20:44


constraint:
  env [0; 16; 1; 2; 66; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = x#aLA);
                       (&& [(VV#F10 = (VV#F10 + 1));
                            (? papp1([q; VV#F10]))] => && [(? papp1([q; VV#F10]))]);
                       (&& [(x#aLA = (VV#F10 + 1));
                            (? papp1([q; VV#F10]))] => && [(? papp1([q; x#aLA]))]);
                       (&& [(VV#F10 = (x#aLA + 1));
                            (? papp1([q; x#aLA]))] => && [(? papp1([q; VV#F10]))]);
                       (&& [(x#aLA = (x#aLA + 1));
                            (? papp1([q; x#aLA]))] => && [(? papp1([q; x#aLA]))]);
                       ((? papp1([q; VV#F10])) => && [(? papp1([p; VV#F10]))]);
                       ((? papp1([q; x#aLA])) => && [(? papp1([p; x#aLA]))])]}
  rhs {VV#F10 : int | [$k__193[VV#192:=VV#F10][lq_tmp_x_195:=VV#F10][VV#329:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : RelativeComplete.hs:20:16


constraint:
  env [0; 1; 2; 3; 4; 68; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F11 : int | []}
  rhs {VV#F11 : int | [$k__169[VV#168:=VV#F11][lq_tmp_x_178:=VV#F11][VV#333:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : RelativeComplete.hs:12:9-17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 71; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F12 : int | [(lq_tmp_x_165 <= VV#F12)]}
  rhs {VV#F12 : int | [$k__173[VV#172:=VV#F12][lq_tmp_x_167:=lq_tmp_x_165][lq_tmp_x_179:=VV#F12][VV#338:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : RelativeComplete.hs:12:9-17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 76; 13]
  grd true
  lhs {VV#F13 : a_aLI | []}
  rhs {VV#F13 : a_aLI | [$k__157[VV#156:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : RelativeComplete.hs:25:5-13




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13]
  reft {VV#261 : int | [$k__262]}
  
  // META wf  : RelativeComplete.hs:8:10-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13]
  reft {VV#258 : int | [$k__259]}
  
  // META wf  : RelativeComplete.hs:8:10-22


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#238 : int | [$k__239]}
  
  // META wf  : RelativeComplete.hs:20:23-27


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#235 : int | [$k__236]}
  
  // META wf  : RelativeComplete.hs:20:23-27


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#192 : int | [$k__193]}
  
  // META wf  : RelativeComplete.hs:20:14


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#168 : int | [$k__169]}
  
  // META wf  : RelativeComplete.hs:12:9-17


wf:
  env [0; 1; 2; 3; 4; 5; 6; 86; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#172 : int | [$k__173]}
  
  // META wf  : RelativeComplete.hs:12:9-17


wf:
  env [0; 1; 2; 3; 4; 5; 6; 86; 7; 8; 88; 9; 10; 11; 12; 13]
  reft {VV#175 : Tuple | [$k__176]}
  
  // META wf  : RelativeComplete.hs:12:9-17


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#156 : a_aLI | [$k__157]}
  
  // META wf  : RelativeComplete.hs:25:5-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 90; 11; 12; 13]
  reft {VV#159 : GHC.Types.Bool | [$k__160]}
  
  // META wf  : RelativeComplete.hs:25:5-13







