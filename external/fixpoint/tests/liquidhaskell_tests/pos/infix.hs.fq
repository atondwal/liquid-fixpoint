qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 7, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 7, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 12, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 12, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 16, column 1)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 16, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 7, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 7, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 12, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 12, column 3)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 16, column 1)
qualif Auto(v : int): (v > 0) // "infix.hs" (line 16, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#174 : (GHC.Num.Num  int) | []}
bind 1 fix#GHC.Classes.#36#fEqInt#35#rse : {VV#176 : (GHC.Classes.Eq  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#177 : GHC.Types.Ordering | [(VV#177 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#178 : GHC.Types.Ordering | [(VV#178 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#179 : GHC.Types.Ordering | [(VV#179 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#221 : GHC.Types.Ordering | [(cmp([VV#221]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#222 : GHC.Types.Ordering | [(cmp([VV#222]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#223 : GHC.Types.Ordering | [(cmp([VV#223]) = GHC.Types.GT#6W)]}
bind 10 x#a136 : {v : int | [(v > 0)]}
bind 11 y#a137 : {v : int | [(v > 0)]}
bind 12 x#a138 : {v : int | [(v > 0)]}
bind 13 y#a139 : {v : int | [(v > 0)]}
bind 14 lq_anf__d13z : {lq_tmp_x_250 : int | [(lq_tmp_x_250 = (0  :  int))]}
bind 15 lq_anf__d13A : {lq_tmp_x_256 : GHC.Types.Bool | [((? Prop([lq_tmp_x_256])) <=> (x#a138 != lq_anf__d13z))]}
bind 16 lq_anf__d13C : {lq_tmp_x_291 : int | [(lq_tmp_x_291 = (x#a138 + y#a139))]}
bind 17 x#a13a : {v : int | [(v > 0)]}
bind 18 y#a13b : {v : int | [(v > 0)]}
bind 19 lq_anf__d13D : {lq_tmp_x_322 : int | [(lq_tmp_x_322 = (0  :  int))]}
bind 20 lq_anf__d13E : {lq_tmp_x_328 : GHC.Types.Bool | [((? Prop([lq_tmp_x_328])) <=> (x#a13a != lq_anf__d13D))]}
bind 21 lq_anf__d13G : {lq_tmp_x_363 : int | [(lq_tmp_x_363 = (x#a13a + y#a13b))]}
bind 22 VV#389 : {VV#389 : int | [$k__380[VV#379:=VV#389][lq_tmp_x_373:=lq_anf__d13F][lq_tmp_x_374:=lq_anf__d13G][lq_tmp_x_382:=VV#389]]}
bind 23 VV#389 : {VV#389 : int | [$k__380[VV#379:=VV#389][lq_tmp_x_373:=lq_anf__d13F][lq_tmp_x_374:=lq_anf__d13G][lq_tmp_x_382:=VV#389]]}
bind 24 VV#392 : {VV#392 : int | [(VV#392 = lq_anf__d13G)]}
bind 25 VV#392 : {VV#392 : int | [(VV#392 = lq_anf__d13G)]}
bind 26 VV#396 : {VV#396 : int | [$k__376[VV#375:=VV#396][lq_tmp_x_378:=VV#396]]}
bind 27 VV#396 : {VV#396 : int | [$k__376[VV#375:=VV#396][lq_tmp_x_378:=VV#396]]}
bind 28 lq_tmp_x_372 : {lq_tmp_x_378 : int | [$k__376[VV#375:=lq_tmp_x_378]]}
bind 29 VV#400 : {VV#400 : int | [$k__350[VV#349:=VV#400][lq_tmp_x_347:=lq_anf__d13E][lq_tmp_x_352:=VV#400][lq_tmp_x_348:=lq_tmp_x_372][lq_tmp_x_386:=lq_tmp_x_372][lq_tmp_x_384:=VV#400]]}
bind 30 VV#400 : {VV#400 : int | [$k__350[VV#349:=VV#400][lq_tmp_x_347:=lq_anf__d13E][lq_tmp_x_352:=VV#400][lq_tmp_x_348:=lq_tmp_x_372][lq_tmp_x_386:=lq_tmp_x_372][lq_tmp_x_384:=VV#400]]}
bind 31 VV#403 : {VV#403 : int | [(VV#403 = y#a13b)]}
bind 32 VV#403 : {VV#403 : int | [(VV#403 = y#a13b)]}
bind 33 VV#406 : {VV#406 : int | [(VV#406 = x#a13a)]}
bind 34 VV#406 : {VV#406 : int | [(VV#406 = x#a13a)]}
bind 35 VV#409 : {VV#409 : GHC.Types.Bool | [(VV#409 = lq_anf__d13E)]}
bind 36 VV#409 : {VV#409 : GHC.Types.Bool | [(VV#409 = lq_anf__d13E)]}
bind 37 VV#412 : {VV#412 : int | [(VV#412 = lq_anf__d13D)]}
bind 38 VV#412 : {VV#412 : int | [(VV#412 = lq_anf__d13D)]}
bind 39 VV#415 : {VV#415 : int | [(VV#415 = x#a13a)]}
bind 40 VV#415 : {VV#415 : int | [(VV#415 = x#a13a)]}
bind 41 VV#418 : {VV#418 : int | [(VV#418 = 0)]}
bind 42 VV#418 : {VV#418 : int | [(VV#418 = 0)]}
bind 43 VV#421 : {VV#421 : int | [$k__308[VV#307:=VV#421][lq_tmp_x_301:=lq_anf__d13B][lq_tmp_x_302:=lq_anf__d13C][lq_tmp_x_310:=VV#421]]}
bind 44 VV#421 : {VV#421 : int | [$k__308[VV#307:=VV#421][lq_tmp_x_301:=lq_anf__d13B][lq_tmp_x_302:=lq_anf__d13C][lq_tmp_x_310:=VV#421]]}
bind 45 VV#424 : {VV#424 : int | [(VV#424 = lq_anf__d13C)]}
bind 46 VV#424 : {VV#424 : int | [(VV#424 = lq_anf__d13C)]}
bind 47 VV#428 : {VV#428 : int | [$k__304[VV#303:=VV#428][lq_tmp_x_306:=VV#428]]}
bind 48 VV#428 : {VV#428 : int | [$k__304[VV#303:=VV#428][lq_tmp_x_306:=VV#428]]}
bind 49 lq_tmp_x_300 : {lq_tmp_x_306 : int | [$k__304[VV#303:=lq_tmp_x_306]]}
bind 50 VV#432 : {VV#432 : int | [$k__278[VV#277:=VV#432][lq_tmp_x_275:=lq_anf__d13A][lq_tmp_x_280:=VV#432][lq_tmp_x_276:=lq_tmp_x_300][lq_tmp_x_314:=lq_tmp_x_300][lq_tmp_x_312:=VV#432]]}
bind 51 VV#432 : {VV#432 : int | [$k__278[VV#277:=VV#432][lq_tmp_x_275:=lq_anf__d13A][lq_tmp_x_280:=VV#432][lq_tmp_x_276:=lq_tmp_x_300][lq_tmp_x_314:=lq_tmp_x_300][lq_tmp_x_312:=VV#432]]}
bind 52 VV#435 : {VV#435 : int | [(VV#435 = y#a139)]}
bind 53 VV#435 : {VV#435 : int | [(VV#435 = y#a139)]}
bind 54 VV#438 : {VV#438 : int | [(VV#438 = x#a138)]}
bind 55 VV#438 : {VV#438 : int | [(VV#438 = x#a138)]}
bind 56 VV#441 : {VV#441 : GHC.Types.Bool | [(VV#441 = lq_anf__d13A)]}
bind 57 VV#441 : {VV#441 : GHC.Types.Bool | [(VV#441 = lq_anf__d13A)]}
bind 58 VV#444 : {VV#444 : int | [(VV#444 = lq_anf__d13z)]}
bind 59 VV#444 : {VV#444 : int | [(VV#444 = lq_anf__d13z)]}
bind 60 VV#447 : {VV#447 : int | [(VV#447 = x#a138)]}
bind 61 VV#447 : {VV#447 : int | [(VV#447 = x#a138)]}
bind 62 VV#450 : {VV#450 : int | [(VV#450 = 0)]}
bind 63 VV#450 : {VV#450 : int | [(VV#450 = 0)]}
bind 64 VV#453 : {VV#453 : int | [(VV#453 = (x#a136 + y#a137))]}
bind 65 VV#453 : {VV#453 : int | [(VV#453 = (x#a136 + y#a137))]}
bind 66 VV#456 : {VV#456 : int | [(VV#456 = y#a137)]}
bind 67 VV#456 : {VV#456 : int | [(VV#456 = y#a137)]}
bind 68 VV#459 : {VV#459 : int | [(VV#459 = x#a136)]}
bind 69 VV#459 : {VV#459 : int | [(VV#459 = x#a136)]}
bind 70 VV#379 : {VV#379 : int | [$k__380]}
bind 71 VV#375 : {VV#375 : int | [$k__376]}
bind 72 VV#349 : {VV#349 : int | [$k__350]}
bind 73 VV#335 : {VV#335 : int | [$k__336]}
bind 74 VV#307 : {VV#307 : int | [$k__308]}
bind 75 VV#303 : {VV#303 : int | [$k__304]}
bind 76 VV#277 : {VV#277 : int | [$k__278]}
bind 77 VV#263 : {VV#263 : int | [$k__264]}




constraint:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 24; 9]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = lq_anf__d13G)]}
  rhs {VV#F1 : int | [$k__376[VV#375:=VV#F1][lq_tmp_x_373:=lq_anf__d13F][lq_tmp_x_378:=VV#F1][VV#392:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]
  // META constraint id 1 : infix.hs:16:35-39


constraint:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9; 26]
  grd true
  lhs {VV#F2 : int | [$k__376[VV#375:=VV#F2][lq_tmp_x_378:=VV#F2][VV#396:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [$k__350[VV#349:=VV#F2][lq_tmp_x_347:=lq_anf__d13E][lq_tmp_x_352:=VV#F2][lq_tmp_x_383:=VV#F2][VV#396:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [1]
  // META constraint id 2 : infix.hs:16:11-31


constraint:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9; 28; 29]
  grd true
  lhs {VV#F3 : int | [$k__350[VV#349:=VV#F3][lq_tmp_x_347:=lq_anf__d13E][lq_tmp_x_352:=VV#F3][lq_tmp_x_348:=lq_tmp_x_372][lq_tmp_x_386:=lq_tmp_x_372][lq_tmp_x_384:=VV#F3][VV#400:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__380[VV#379:=VV#F3][lq_tmp_x_382:=VV#F3][VV#400:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : infix.hs:16:11-31


constraint:
  env [0; 1; 17; 2; 18; 3; 19; 35; 4; 20; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F4 : GHC.Types.Bool | [(VV#F4 = lq_anf__d13E)]}
  rhs {VV#F4 : GHC.Types.Bool | [(? Prop([VV#F4]))]}
  id 4 tag [1]
  // META constraint id 4 : infix.hs:16:25-30


constraint:
  env [0; 1; 17; 2; 18; 3; 19; 4; 5; 37; 6; 7; 8; 9]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = lq_anf__d13D)]}
  rhs {VV#F5 : int | [$k__336[VV#335:=VV#F5][lq_tmp_x_332:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_333:=x#a13a][lq_tmp_x_338:=VV#F5][VV#412:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]
  // META constraint id 5 : infix.hs:16:30


constraint:
  env [0; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 39; 8; 9]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = x#a13a)]}
  rhs {VV#F6 : int | [$k__336[VV#335:=VV#F6][lq_tmp_x_332:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_338:=VV#F6][VV#415:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : infix.hs:16:25


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 45; 14; 15]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = lq_anf__d13C)]}
  rhs {VV#F7 : int | [$k__304[VV#303:=VV#F7][lq_tmp_x_301:=lq_anf__d13B][lq_tmp_x_306:=VV#F7][VV#424:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : infix.hs:12:34-38


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14; 15; 47]
  grd true
  lhs {VV#F8 : int | [$k__304[VV#303:=VV#F8][lq_tmp_x_306:=VV#F8][VV#428:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__278[VV#277:=VV#F8][lq_tmp_x_275:=lq_anf__d13A][lq_tmp_x_280:=VV#F8][lq_tmp_x_311:=VV#F8][VV#428:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : infix.hs:12:10-30


constraint:
  env [0; 16; 1; 49; 2; 50; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14; 15]
  grd true
  lhs {VV#F9 : int | [$k__278[VV#277:=VV#F9][lq_tmp_x_275:=lq_anf__d13A][lq_tmp_x_280:=VV#F9][lq_tmp_x_276:=lq_tmp_x_300][lq_tmp_x_314:=lq_tmp_x_300][lq_tmp_x_312:=VV#F9][VV#432:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__308[VV#307:=VV#F9][lq_tmp_x_310:=VV#F9][VV#432:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]
  // META constraint id 9 : infix.hs:12:10-30


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 56; 9; 12; 13; 14; 15]
  grd true
  lhs {VV#F10 : GHC.Types.Bool | [(VV#F10 = lq_anf__d13A)]}
  rhs {VV#F10 : GHC.Types.Bool | [(? Prop([VV#F10]))]}
  id 10 tag [2]
  // META constraint id 10 : infix.hs:12:24-29


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 58; 12; 13; 14]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = lq_anf__d13z)]}
  rhs {VV#F11 : int | [$k__264[VV#263:=VV#F11][lq_tmp_x_260:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_261:=x#a138][lq_tmp_x_266:=VV#F11][VV#444:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : infix.hs:12:29


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 60; 13; 14]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = x#a138)]}
  rhs {VV#F12 : int | [$k__264[VV#263:=VV#F12][lq_tmp_x_260:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_266:=VV#F12][VV#447:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : infix.hs:12:24




wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9]
  reft {VV#379 : int | [$k__380]}
  
  // META wf  : infix.hs:16:33


wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 9]
  reft {VV#375 : int | [$k__376]}
  
  // META wf  : infix.hs:16:33


wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9]
  reft {VV#349 : int | [$k__350]}
  
  // META wf  : infix.hs:16:11-22


wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9]
  reft {VV#335 : int | [$k__336]}
  
  // META wf  : infix.hs:16:27-28


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14; 15]
  reft {VV#307 : int | [$k__308]}
  
  // META wf  : infix.hs:12:32


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14; 15]
  reft {VV#303 : int | [$k__304]}
  
  // META wf  : infix.hs:12:32


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14; 15]
  reft {VV#277 : int | [$k__278]}
  
  // META wf  : infix.hs:12:10-21


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 12; 13; 14]
  reft {VV#263 : int | [$k__264]}
  
  // META wf  : infix.hs:12:26-27







