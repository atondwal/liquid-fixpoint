qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "monad6.hs" (line 7, column 1)
qualif Auto(v : int): (v >= 0) // "monad6.hs" (line 7, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "monad6.hs" (line 7, column 1)
qualif Auto(v : int): (v >= 0) // "monad6.hs" (line 7, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Base.#36#fMonad#91##93##35#r2J : {VV#226 : (GHC.Base.Monad  fix##91##93#) | []}
bind 2 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#227 : (GHC.Classes.Ord  int) | []}
bind 3 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#228 : (GHC.Num.Num  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#230 : GHC.Types.Ordering | [(VV#230 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#231 : GHC.Types.Ordering | [(VV#231 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#232 : GHC.Types.Ordering | [(VV#232 = GHC.Types.GT#6W)]}
bind 7 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 8 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 9 GHC.Types.EQ#6U : {VV#274 : GHC.Types.Ordering | [(cmp([VV#274]) = GHC.Types.EQ#6U)]}
bind 10 GHC.Types.LT#6S : {VV#275 : GHC.Types.Ordering | [(cmp([VV#275]) = GHC.Types.LT#6S)]}
bind 11 GHC.Types.GT#6W : {VV#276 : GHC.Types.Ordering | [(cmp([VV#276]) = GHC.Types.GT#6W)]}
bind 12 fix##36#dMonad_a13G : {VV#282 : (GHC.Base.Monad  m_a13F) | []}
bind 13 z#a13q : {VV : (m_a13F  int) | []}
bind 14 x#a13r : {VV#284 : int | [$k__285]}
bind 15 lq_anf__d14g : {lq_tmp_x_310 : int | [(lq_tmp_x_310 = (0  :  int))]}
bind 16 lq_anf__d14h : {lq_tmp_x_316 : GHC.Types.Bool | [((? Prop([lq_tmp_x_316])) <=> (x#a13r >= lq_anf__d14g))]}
bind 17 lq_anf__d14i : {lq_tmp_x_333 : int | [(lq_tmp_x_333 = (1  :  int))]}
bind 18 lq_anf__d14j : {lq_tmp_x_346 : int | [(lq_tmp_x_346 = (x#a13r + lq_anf__d14i))]}
bind 19 lq_anf__d14k : {lq_tmp_x_360 : int | [$k__358[VV#357:=lq_tmp_x_360][lq_tmp_x_355:=lq_anf__d14h][lq_tmp_x_356:=lq_anf__d14j]]}
bind 20 lq_anf__d14m : {lq_tmp_x_430 : int | [(lq_tmp_x_430 = (0  :  int))]}
bind 21 lq_tmp_x_444 : {VV#445 : int | []}
bind 22 lq_anf__d14n : {lq_tmp_x_436 : [int] | [(len([lq_tmp_x_436]) = 0);
                                                ((? null([lq_tmp_x_436])) <=> true);
                                                (len([lq_tmp_x_436]) >= 0)]}
bind 23 lq_tmp_x_462 : {VV#463 : int | []}
bind 24 lq_anf__d14o : {lq_tmp_x_450 : [int] | [(len([lq_tmp_x_450]) = (1 + len([lq_anf__d14n])));
                                                ((? null([lq_tmp_x_450])) <=> false);
                                                (xsListSelector([lq_tmp_x_450]) = lq_anf__d14n);
                                                (xListSelector([lq_tmp_x_450]) = lq_anf__d14m);
                                                (len([lq_tmp_x_450]) >= 0)]}
bind 25 Foo.xM#r12h : {VV#426 : [int] | [$k__427;
                                         (len([VV#426]) >= 0)]}
bind 26 VV#491 : {VV#491 : [int] | [(len([VV#491]) >= 0)]}
bind 27 VV#491 : {VV#491 : [int] | [(len([VV#491]) >= 0)]}
bind 28 VV#494 : {VV#494 : int | [(VV#494 >= 0)]}
bind 29 VV#494 : {VV#494 : int | [(VV#494 >= 0)]}
bind 30 lq_tmp_x_422 : {VV#497 : int | []}
bind 31 VV#498 : {VV#498 : int | []}
bind 32 VV#498 : {VV#498 : int | []}
bind 33 VV#501 : {VV#501 : [int] | [(VV#501 = lq_anf__d14o);
                                    (len([VV#501]) >= 0)]}
bind 34 VV#501 : {VV#501 : [int] | [(VV#501 = lq_anf__d14o);
                                    (len([VV#501]) >= 0)]}
bind 35 VV#504 : {VV#504 : int | [$k__456[VV#455:=VV#504][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_454:=lq_anf__d14n][lq_tmp_x_458:=VV#504][lq_tmp_x_450:=VV#501][lq_tmp_x_489:=VV#501][lq_tmp_x_486:=VV#504]]}
bind 36 VV#504 : {VV#504 : int | [$k__456[VV#455:=VV#504][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_454:=lq_anf__d14n][lq_tmp_x_458:=VV#504][lq_tmp_x_450:=VV#501][lq_tmp_x_489:=VV#501][lq_tmp_x_486:=VV#504]]}
bind 37 lq_tmp_x_481 : {VV#507 : int | []}
bind 38 VV#508 : {VV#508 : int | [$k__460[lq_tmp_x_462:=lq_tmp_x_481][VV#459:=VV#508][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_454:=lq_anf__d14n][lq_tmp_x_458:=VV#508][lq_tmp_x_449:=lq_tmp_x_481][lq_tmp_x_487:=lq_tmp_x_481][lq_tmp_x_488:=VV#508]]}
bind 39 VV#508 : {VV#508 : int | [$k__460[lq_tmp_x_462:=lq_tmp_x_481][VV#459:=VV#508][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_454:=lq_anf__d14n][lq_tmp_x_458:=VV#508][lq_tmp_x_449:=lq_tmp_x_481][lq_tmp_x_487:=lq_tmp_x_481][lq_tmp_x_488:=VV#508]]}
bind 40 VV#511 : {VV#511 : [int] | [(VV#511 = lq_anf__d14n);
                                    (len([VV#511]) >= 0)]}
bind 41 VV#511 : {VV#511 : [int] | [(VV#511 = lq_anf__d14n);
                                    (len([VV#511]) >= 0)]}
bind 42 VV#514 : {VV#514 : int | [$k__438[VV#437:=VV#514][lq_tmp_x_440:=VV#514][lq_tmp_x_436:=VV#511][lq_tmp_x_468:=VV#511][lq_tmp_x_465:=VV#514]]}
bind 43 VV#514 : {VV#514 : int | [$k__438[VV#437:=VV#514][lq_tmp_x_440:=VV#514][lq_tmp_x_436:=VV#511][lq_tmp_x_468:=VV#511][lq_tmp_x_465:=VV#514]]}
bind 44 lq_tmp_x_447 : {VV#517 : int | []}
bind 45 VV#518 : {VV#518 : int | [$k__442[lq_tmp_x_444:=lq_tmp_x_447][VV#441:=VV#518][lq_tmp_x_440:=VV#518][lq_tmp_x_435:=lq_tmp_x_447][lq_tmp_x_466:=lq_tmp_x_447][lq_tmp_x_467:=VV#518]]}
bind 46 VV#518 : {VV#518 : int | [$k__442[lq_tmp_x_444:=lq_tmp_x_447][VV#441:=VV#518][lq_tmp_x_440:=VV#518][lq_tmp_x_435:=lq_tmp_x_447][lq_tmp_x_466:=lq_tmp_x_447][lq_tmp_x_467:=VV#518]]}
bind 47 VV#521 : {VV#521 : int | [(VV#521 = lq_anf__d14m)]}
bind 48 VV#521 : {VV#521 : int | [(VV#521 = lq_anf__d14m)]}
bind 49 VV#524 : {VV#524 : int | [(VV#524 = 0)]}
bind 50 VV#524 : {VV#524 : int | [(VV#524 = 0)]}
bind 51 lq_tmp_x_396 : {lq_tmp_x_396 : (m_a13F  int) | []}
bind 52 VV : {VV : m_a13F | []}
bind 53 VV#529 : {VV#529 : int | [$k__408[VV#407:=VV#529][lq_tmp_x_16:=z#a13q][lq_tmp_x_19:=lq_anf__d14l][lq_tmp_x_410:=VV#529]]}
bind 54 VV#529 : {VV#529 : int | [$k__408[VV#407:=VV#529][lq_tmp_x_16:=z#a13q][lq_tmp_x_19:=lq_anf__d14l][lq_tmp_x_410:=VV#529]]}
bind 55 VV#532 : {VV#532 : int | [(VV#532 >= 0)]}
bind 56 VV#532 : {VV#532 : int | [(VV#532 >= 0)]}
bind 57 VV#536 : {VV#536 : int | [$k__404[VV#403:=VV#536][lq_tmp_x_16:=z#a13q][lq_tmp_x_406:=VV#536]]}
bind 58 VV#536 : {VV#536 : int | [$k__404[VV#403:=VV#536][lq_tmp_x_16:=z#a13q][lq_tmp_x_406:=VV#536]]}
bind 59 lq_tmp_x_20 : {lq_tmp_x_406 : int | [$k__404[VV#403:=lq_tmp_x_406][lq_tmp_x_16:=z#a13q]]}
bind 60 lq_tmp_x_415 : {lq_tmp_x_415 : (m_a13F  int) | [$k__295[VV#294:=lq_tmp_x_415][x#a13r:=lq_tmp_x_20][lq_tmp_x_417:=lq_tmp_x_20]]}
bind 61 VV#288 : {VV#288 : m_a13F | [$k__289[x#a13r:=lq_tmp_x_20][lq_tmp_x_417:=lq_tmp_x_20]]}
bind 62 VV#542 : {VV#542 : int | [$k__292[VV#291:=VV#542][x#a13r:=lq_tmp_x_20][lq_tmp_x_417:=lq_tmp_x_20][lq_tmp_x_414:=VV#542]]}
bind 63 VV#542 : {VV#542 : int | [$k__292[VV#291:=VV#542][x#a13r:=lq_tmp_x_20][lq_tmp_x_417:=lq_tmp_x_20][lq_tmp_x_414:=VV#542]]}
bind 64 VV#545 : {VV#545 : int | [$k__408[VV#407:=VV#545][lq_tmp_x_16:=z#a13q][lq_tmp_x_410:=VV#545]]}
bind 65 VV#545 : {VV#545 : int | [$k__408[VV#407:=VV#545][lq_tmp_x_16:=z#a13q][lq_tmp_x_410:=VV#545]]}
bind 66 lq_tmp_x_412 : {lq_tmp_x_412 : (m_a13F  int) | [(lq_tmp_x_412 = z#a13q)]}
bind 67 VV : {VV : m_a13F | []}
bind 68 VV#550 : {VV#550 : int | [(VV#550 >= 0)]}
bind 69 VV#550 : {VV#550 : int | [(VV#550 >= 0)]}
bind 70 VV#553 : {VV#553 : int | [$k__404[VV#403:=VV#553][lq_tmp_x_406:=VV#553]]}
bind 71 VV#553 : {VV#553 : int | [$k__404[VV#403:=VV#553][lq_tmp_x_406:=VV#553]]}
bind 72 lq_tmp_x_384 : {lq_tmp_x_384 : (m_a13F  int) | [$k__381[VV#380:=lq_tmp_x_384][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k]]}
bind 73 VV#374 : {VV#374 : m_a13F | [$k__375[lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k]]}
bind 74 VV#558 : {VV#558 : int | [$k__378[VV#377:=VV#558][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k][lq_tmp_x_383:=VV#558]]}
bind 75 VV#558 : {VV#558 : int | [$k__378[VV#377:=VV#558][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k][lq_tmp_x_383:=VV#558]]}
bind 76 VV#561 : {VV#561 : int | [$k__292[VV#291:=VV#561]]}
bind 77 VV#561 : {VV#561 : int | [$k__292[VV#291:=VV#561]]}
bind 78 VV#564 : {VV#564 : int | [(VV#564 = lq_anf__d14k)]}
bind 79 VV#564 : {VV#564 : int | [(VV#564 = lq_anf__d14k)]}
bind 80 VV#568 : {VV#568 : int | [$k__371[VV#370:=VV#568][lq_tmp_x_373:=VV#568]]}
bind 81 VV#568 : {VV#568 : int | [$k__371[VV#370:=VV#568][lq_tmp_x_373:=VV#568]]}
bind 82 lq_tmp_x_367 : {lq_tmp_x_373 : int | [$k__371[VV#370:=lq_tmp_x_373]]}
bind 83 lq_tmp_x_387 : {lq_tmp_x_387 : (m_a13F  int) | []}
bind 84 VV : {VV : m_a13F | []}
bind 85 VV#574 : {VV#574 : int | [$k__305[VV#304:=VV#574][lq_tmp_x_307:=VV#574][lq_tmp_x_28:=lq_tmp_x_367][lq_tmp_x_389:=lq_tmp_x_367][lq_tmp_x_386:=VV#574]]}
bind 86 VV#574 : {VV#574 : int | [$k__305[VV#304:=VV#574][lq_tmp_x_307:=VV#574][lq_tmp_x_28:=lq_tmp_x_367][lq_tmp_x_389:=lq_tmp_x_367][lq_tmp_x_386:=VV#574]]}
bind 87 VV#577 : {VV#577 : int | [$k__378[VV#377:=VV#577][lq_tmp_x_383:=VV#577]]}
bind 88 VV#577 : {VV#577 : int | [$k__378[VV#377:=VV#577][lq_tmp_x_383:=VV#577]]}
bind 89 VV#580 : {VV#580 : int | [(VV#580 = lq_anf__d14j)]}
bind 90 VV#580 : {VV#580 : int | [(VV#580 = lq_anf__d14j)]}
bind 91 VV#583 : {VV#583 : GHC.Types.Bool | [(VV#583 = lq_anf__d14h)]}
bind 92 VV#583 : {VV#583 : GHC.Types.Bool | [(VV#583 = lq_anf__d14h)]}
bind 93 VV#586 : {VV#586 : int | [(VV#586 = lq_anf__d14i)]}
bind 94 VV#586 : {VV#586 : int | [(VV#586 = lq_anf__d14i)]}
bind 95 VV#589 : {VV#589 : int | [(VV#589 = x#a13r)]}
bind 96 VV#589 : {VV#589 : int | [(VV#589 = x#a13r)]}
bind 97 VV#592 : {VV#592 : int | [(VV#592 = 1)]}
bind 98 VV#592 : {VV#592 : int | [(VV#592 = 1)]}
bind 99 VV#595 : {VV#595 : int | [(VV#595 = lq_anf__d14g)]}
bind 100 VV#595 : {VV#595 : int | [(VV#595 = lq_anf__d14g)]}
bind 101 VV#598 : {VV#598 : int | [(VV#598 = x#a13r)]}
bind 102 VV#598 : {VV#598 : int | [(VV#598 = x#a13r)]}
bind 103 VV#601 : {VV#601 : int | [(VV#601 = 0)]}
bind 104 VV#601 : {VV#601 : int | [(VV#601 = 0)]}
bind 105 fldList : {VV : a_12 | []}
bind 106 VV#459 : {VV#459 : int | [$k__460]}
bind 107 VV#455 : {VV#455 : int | [$k__456]}
bind 108 VV#441 : {VV#441 : int | [$k__442]}
bind 109 VV#437 : {VV#437 : int | [$k__438]}
bind 110 VV#426 : {VV#426 : [int] | [$k__427;
                                     (len([VV#426]) >= 0)]}
bind 111 VV#419 : {VV#419 : int | [$k__420]}
bind 112 lq_tmp_x_422 : {VV#611 : int | []}
bind 113 VV#423 : {VV#423 : int | [$k__424]}
bind 114 VV#407 : {VV#407 : int | [$k__408]}
bind 115 VV#403 : {VV#403 : int | [$k__404]}
bind 116 VV#284 : {VV#284 : int | [$k__285]}
bind 117 VV#377 : {VV#377 : int | [$k__378]}
bind 118 VV#370 : {VV#370 : int | [$k__371]}
bind 119 VV#357 : {VV#357 : int | [$k__358]}
bind 120 VV#323 : {VV#323 : int | [$k__324]}
bind 121 VV#304 : {VV#304 : int | [$k__305]}
bind 122 VV#291 : {VV#291 : int | [$k__292]}




constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       72;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F16 : (m_a13F  int) | [$k__381[VV#380:=VV#F16][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k][lq_tmp_x_384:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : (m_a13F  int) | [$k__295[VV#294:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]
  // META constraint id 16 : monad6.hs:8:12-49


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 24; 9; 10; 26; 11]
  grd true
  lhs {VV#F1 : [int] | [(len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [int] | [$k__427[VV#426:=VV#F1][VV#491:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : monad6.hs:12:6-12


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       73;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F17 : m_a13F | [$k__375[lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k][VV#374:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : m_a13F | [$k__289[VV#288:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [1]
  // META constraint id 17 : monad6.hs:8:12-49


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 24; 9; 10; 11; 27; 28]
  grd true
  lhs {VV#F2 : int | [(VV#F2 >= 0)]}
  rhs {VV#F2 : int | [$k__420[VV#426:=VV#491][VV#419:=VV#F2][VV#494:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : monad6.hs:12:6-12


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       74;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F18 : int | [$k__378[VV#377:=VV#F18][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k][lq_tmp_x_383:=VV#F18][VV#558:=VV#F18][VV#F:=VV#F18]]}
  rhs {VV#F18 : int | [$k__292[VV#291:=VV#F18][VV#558:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [1]
  // META constraint id 18 : monad6.hs:8:12-49


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 24; 9; 10; 11; 27; 30; 31]
  grd true
  lhs {VV#F3 : int | []}
  rhs {VV#F3 : int | [$k__424[VV#423:=VV#F3][VV#498:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : monad6.hs:12:6-12


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       76;
       13;
       14;
       15]
  grd true
  lhs {VV#F19 : int | [$k__292[VV#291:=VV#F19][VV#561:=VV#F19][VV#F:=VV#F19]]}
  rhs {VV#F19 : int | [$k__378[VV#377:=VV#F19][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_369:=lq_anf__d14k][lq_tmp_x_383:=VV#F19][VV#561:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [1]
  // META constraint id 19 : monad6.hs:8:12-49


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 20; 5; 6; 22; 7; 8; 24; 9; 10; 11]
  grd true
  lhs {VV#F4 : int | [$k__456[VV#455:=VV#F4][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_454:=lq_anf__d14n][lq_tmp_x_458:=VV#F4][lq_tmp_x_450:=VV#501][lq_tmp_x_489:=VV#501][lq_tmp_x_486:=VV#F4][VV#504:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [(VV#F4 >= 0)]}
  id 4 tag [2]
  // META constraint id 4 : monad6.hs:12:10-12


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       78;
       15]
  grd true
  lhs {VV#F20 : int | [(VV#F20 = lq_anf__d14k)]}
  rhs {VV#F20 : int | [$k__371[VV#370:=VV#F20][lq_tmp_x_368:=lq_anf__d14f][lq_tmp_x_373:=VV#F20][VV#564:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [1]
  // META constraint id 20 : monad6.hs:8:21-49


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 9; 41; 10; 42; 11]
  grd true
  lhs {VV#F5 : int | [$k__438[VV#437:=VV#F5][lq_tmp_x_440:=VV#F5][lq_tmp_x_436:=VV#511][lq_tmp_x_468:=VV#511][lq_tmp_x_465:=VV#F5][VV#514:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__456[VV#455:=VV#F5][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_448:=VV#511][lq_tmp_x_458:=VV#F5][VV#514:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : <no location info>


constraint:
  env [0;
       16;
       80;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F21 : int | [$k__371[VV#370:=VV#F21][lq_tmp_x_373:=VV#F21][VV#568:=VV#F21][VV#F:=VV#F21]]}
  rhs {VV#F21 : int | [$k__305[VV#304:=VV#F21][lq_tmp_x_307:=VV#F21][lq_tmp_x_385:=VV#F21][VV#568:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [1]
  // META constraint id 21 : monad6.hs:8:12-17


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 9; 41; 10; 42; 11]
  grd true
  lhs {VV#F6 : int | [$k__438[VV#437:=VV#F6][lq_tmp_x_440:=VV#F6][lq_tmp_x_436:=VV#511][lq_tmp_x_468:=VV#511][lq_tmp_x_465:=VV#F6][VV#514:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__460[lq_tmp_x_462:=lq_anf__d14m][VV#459:=VV#F6][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_448:=VV#511][lq_tmp_x_458:=VV#F6][VV#514:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : <no location info>


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       82;
       3;
       19;
       83;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F22 : (m_a13F  int) | []}
  rhs {VV#F22 : (m_a13F  int) | [$k__381[VV#380:=VV#F22][lq_tmp_x_384:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [1]
  // META constraint id 22 : monad6.hs:8:12-17


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 9; 41; 10; 11; 44; 45]
  grd true
  lhs {VV#F7 : int | [$k__442[lq_tmp_x_444:=lq_tmp_x_447][VV#441:=VV#F7][lq_tmp_x_440:=VV#F7][lq_tmp_x_435:=lq_tmp_x_447][lq_tmp_x_466:=lq_tmp_x_447][lq_tmp_x_467:=VV#F7][VV#518:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : int | [$k__460[lq_tmp_x_462:=lq_tmp_x_447][VV#459:=VV#F7][lq_tmp_x_453:=lq_anf__d14m][lq_tmp_x_458:=VV#F7][VV#518:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : <no location info>


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       82;
       3;
       19;
       4;
       84;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F23 : m_a13F | []}
  rhs {VV#F23 : m_a13F | [$k__375[VV#374:=VV#F23][VV#F:=VV#F23]]}
  id 23 tag [1]
  // META constraint id 23 : monad6.hs:8:12-17


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 9; 10; 11; 47]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = lq_anf__d14m)]}
  rhs {VV#F8 : int | [$k__456[VV#455:=VV#F8][lq_tmp_x_458:=VV#F8][VV#521:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : monad6.hs:12:11


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       82;
       3;
       19;
       4;
       5;
       85;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F24 : int | [$k__305[VV#304:=VV#F24][lq_tmp_x_307:=VV#F24][lq_tmp_x_28:=lq_tmp_x_367][lq_tmp_x_389:=lq_tmp_x_367][lq_tmp_x_386:=VV#F24][VV#574:=VV#F24][VV#F:=VV#F24]]}
  rhs {VV#F24 : int | [$k__378[VV#377:=VV#F24][lq_tmp_x_383:=VV#F24][VV#574:=VV#F24][VV#F:=VV#F24]]}
  id 24 tag [1]
  // META constraint id 24 : monad6.hs:8:12-17


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F9 : int | [$k__408[VV#407:=VV#F9][lq_tmp_x_16:=z#a13q][lq_tmp_x_19:=lq_anf__d14l][lq_tmp_x_410:=VV#F9][VV#529:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [(VV#F9 >= 0)]}
  id 9 tag [1]
  // META constraint id 9 : monad6.hs:(7,9)-(8,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       82;
       3;
       19;
       4;
       5;
       6;
       7;
       87;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F25 : int | [$k__378[VV#377:=VV#F25][lq_tmp_x_383:=VV#F25][VV#577:=VV#F25][VV#F:=VV#F25]]}
  rhs {VV#F25 : int | [$k__305[VV#304:=VV#F25][lq_tmp_x_307:=VV#F25][lq_tmp_x_28:=lq_tmp_x_367][lq_tmp_x_389:=lq_tmp_x_367][lq_tmp_x_386:=VV#F25][VV#577:=VV#F25][VV#F:=VV#F25]]}
  id 25 tag [1]
  // META constraint id 25 : monad6.hs:8:12-17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 55; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F10 : int | [(VV#F10 >= 0)]}
  rhs {VV#F10 : int | [$k__408[VV#407:=VV#F10][lq_tmp_x_16:=z#a13q][lq_tmp_x_19:=lq_anf__d14l][lq_tmp_x_410:=VV#F10][VV#532:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : monad6.hs:(7,9)-(8,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       89;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F26 : int | [(VV#F26 = lq_anf__d14j)]}
  rhs {VV#F26 : int | [$k__358[VV#357:=VV#F26][lq_tmp_x_355:=lq_anf__d14h][lq_tmp_x_360:=VV#F26][VV#580:=VV#F26][VV#F:=VV#F26]]}
  id 26 tag [1]
  // META constraint id 26 : monad6.hs:8:44-48


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 10; 11; 12; 13]
  grd true
  lhs {VV#F11 : int | [$k__404[VV#403:=VV#F11][lq_tmp_x_16:=z#a13q][lq_tmp_x_406:=VV#F11][VV#536:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__285[VV#284:=VV#F11][lq_tmp_x_413:=VV#F11][VV#536:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : monad6.hs:(7,9)-(8,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       91;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F27 : GHC.Types.Bool | [(VV#F27 = lq_anf__d14h)]}
  rhs {VV#F27 : GHC.Types.Bool | [(? Prop([VV#F27]))]}
  id 27 tag [1]
  // META constraint id 27 : monad6.hs:8:35-40


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 59; 12; 13; 62]
  grd true
  lhs {VV#F12 : int | [$k__292[VV#291:=VV#F12][x#a13r:=lq_tmp_x_20][lq_tmp_x_417:=lq_tmp_x_20][lq_tmp_x_414:=VV#F12][VV#542:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__408[VV#407:=VV#F12][lq_tmp_x_16:=z#a13q][lq_tmp_x_410:=VV#F12][VV#542:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : monad6.hs:(7,9)-(8,49)


constraint:
  env [0; 1; 2; 3; 99; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F28 : int | [(VV#F28 = lq_anf__d14g)]}
  rhs {VV#F28 : int | [$k__324[VV#323:=VV#F28][lq_tmp_x_320:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_321:=x#a13r][lq_tmp_x_326:=VV#F28][VV#595:=VV#F28][VV#F:=VV#F28]]}
  id 28 tag [1]
  // META constraint id 28 : monad6.hs:8:40


constraint:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 59; 12; 13]
  grd true
  lhs {VV#F13 : int | [$k__408[VV#407:=VV#F13][lq_tmp_x_16:=z#a13q][lq_tmp_x_410:=VV#F13][VV#545:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : int | [$k__292[VV#291:=VV#F13][x#a13r:=lq_tmp_x_20][lq_tmp_x_417:=lq_tmp_x_20][lq_tmp_x_414:=VV#F13][VV#545:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : monad6.hs:(7,9)-(8,49)


constraint:
  env [0; 1; 2; 3; 4; 5; 101; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F29 : int | [(VV#F29 = x#a13r)]}
  rhs {VV#F29 : int | [$k__324[VV#323:=VV#F29][lq_tmp_x_320:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_326:=VV#F29][VV#598:=VV#F29][VV#F:=VV#F29]]}
  id 29 tag [1]
  // META constraint id 29 : monad6.hs:8:35


constraint:
  env [0; 1; 2; 3; 4; 68; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F14 : int | [(VV#F14 >= 0)]}
  rhs {VV#F14 : int | [$k__404[VV#403:=VV#F14][lq_tmp_x_406:=VV#F14][VV#550:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : monad6.hs:7:17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F15 : int | [$k__404[VV#403:=VV#F15][lq_tmp_x_406:=VV#F15][VV#553:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : int | [(VV#F15 >= 0)]}
  id 15 tag [1]
  // META constraint id 15 : monad6.hs:7:17




wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 23; 8; 9; 10; 11]
  reft {VV#459 : int | [$k__460]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8; 9; 10; 11]
  reft {VV#455 : int | [$k__456]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 7; 8; 9; 10; 11]
  reft {VV#441 : int | [$k__442]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#437 : int | [$k__438]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#426 : [int] | [$k__427]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 110]
  reft {VV#419 : int | [$k__420]}
  
  // META wf  : <no location info>


wf:
  env [0; 112; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#423 : int | [$k__424]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#407 : int | [$k__408]}
  
  // META wf  : monad6.hs:(7,9)-(8,49)


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#403 : int | [$k__404]}
  
  // META wf  : monad6.hs:(7,9)-(8,49)


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#284 : int | [$k__285]}
  
  // META wf  : monad6.hs:7:1-3


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#380 : (m_a13F  int) | [$k__381]}
  
  // META wf  : monad6.hs:8:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#374 : m_a13F | [$k__375]}
  
  // META wf  : monad6.hs:8:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#377 : int | [$k__378]}
  
  // META wf  : monad6.hs:8:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#370 : int | [$k__371]}
  
  // META wf  : monad6.hs:8:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#357 : int | [$k__358]}
  
  // META wf  : monad6.hs:8:21-32


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#323 : int | [$k__324]}
  
  // META wf  : monad6.hs:8:37-38


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#304 : int | [$k__305]}
  
  // META wf  : monad6.hs:7:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#294 : (m_a13F  int) | [$k__295]}
  
  // META wf  : monad6.hs:7:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#288 : m_a13F | [$k__289]}
  
  // META wf  : monad6.hs:7:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#291 : int | [$k__292]}
  
  // META wf  : monad6.hs:7:1-3







