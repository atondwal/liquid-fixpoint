qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "unusedtyvars.hs" (line 9, column 1)
qualif Auto(v : int): (v >= 0) // "unusedtyvars.hs" (line 14, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "unusedtyvars.hs" (line 9, column 1)
qualif Auto(v : int): (v >= 0) // "unusedtyvars.hs" (line 14, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Err.undefined#02v : {VV : func(1, [@(0)]) | []}
bind 1 GHC.Types.EQ#6U : {VV#90 : GHC.Types.Ordering | [(VV#90 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#91 : GHC.Types.Ordering | [(VV#91 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#92 : GHC.Types.Ordering | [(VV#92 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#115 : GHC.Types.Ordering | [(cmp([VV#115]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#116 : GHC.Types.Ordering | [(cmp([VV#116]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#117 : GHC.Types.Ordering | [(cmp([VV#117]) = GHC.Types.GT#6W)]}
bind 9 Fixme.bar#rpw : {VV : func(2, [(Fixme.F  int  @(0)  @(1))]) | []}
bind 10 lq_anf__dLK : {lq_tmp_x_159 : (Fixme.F  int  (GHC.Prim.Any  fix#GHC.Prim.#42#)  (GHC.Prim.Any  fix#GHC.Prim.#42#)) | []}
bind 11 Fixme.hoo#rpy : {VV#204 : int | []}
bind 12 VV#205 : {VV#205 : int | []}
bind 13 VV#205 : {VV#205 : int | []}
bind 14 VV#208 : {VV#208 : (Fixme.F  int  (GHC.Prim.Any  fix#GHC.Prim.#42#)  (GHC.Prim.Any  fix#GHC.Prim.#42#)) | [(VV#208 = lq_anf__dLK)]}
bind 15 VV#208 : {VV#208 : (Fixme.F  int  (GHC.Prim.Any  fix#GHC.Prim.#42#)  (GHC.Prim.Any  fix#GHC.Prim.#42#)) | [(VV#208 = lq_anf__dLK)]}
bind 16 VV#211 : {VV#211 : int | [(VV#211 >= 0)]}
bind 17 VV#211 : {VV#211 : int | [(VV#211 >= 0)]}
bind 18 VV#214 : {VV#214 : int | [(VV#214 >= 0)]}
bind 19 VV#214 : {VV#214 : int | [(VV#214 >= 0)]}
bind 20 VV#217 : {VV#217 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__186[VV#185:=VV#217][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#217]]}
bind 21 VV#217 : {VV#217 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__186[VV#185:=VV#217][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#217]]}
bind 22 VV#220 : {VV#220 : fix#GHC.Prim.#42# | [$k__183[VV#182:=VV#220][VV#185:=VV#217][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#217][lq_tmp_x_188:=VV#220]]}
bind 23 VV#220 : {VV#220 : fix#GHC.Prim.#42# | [$k__183[VV#182:=VV#220][VV#185:=VV#217][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#217][lq_tmp_x_188:=VV#220]]}
bind 24 VV#223 : {VV#223 : fix#GHC.Prim.#42# | [$k__161[VV#160:=VV#223][VV#163:=VV#217][lq_tmp_x_166:=VV#223][lq_tmp_x_167:=VV#217][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_200:=VV#217][lq_tmp_x_199:=VV#223]]}
bind 25 VV#223 : {VV#223 : fix#GHC.Prim.#42# | [$k__161[VV#160:=VV#223][VV#163:=VV#217][lq_tmp_x_166:=VV#223][lq_tmp_x_167:=VV#217][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_200:=VV#217][lq_tmp_x_199:=VV#223]]}
bind 26 VV#226 : {VV#226 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__172[VV#171:=VV#226][lq_tmp_x_175:=VV#226][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#226]]}
bind 27 VV#226 : {VV#226 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__172[VV#171:=VV#226][lq_tmp_x_175:=VV#226][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#226]]}
bind 28 VV#229 : {VV#229 : fix#GHC.Prim.#42# | [$k__169[VV#168:=VV#229][VV#171:=VV#226][lq_tmp_x_174:=VV#229][lq_tmp_x_175:=VV#226][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#226][lq_tmp_x_201:=VV#229]]}
bind 29 VV#229 : {VV#229 : fix#GHC.Prim.#42# | [$k__169[VV#168:=VV#229][VV#171:=VV#226][lq_tmp_x_174:=VV#229][lq_tmp_x_175:=VV#226][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#226][lq_tmp_x_201:=VV#229]]}
bind 30 VV#232 : {VV#232 : fix#GHC.Prim.#42# | [$k__191[VV#190:=VV#232][VV#193:=VV#226][lq_tmp_x_178:=VV#208][lq_tmp_x_197:=VV#226][lq_tmp_x_196:=VV#232]]}
bind 31 VV#232 : {VV#232 : fix#GHC.Prim.#42# | [$k__191[VV#190:=VV#232][VV#193:=VV#226][lq_tmp_x_178:=VV#208][lq_tmp_x_197:=VV#226][lq_tmp_x_196:=VV#232]]}
bind 32 VV#235 : {VV#235 : (Fixme.F  int  b_aLu  c_aLv) | [$k__153[VV#152:=VV#235][lq_tmp_x_156:=VV#235]]}
bind 33 VV#235 : {VV#235 : (Fixme.F  int  b_aLu  c_aLv) | [$k__153[VV#152:=VV#235][lq_tmp_x_156:=VV#235]]}
bind 34 VV#238 : {VV#238 : int | [$k__144[VV#143:=VV#238][VV#152:=VV#235][lq_tmp_x_156:=VV#235][lq_tmp_x_155:=VV#238]]}
bind 35 VV#238 : {VV#238 : int | [$k__144[VV#143:=VV#238][VV#152:=VV#235][lq_tmp_x_156:=VV#235][lq_tmp_x_155:=VV#238]]}
bind 36 VV#241 : {VV#241 : int | [(VV#241 >= 0)]}
bind 37 VV#241 : {VV#241 : int | [(VV#241 >= 0)]}
bind 38 VV : {VV : b_aLu | []}
bind 39 VV#149 : {VV#149 : c_aLv | [$k__150[VV#152:=VV#235][lq_tmp_x_156:=VV#235]]}
bind 40 VV#247 : {VV#247 : (Fixme.F  int  b_aLh  c_aLi) | []}
bind 41 VV#247 : {VV#247 : (Fixme.F  int  b_aLh  c_aLi) | []}
bind 42 VV#250 : {VV#250 : int | [(VV#250 >= 0)]}
bind 43 VV#250 : {VV#250 : int | [(VV#250 >= 0)]}
bind 44 VV#253 : {VV#253 : int | [$k__124[VV#123:=VV#253][VV#132:=VV#247][lq_tmp_x_139:=VV#247][lq_tmp_x_138:=VV#253]]}
bind 45 VV#253 : {VV#253 : int | [$k__124[VV#123:=VV#253][VV#132:=VV#247][lq_tmp_x_139:=VV#247][lq_tmp_x_138:=VV#253]]}
bind 46 VV#126 : {VV#126 : b_aLh | [$k__127[VV#132:=VV#247][lq_tmp_x_139:=VV#247]]}
bind 47 VV : {VV : c_aLi | []}
bind 48 lq_tmp_x_121 : {VV#258 : (Fixme.F  int  b_aLh  c_aLi) | []}
bind 49 VV#259 : {VV#259 : int | [$k__136[VV#135:=VV#259][lq_tmp_x_122:=lq_tmp_x_121][lq_tmp_x_140:=VV#259]]}
bind 50 VV#259 : {VV#259 : int | [$k__136[VV#135:=VV#259][lq_tmp_x_122:=lq_tmp_x_121][lq_tmp_x_140:=VV#259]]}
bind 51 VV#193 : {VV#193 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__194]}
bind 52 VV#190 : {VV#190 : fix#GHC.Prim.#42# | [$k__191]}
bind 53 VV#185 : {VV#185 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__186]}
bind 54 VV#182 : {VV#182 : fix#GHC.Prim.#42# | [$k__183]}
bind 55 VV#171 : {VV#171 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__172]}
bind 56 VV#168 : {VV#168 : fix#GHC.Prim.#42# | [$k__169]}
bind 57 VV#163 : {VV#163 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__164]}
bind 58 VV#160 : {VV#160 : fix#GHC.Prim.#42# | [$k__161]}
bind 59 VV#152 : {VV#152 : (Fixme.F  int  b_aLu  c_aLv) | [$k__153]}
bind 60 VV#143 : {VV#143 : int | [$k__144]}
bind 61 VV#132 : {VV#132 : (Fixme.F  int  b_aLh  c_aLi) | [$k__133]}
bind 62 VV#123 : {VV#123 : int | [$k__124]}
bind 63 lq_tmp_x_122 : {VV#132 : (Fixme.F  int  b_aLh  c_aLi) | [$k__133]}
bind 64 VV#135 : {VV#135 : int | [$k__136]}




constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 15]
  grd true
  lhs {VV#F1 : int | [(VV#F1 >= 0)]}
  rhs {VV#F1 : int | [(VV#F1 >= 0)]}
  id 1 tag [3]
  // META constraint id 1 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 10; 15]
  grd true
  lhs {VV#F2 : int | [(VV#F2 >= 0)]}
  rhs {VV#F2 : int | [(VV#F2 >= 0)]}
  id 2 tag [3]
  // META constraint id 2 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 8; 9; 10; 15]
  grd true
  lhs {VV#F3 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__186[VV#185:=VV#F3][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#F3][VV#217:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__164[VV#163:=VV#F3][lq_tmp_x_167:=VV#F3][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_200:=VV#F3][VV#217:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 10; 15]
  grd true
  lhs {VV#F4 : fix#GHC.Prim.#42# | [$k__183[VV#182:=VV#F4][VV#185:=VV#217][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#217][lq_tmp_x_188:=VV#F4][VV#220:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : fix#GHC.Prim.#42# | [$k__161[VV#160:=VV#F4][VV#163:=VV#217][lq_tmp_x_166:=VV#F4][lq_tmp_x_167:=VV#217][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_200:=VV#217][lq_tmp_x_199:=VV#F4][VV#220:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 24; 9; 10; 15]
  grd true
  lhs {VV#F5 : fix#GHC.Prim.#42# | [$k__161[VV#160:=VV#F5][VV#163:=VV#217][lq_tmp_x_166:=VV#F5][lq_tmp_x_167:=VV#217][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_200:=VV#217][lq_tmp_x_199:=VV#F5][VV#223:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : fix#GHC.Prim.#42# | [$k__183[VV#182:=VV#F5][VV#185:=VV#217][lq_tmp_x_178:=VV#208][lq_tmp_x_189:=VV#217][lq_tmp_x_188:=VV#F5][VV#223:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 15]
  grd true
  lhs {VV#F6 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__172[VV#171:=VV#F6][lq_tmp_x_175:=VV#F6][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#F6][VV#226:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__194[VV#193:=VV#F6][lq_tmp_x_178:=VV#208][lq_tmp_x_197:=VV#F6][VV#226:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 27; 28; 15]
  grd true
  lhs {VV#F7 : fix#GHC.Prim.#42# | [$k__169[VV#168:=VV#F7][VV#171:=VV#226][lq_tmp_x_174:=VV#F7][lq_tmp_x_175:=VV#226][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#226][lq_tmp_x_201:=VV#F7][VV#229:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : fix#GHC.Prim.#42# | [$k__191[VV#190:=VV#F7][VV#193:=VV#226][lq_tmp_x_178:=VV#208][lq_tmp_x_197:=VV#226][lq_tmp_x_196:=VV#F7][VV#229:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 27; 30; 15]
  grd true
  lhs {VV#F8 : fix#GHC.Prim.#42# | [$k__191[VV#190:=VV#F8][VV#193:=VV#226][lq_tmp_x_178:=VV#208][lq_tmp_x_197:=VV#226][lq_tmp_x_196:=VV#F8][VV#232:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : fix#GHC.Prim.#42# | [$k__169[VV#168:=VV#F8][VV#171:=VV#226][lq_tmp_x_174:=VV#F8][lq_tmp_x_175:=VV#226][lq_tmp_x_159:=VV#208][lq_tmp_x_203:=VV#208][lq_tmp_x_202:=VV#226][lq_tmp_x_201:=VV#F8][VV#232:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : unusedtyvars.hs:17:11-13


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F9 : int | [$k__144[VV#143:=VV#F9][VV#152:=VV#235][lq_tmp_x_156:=VV#235][lq_tmp_x_155:=VV#F9][VV#238:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [(VV#F9 >= 0)]}
  id 9 tag [2]
  // META constraint id 9 : unusedtyvars.hs:9:7-15


constraint:
  env [0; 1; 33; 2; 3; 4; 36; 5; 6; 7; 8]
  grd true
  lhs {VV#F10 : int | [(VV#F10 >= 0)]}
  rhs {VV#F10 : int | [$k__144[VV#143:=VV#F10][VV#152:=VV#235][lq_tmp_x_156:=VV#235][lq_tmp_x_155:=VV#F10][VV#241:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : unusedtyvars.hs:9:7-15


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 38; 7; 8]
  grd true
  lhs {VV#F11 : b_aLu | []}
  rhs {VV#F11 : b_aLu | [$k__147[VV#152:=VV#235][lq_tmp_x_156:=VV#235][VV#146:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : unusedtyvars.hs:9:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 40]
  grd true
  lhs {VV#F12 : (Fixme.F  int  b_aLh  c_aLi) | []}
  rhs {VV#F12 : (Fixme.F  int  b_aLh  c_aLi) | [$k__133[VV#132:=VV#F12][lq_tmp_x_139:=VV#F12][VV#247:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : unusedtyvars.hs:14:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 41; 42]
  grd true
  lhs {VV#F13 : int | [(VV#F13 >= 0)]}
  rhs {VV#F13 : int | [$k__124[VV#123:=VV#F13][VV#132:=VV#247][lq_tmp_x_139:=VV#247][lq_tmp_x_138:=VV#F13][VV#250:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : unusedtyvars.hs:14:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 41; 44]
  grd true
  lhs {VV#F14 : int | [$k__124[VV#123:=VV#F14][VV#132:=VV#247][lq_tmp_x_139:=VV#247][lq_tmp_x_138:=VV#F14][VV#253:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : int | [(VV#F14 >= 0)]}
  id 14 tag [1]
  // META constraint id 14 : unusedtyvars.hs:14:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 41; 47]
  grd true
  lhs {VV#F15 : c_aLi | []}
  rhs {VV#F15 : c_aLi | [$k__130[VV#132:=VV#247][lq_tmp_x_139:=VV#247][VV#129:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : unusedtyvars.hs:14:7-15




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#193 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__194]}
  
  // META wf  : unusedtyvars.hs:17:7-9


wf:
  env [0; 1; 2; 3; 51; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#190 : fix#GHC.Prim.#42# | [$k__191]}
  
  // META wf  : unusedtyvars.hs:17:7-9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#185 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__186]}
  
  // META wf  : unusedtyvars.hs:17:7-9


wf:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 8; 9; 10]
  reft {VV#182 : fix#GHC.Prim.#42# | [$k__183]}
  
  // META wf  : unusedtyvars.hs:17:7-9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#171 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__172]}
  
  // META wf  : unusedtyvars.hs:17:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 55; 8; 9]
  reft {VV#168 : fix#GHC.Prim.#42# | [$k__169]}
  
  // META wf  : unusedtyvars.hs:17:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#163 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__164]}
  
  // META wf  : unusedtyvars.hs:17:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57]
  reft {VV#160 : fix#GHC.Prim.#42# | [$k__161]}
  
  // META wf  : unusedtyvars.hs:17:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#152 : (Fixme.F  int  b_aLu  c_aLv) | [$k__153]}
  
  // META wf  : unusedtyvars.hs:9:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 59]
  reft {VV#143 : int | [$k__144]}
  
  // META wf  : unusedtyvars.hs:9:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 59]
  reft {VV#146 : b_aLu | [$k__147]}
  
  // META wf  : unusedtyvars.hs:9:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 59]
  reft {VV#149 : c_aLv | [$k__150]}
  
  // META wf  : unusedtyvars.hs:9:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#132 : (Fixme.F  int  b_aLh  c_aLi) | [$k__133]}
  
  // META wf  : unusedtyvars.hs:14:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 61]
  reft {VV#123 : int | [$k__124]}
  
  // META wf  : unusedtyvars.hs:14:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 61]
  reft {VV#126 : b_aLh | [$k__127]}
  
  // META wf  : unusedtyvars.hs:14:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 61]
  reft {VV#129 : c_aLi | [$k__130]}
  
  // META wf  : unusedtyvars.hs:14:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 63]
  reft {VV#135 : int | [$k__136]}
  
  // META wf  : unusedtyvars.hs:14:7-15







