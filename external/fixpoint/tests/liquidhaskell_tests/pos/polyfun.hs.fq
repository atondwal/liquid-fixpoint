qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#192 : (GHC.Classes.Ord  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#194 : GHC.Types.Ordering | [(VV#194 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#195 : GHC.Types.Ordering | [(VV#195 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#196 : GHC.Types.Ordering | [(VV#196 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#238 : GHC.Types.Ordering | [(cmp([VV#238]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#239 : GHC.Types.Ordering | [(cmp([VV#239]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#240 : GHC.Types.Ordering | [(cmp([VV#240]) = GHC.Types.GT#6W)]}
bind 10 f#a154 : {VV#244 : a_a15e | [$k__245]}
bind 11 lq_anf__d15z : {lq_tmp_x_259 : int | [(lq_tmp_x_259 = (0  :  int))]}
bind 12 lq_tmp_x_273 : {VV#274 : int | []}
bind 13 lq_anf__d15A : {lq_tmp_x_265 : [int] | [(len([lq_tmp_x_265]) = 0);
                                                ((? null([lq_tmp_x_265])) <=> true);
                                                (len([lq_tmp_x_265]) >= 0)]}
bind 14 lq_tmp_x_291 : {VV#292 : int | []}
bind 15 zs#a155 : {lq_tmp_x_312 : [int] | [$k__256[VV#255:=lq_tmp_x_312][f#a154:=lq_anf__d15B][lq_tmp_x_314:=lq_anf__d15B];
                                           (len([lq_tmp_x_312]) >= 0)]}
bind 16 z#a156 : {VV#330 : int | [$k__331]}
bind 17 lq_anf__d15C : {lq_tmp_x_338 : int | [(lq_tmp_x_338 = (0  :  int))]}
bind 18 lq_anf__d15D : {lq_tmp_x_344 : GHC.Types.Bool | [((? Prop([lq_tmp_x_344])) <=> (z#a156 >= lq_anf__d15C))]}
bind 19 Poly4.prop#r12h : {VV#299 : GHC.Types.Bool | [$k__300]}
bind 20 VV#389 : {VV#389 : GHC.Types.Bool | []}
bind 21 VV#389 : {VV#389 : GHC.Types.Bool | []}
bind 22 VV#392 : {VV#392 : [int] | [(VV#392 = zs#a155);
                                    (len([VV#392]) >= 0)]}
bind 23 VV#392 : {VV#392 : [int] | [(VV#392 = zs#a155);
                                    (len([VV#392]) >= 0)]}
bind 24 VV#395 : {VV#395 : int | [$k__249[VV#248:=VV#395][VV#255:=VV#392][f#a154:=lq_anf__d15B][lq_tmp_x_314:=lq_anf__d15B][lq_tmp_x_309:=VV#395][lq_tmp_x_312:=VV#392][lq_tmp_x_387:=VV#392][lq_tmp_x_384:=VV#395]]}
bind 25 VV#395 : {VV#395 : int | [$k__249[VV#248:=VV#395][VV#255:=VV#392][f#a154:=lq_anf__d15B][lq_tmp_x_314:=lq_anf__d15B][lq_tmp_x_309:=VV#395][lq_tmp_x_312:=VV#392][lq_tmp_x_387:=VV#392][lq_tmp_x_384:=VV#395]]}
bind 26 lq_tmp_x_368 : {VV#398 : int | []}
bind 27 VV#399 : {VV#399 : int | [$k__253[VV#252:=VV#399][lq_tmp_x_251:=lq_tmp_x_368][f#a154:=lq_anf__d15B][lq_tmp_x_314:=lq_anf__d15B][lq_tmp_x_311:=VV#399][lq_tmp_x_310:=lq_tmp_x_368][lq_tmp_x_385:=lq_tmp_x_368][lq_tmp_x_386:=VV#399]]}
bind 28 VV#399 : {VV#399 : int | [$k__253[VV#252:=VV#399][lq_tmp_x_251:=lq_tmp_x_368][f#a154:=lq_anf__d15B][lq_tmp_x_314:=lq_anf__d15B][lq_tmp_x_311:=VV#399][lq_tmp_x_310:=lq_tmp_x_368][lq_tmp_x_385:=lq_tmp_x_368][lq_tmp_x_386:=VV#399]]}
bind 29 VV#403 : {VV#403 : int | [$k__377[VV#376:=VV#403][lq_tmp_x_379:=VV#403]]}
bind 30 VV#403 : {VV#403 : int | [$k__377[VV#376:=VV#403][lq_tmp_x_379:=VV#403]]}
bind 31 lq_tmp_x_373 : {lq_tmp_x_379 : int | [$k__377[VV#376:=lq_tmp_x_379]]}
bind 32 VV#407 : {VV#407 : GHC.Types.Bool | [$k__335[VV#334:=VV#407][z#a156:=lq_tmp_x_373][lq_tmp_x_383:=lq_tmp_x_373][lq_tmp_x_381:=VV#407]]}
bind 33 VV#407 : {VV#407 : GHC.Types.Bool | [$k__335[VV#334:=VV#407][z#a156:=lq_tmp_x_373][lq_tmp_x_383:=lq_tmp_x_373][lq_tmp_x_381:=VV#407]]}
bind 34 VV#410 : {VV#410 : GHC.Types.Bool | [(? Prop([VV#410]))]}
bind 35 VV#410 : {VV#410 : GHC.Types.Bool | [(? Prop([VV#410]))]}
bind 36 VV#413 : {VV#413 : GHC.Types.Bool | [(VV#413 = lq_anf__d15D)]}
bind 37 VV#413 : {VV#413 : GHC.Types.Bool | [(VV#413 = lq_anf__d15D)]}
bind 38 VV#416 : {VV#416 : int | [(VV#416 = lq_anf__d15C)]}
bind 39 VV#416 : {VV#416 : int | [(VV#416 = lq_anf__d15C)]}
bind 40 VV#419 : {VV#419 : int | [(VV#419 = z#a156)]}
bind 41 VV#419 : {VV#419 : int | [(VV#419 = z#a156)]}
bind 42 VV#422 : {VV#422 : int | [(VV#422 = 0)]}
bind 43 VV#422 : {VV#422 : int | [(VV#422 = 0)]}
bind 44 VV#426 : {VV#426 : GHC.Prim.Any | [$k__317[VV#316:=VV#426][lq_tmp_x_322:=VV#426]]}
bind 45 VV#426 : {VV#426 : GHC.Prim.Any | [$k__317[VV#316:=VV#426][lq_tmp_x_322:=VV#426]]}
bind 46 lq_tmp_x_315 : {lq_tmp_x_322 : GHC.Prim.Any | [$k__317[VV#316:=lq_tmp_x_322]]}
bind 47 VV#430 : {VV#430 : GHC.Prim.Any | [$k__305[VV#304:=VV#430][lq_tmp_x_307:=VV#430][lq_tmp_x_303:=lq_tmp_x_315][lq_tmp_x_328:=lq_tmp_x_315][lq_tmp_x_326:=VV#430];
                                           (VV#430 = lq_tmp_x_315)]}
bind 48 VV#430 : {VV#430 : GHC.Prim.Any | [$k__305[VV#304:=VV#430][lq_tmp_x_307:=VV#430][lq_tmp_x_303:=lq_tmp_x_315][lq_tmp_x_328:=lq_tmp_x_315][lq_tmp_x_326:=VV#430];
                                           (VV#430 = lq_tmp_x_315)]}
bind 49 VV#433 : {VV#433 : [int] | [(len([VV#433]) = (1 + len([lq_anf__d15A])));
                                    ((? null([VV#433])) <=> false);
                                    (xsListSelector([VV#433]) = lq_anf__d15A);
                                    (xListSelector([VV#433]) = lq_anf__d15z);
                                    (len([VV#433]) >= 0)]}
bind 50 VV#433 : {VV#433 : [int] | [(len([VV#433]) = (1 + len([lq_anf__d15A])));
                                    ((? null([VV#433])) <=> false);
                                    (xsListSelector([VV#433]) = lq_anf__d15A);
                                    (xListSelector([VV#433]) = lq_anf__d15z);
                                    (len([VV#433]) >= 0)]}
bind 51 VV#436 : {VV#436 : int | [$k__285[VV#284:=VV#436][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_283:=lq_anf__d15A][lq_tmp_x_279:=VV#433][lq_tmp_x_287:=VV#436]]}
bind 52 VV#436 : {VV#436 : int | [$k__285[VV#284:=VV#436][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_283:=lq_anf__d15A][lq_tmp_x_279:=VV#433][lq_tmp_x_287:=VV#436]]}
bind 53 lq_tmp_x_251 : {VV#439 : int | []}
bind 54 VV#440 : {VV#440 : int | [$k__289[lq_tmp_x_291:=lq_tmp_x_251][VV#288:=VV#440][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_283:=lq_anf__d15A][lq_tmp_x_278:=lq_tmp_x_251][lq_tmp_x_287:=VV#440]]}
bind 55 VV#440 : {VV#440 : int | [$k__289[lq_tmp_x_291:=lq_tmp_x_251][VV#288:=VV#440][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_283:=lq_anf__d15A][lq_tmp_x_278:=lq_tmp_x_251][lq_tmp_x_287:=VV#440]]}
bind 56 VV#443 : {VV#443 : [int] | [(VV#443 = lq_anf__d15A);
                                    (len([VV#443]) >= 0)]}
bind 57 VV#443 : {VV#443 : [int] | [(VV#443 = lq_anf__d15A);
                                    (len([VV#443]) >= 0)]}
bind 58 VV#446 : {VV#446 : int | [$k__267[VV#266:=VV#446][lq_tmp_x_269:=VV#446][lq_tmp_x_265:=VV#443][lq_tmp_x_297:=VV#443][lq_tmp_x_294:=VV#446]]}
bind 59 VV#446 : {VV#446 : int | [$k__267[VV#266:=VV#446][lq_tmp_x_269:=VV#446][lq_tmp_x_265:=VV#443][lq_tmp_x_297:=VV#443][lq_tmp_x_294:=VV#446]]}
bind 60 lq_tmp_x_276 : {VV#449 : int | []}
bind 61 VV#450 : {VV#450 : int | [$k__271[lq_tmp_x_273:=lq_tmp_x_276][VV#270:=VV#450][lq_tmp_x_269:=VV#450][lq_tmp_x_264:=lq_tmp_x_276][lq_tmp_x_295:=lq_tmp_x_276][lq_tmp_x_296:=VV#450]]}
bind 62 VV#450 : {VV#450 : int | [$k__271[lq_tmp_x_273:=lq_tmp_x_276][VV#270:=VV#450][lq_tmp_x_269:=VV#450][lq_tmp_x_264:=lq_tmp_x_276][lq_tmp_x_295:=lq_tmp_x_276][lq_tmp_x_296:=VV#450]]}
bind 63 VV#453 : {VV#453 : int | [(VV#453 = lq_anf__d15z)]}
bind 64 VV#453 : {VV#453 : int | [(VV#453 = lq_anf__d15z)]}
bind 65 VV#456 : {VV#456 : int | [(VV#456 = 0)]}
bind 66 VV#456 : {VV#456 : int | [(VV#456 = 0)]}
bind 67 VV#376 : {VV#376 : int | [$k__377]}
bind 68 VV#330 : {VV#330 : int | [$k__331]}
bind 69 VV#351 : {VV#351 : int | [$k__352]}
bind 70 VV#334 : {VV#334 : GHC.Types.Bool | [$k__335]}
bind 71 VV#316 : {VV#316 : GHC.Prim.Any | [$k__317]}
bind 72 lq_tmp_x_315 : {VV#316 : GHC.Prim.Any | [$k__317]}
bind 73 VV#319 : {VV#319 : GHC.Prim.Any | [$k__320]}
bind 74 VV#304 : {VV#304 : GHC.Prim.Any | [$k__305]}
bind 75 VV#299 : {VV#299 : GHC.Types.Bool | [$k__300]}
bind 76 VV#288 : {VV#288 : int | [$k__289]}
bind 77 VV#284 : {VV#284 : int | [$k__285]}
bind 78 VV#270 : {VV#270 : int | [$k__271]}
bind 79 VV#266 : {VV#266 : int | [$k__267]}
bind 80 VV#255 : {VV#255 : [int] | [$k__256; (len([VV#255]) >= 0)]}
bind 81 VV#248 : {VV#248 : int | [$k__249]}
bind 82 lq_tmp_x_251 : {VV#474 : int | []}
bind 83 VV#252 : {VV#252 : int | [$k__253]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 10; 11; 60; 13; 61]
  grd true
  lhs {VV#F16 : int | [$k__271[lq_tmp_x_273:=lq_tmp_x_276][VV#270:=VV#F16][lq_tmp_x_269:=VV#F16][lq_tmp_x_264:=lq_tmp_x_276][lq_tmp_x_295:=lq_tmp_x_276][lq_tmp_x_296:=VV#F16][VV#450:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : int | [$k__289[lq_tmp_x_291:=lq_tmp_x_276][VV#288:=VV#F16][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_287:=VV#F16][VV#450:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]
  // META constraint id 16 : polyfun.hs:6:9-11


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | []}
  rhs {VV#F1 : GHC.Types.Bool | [$k__300[VV#299:=VV#F1][VV#389:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : polyfun.hs:8:9-45


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13; 63]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = lq_anf__d15z)]}
  rhs {VV#F17 : int | [$k__285[VV#284:=VV#F17][lq_tmp_x_287:=VV#F17][VV#453:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [1]
  // META constraint id 17 : polyfun.hs:6:10


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 15]
  grd true
  lhs {VV#F2 : int | [$k__249[VV#248:=VV#F2][VV#255:=VV#392][f#a154:=lq_anf__d15B][lq_tmp_x_314:=lq_anf__d15B][lq_tmp_x_309:=VV#F2][lq_tmp_x_312:=VV#392][lq_tmp_x_387:=VV#392][lq_tmp_x_384:=VV#F2][VV#395:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [$k__377[VV#376:=VV#F2][lq_tmp_x_374:=lq_anf__d15E][lq_tmp_x_369:=VV#392][lq_tmp_x_379:=VV#F2][VV#395:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : polyfun.hs:8:44-45


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 29; 15]
  grd true
  lhs {VV#F3 : int | [$k__377[VV#376:=VV#F3][lq_tmp_x_379:=VV#F3][VV#403:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__331[VV#330:=VV#F3][lq_tmp_x_380:=VV#F3][VV#403:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : polyfun.hs:8:14-41


constraint:
  env [0; 16; 1; 17; 2; 18; 34; 3; 4; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F4 : GHC.Types.Bool | [(? Prop([VV#F4]))]}
  rhs {VV#F4 : GHC.Types.Bool | [$k__335[VV#334:=VV#F4][VV#410:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : polyfun.hs:8:20-41


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 36; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F5 : GHC.Types.Bool | [(VV#F5 = lq_anf__d15D)]}
  rhs {VV#F5 : GHC.Types.Bool | [(? Prop([VV#F5]))]}
  id 5 tag [2]
  // META constraint id 5 : polyfun.hs:8:35-40


constraint:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 38; 7; 8; 9; 15]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = lq_anf__d15C)]}
  rhs {VV#F6 : int | [$k__352[VV#351:=VV#F6][lq_tmp_x_348:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_349:=z#a156][lq_tmp_x_354:=VV#F6][VV#416:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : polyfun.hs:8:40


constraint:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 40; 9; 15]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = z#a156)]}
  rhs {VV#F7 : int | [$k__352[VV#351:=VV#F7][lq_tmp_x_348:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_354:=VV#F7][VV#419:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : polyfun.hs:8:35


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F8 : func(0, [GHC.Prim.Any; GHC.Prim.Any]) | []}
  rhs {VV#F8 : func(0, [GHC.Prim.Any;
                        GHC.Prim.Any]) | [$k__245[VV#244:=VV#F8][lq_tmp_x_324:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : polyfun.hs:9:26-27


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 44]
  grd true
  lhs {VV#F9 : GHC.Prim.Any | [$k__317[VV#316:=VV#F9][lq_tmp_x_322:=VV#F9][VV#426:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : GHC.Prim.Any | [$k__305[VV#304:=VV#F9][lq_tmp_x_307:=VV#F9][lq_tmp_x_325:=VV#F9][VV#426:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]
  // META constraint id 9 : polyfun.hs:9:26-27


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 46; 47]
  grd true
  lhs {VV#F10 : GHC.Prim.Any | [$k__305[VV#304:=VV#F10][lq_tmp_x_307:=VV#F10][lq_tmp_x_303:=lq_tmp_x_315][lq_tmp_x_328:=lq_tmp_x_315][lq_tmp_x_326:=VV#F10][VV#430:=VV#F10][VV#F:=VV#F10];
                                (VV#F10 = lq_tmp_x_315)]}
  rhs {VV#F10 : GHC.Prim.Any | [$k__320[VV#319:=VV#F10][lq_tmp_x_323:=VV#F10][VV#430:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : polyfun.hs:9:26-27


constraint:
  env [0; 1; 49; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13]
  grd true
  lhs {VV#F11 : [int] | [(len([VV#F11]) = (1 + len([lq_anf__d15A])));
                         ((? null([VV#F11])) <=> false);
                         (xsListSelector([VV#F11]) = lq_anf__d15A);
                         (xListSelector([VV#F11]) = lq_anf__d15z);
                         (len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [int] | [$k__256[VV#255:=VV#F11][VV#433:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : polyfun.hs:6:9-11


constraint:
  env [0; 1; 2; 50; 3; 51; 4; 5; 6; 7; 8; 9; 10; 11; 13]
  grd true
  lhs {VV#F12 : int | [$k__285[VV#284:=VV#F12][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_283:=lq_anf__d15A][lq_tmp_x_279:=VV#433][lq_tmp_x_287:=VV#F12][VV#436:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__249[VV#255:=VV#433][VV#248:=VV#F12][VV#436:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : polyfun.hs:6:9-11


constraint:
  env [0; 1; 2; 50; 3; 4; 5; 53; 6; 54; 7; 8; 9; 10; 11; 13]
  grd true
  lhs {VV#F13 : int | [$k__289[lq_tmp_x_291:=lq_tmp_x_251][VV#288:=VV#F13][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_283:=lq_anf__d15A][lq_tmp_x_278:=lq_tmp_x_251][lq_tmp_x_287:=VV#F13][VV#440:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : int | [$k__253[VV#252:=VV#F13][VV#440:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : polyfun.hs:6:9-11


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 10; 58; 11; 13]
  grd true
  lhs {VV#F14 : int | [$k__267[VV#266:=VV#F14][lq_tmp_x_269:=VV#F14][lq_tmp_x_265:=VV#443][lq_tmp_x_297:=VV#443][lq_tmp_x_294:=VV#F14][VV#446:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : int | [$k__285[VV#284:=VV#F14][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_277:=VV#443][lq_tmp_x_287:=VV#F14][VV#446:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : polyfun.hs:6:9-11


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 10; 58; 11; 13]
  grd true
  lhs {VV#F15 : int | [$k__267[VV#266:=VV#F15][lq_tmp_x_269:=VV#F15][lq_tmp_x_265:=VV#443][lq_tmp_x_297:=VV#443][lq_tmp_x_294:=VV#F15][VV#446:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : int | [$k__289[lq_tmp_x_291:=lq_anf__d15z][VV#288:=VV#F15][lq_tmp_x_282:=lq_anf__d15z][lq_tmp_x_277:=VV#443][lq_tmp_x_287:=VV#F15][VV#446:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : polyfun.hs:6:9-11




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#376 : int | [$k__377]}
  
  // META wf  : polyfun.hs:8:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#330 : int | [$k__331]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#351 : int | [$k__352]}
  
  // META wf  : polyfun.hs:8:37-38


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#334 : GHC.Types.Bool | [$k__335]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#316 : GHC.Prim.Any | [$k__317]}
  
  // META wf  : polyfun.hs:9:22-24


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9]
  reft {VV#319 : GHC.Prim.Any | [$k__320]}
  
  // META wf  : polyfun.hs:9:22-24


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#304 : GHC.Prim.Any | [$k__305]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#299 : GHC.Types.Bool | [$k__300]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#244 : a_a15e | [$k__245]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13; 14]
  reft {VV#288 : int | [$k__289]}
  
  // META wf  : polyfun.hs:6:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13]
  reft {VV#284 : int | [$k__285]}
  
  // META wf  : polyfun.hs:6:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#270 : int | [$k__271]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#266 : int | [$k__267]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#255 : [int] | [$k__256]}
  
  // META wf  : <no location info>


wf:
  env [0; 80; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#248 : int | [$k__249]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 82; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#252 : int | [$k__253]}
  
  // META wf  : <no location info>







