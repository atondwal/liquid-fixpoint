qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Types.False#68 : {VV#169 : GHC.Types.Bool | []}
bind 1 GHC.Types.True#6u : {VV#171 : GHC.Types.Bool | []}
bind 2 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#174 : (GHC.Classes.Ord  int) | []}
bind 3 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#175 : (GHC.Num.Num  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#179 : GHC.Types.Ordering | [(VV#179 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#180 : GHC.Types.Ordering | [(VV#180 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#181 : GHC.Types.Ordering | [(VV#181 = GHC.Types.GT#6W)]}
bind 7 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 8 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 9 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 10 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 11 GHC.Types.EQ#6U : {VV#224 : GHC.Types.Ordering | [(cmp([VV#224]) = GHC.Types.EQ#6U)]}
bind 12 GHC.Types.LT#6S : {VV#225 : GHC.Types.Ordering | [(cmp([VV#225]) = GHC.Types.LT#6S)]}
bind 13 GHC.Types.GT#6W : {VV#226 : GHC.Types.Ordering | [(cmp([VV#226]) = GHC.Types.GT#6W)]}
bind 14 lq_anf__d13Q : {lq_tmp_x_234 : int | [(lq_tmp_x_234 = (0  :  int))]}
bind 15 lq_anf__d13R : {lq_tmp_x_240 : int | []}
bind 16 lq_anf__d13S : {lq_tmp_x_246 : int | [(lq_tmp_x_246 = (10  :  int))]}
bind 17 Test0.toss#rZN : {VV#230 : GHC.Types.Bool | [$k__231]}
bind 18 lq_anf__d13T : {lq_tmp_x_271 : GHC.Types.Bool | [(lq_tmp_x_271 = Test0.toss#rZN)]}
bind 19 lq_anf__d13T : {lq_tmp_x_273 : GHC.Types.Bool | [(lq_tmp_x_273 = Test0.toss#rZN)]}
bind 20 lq_anf__d13T : {lq_tmp_x_273 : GHC.Types.Bool | [(lq_tmp_x_273 = Test0.toss#rZN);
                                                         (~ ((? Prop([lq_tmp_x_273]))));
                                                         (~ ((? Prop([lq_tmp_x_273]))));
                                                         (~ ((? Prop([lq_tmp_x_273]))))]}
bind 21 lq_anf__d13T : {lq_tmp_x_279 : GHC.Types.Bool | [(lq_tmp_x_279 = Test0.toss#rZN)]}
bind 22 lq_anf__d13T : {lq_tmp_x_279 : GHC.Types.Bool | [(lq_tmp_x_279 = Test0.toss#rZN);
                                                         (? Prop([lq_tmp_x_279]));
                                                         (? Prop([lq_tmp_x_279]));
                                                         (? Prop([lq_tmp_x_279]))]}
bind 23 lq_anf__d13U : {lq_tmp_x_284 : GHC.Types.Bool | [(lq_tmp_x_284 = Test0.toss#rZN)]}
bind 24 lq_anf__d13U : {lq_tmp_x_286 : GHC.Types.Bool | [(lq_tmp_x_286 = Test0.toss#rZN)]}
bind 25 lq_anf__d13U : {lq_tmp_x_286 : GHC.Types.Bool | [(lq_tmp_x_286 = Test0.toss#rZN);
                                                         (~ ((? Prop([lq_tmp_x_286]))));
                                                         (~ ((? Prop([lq_tmp_x_286]))));
                                                         (~ ((? Prop([lq_tmp_x_286]))))]}
bind 26 lq_anf__d13U : {lq_tmp_x_292 : GHC.Types.Bool | [(lq_tmp_x_292 = Test0.toss#rZN)]}
bind 27 lq_anf__d13U : {lq_tmp_x_292 : GHC.Types.Bool | [(lq_tmp_x_292 = Test0.toss#rZN);
                                                         (? Prop([lq_tmp_x_292]));
                                                         (? Prop([lq_tmp_x_292]));
                                                         (? Prop([lq_tmp_x_292]))]}
bind 28 Test0.prop_abs#r12h : {VV#268 : GHC.Types.Bool | [$k__269]}
bind 29 x#a13j : {VV#303 : int | [$k__304]}
bind 30 lq_anf__d13V : {lq_tmp_x_311 : int | [(lq_tmp_x_311 = (0  :  int))]}
bind 31 lq_anf__d13W : {lq_tmp_x_317 : GHC.Types.Bool | [((? Prop([lq_tmp_x_317])) <=> (x#a13j > lq_anf__d13V))]}
bind 32 lq_anf__d13X : {lq_tmp_x_341 : int | [$k__339[VV#338:=lq_tmp_x_341][lq_tmp_x_336:=lq_anf__d13W][lq_tmp_x_337:=x#a13j]]}
bind 33 lq_anf__d13Y : {lq_tmp_x_346 : int | [(lq_tmp_x_346 = (1  :  int))]}
bind 34 lq_anf__d13Z : {lq_tmp_x_369 : int | [(lq_tmp_x_369 = (12  :  int))]}
bind 35 Test0.goo#r12j : {VV#365 : int | [$k__366]}
bind 36 zzz#a13k : {VV#380 : int | [$k__381]}
bind 37 lq_anf__d140 : {lq_tmp_x_388 : int | [(lq_tmp_x_388 = (1  :  int))]}
bind 38 lq_anf__d141 : {lq_tmp_x_411 : int | [(lq_tmp_x_411 = (29  :  int))]}
bind 39 Test0.zoo#r12l : {VV#407 : int | [$k__408]}
bind 40 VV#422 : {VV#422 : int | [$k__385[VV#384:=VV#422][zzz#a13k:=lq_anf__d141][lq_tmp_x_419:=lq_anf__d141][lq_tmp_x_417:=VV#422]]}
bind 41 VV#422 : {VV#422 : int | [$k__385[VV#384:=VV#422][zzz#a13k:=lq_anf__d141][lq_tmp_x_419:=lq_anf__d141][lq_tmp_x_417:=VV#422]]}
bind 42 VV#425 : {VV#425 : int | [(VV#425 = lq_anf__d141)]}
bind 43 VV#425 : {VV#425 : int | [(VV#425 = lq_anf__d141)]}
bind 44 VV#428 : {VV#428 : int | [(VV#428 = 29)]}
bind 45 VV#428 : {VV#428 : int | [(VV#428 = 29)]}
bind 46 VV#431 : {VV#431 : int | [(VV#431 = (zzz#a13k + lq_anf__d140))]}
bind 47 VV#431 : {VV#431 : int | [(VV#431 = (zzz#a13k + lq_anf__d140))]}
bind 48 VV#434 : {VV#434 : int | [(VV#434 = lq_anf__d140)]}
bind 49 VV#434 : {VV#434 : int | [(VV#434 = lq_anf__d140)]}
bind 50 VV#437 : {VV#437 : int | [(VV#437 = zzz#a13k)]}
bind 51 VV#437 : {VV#437 : int | [(VV#437 = zzz#a13k)]}
bind 52 VV#440 : {VV#440 : int | [(VV#440 = 1)]}
bind 53 VV#440 : {VV#440 : int | [(VV#440 = 1)]}
bind 54 VV#443 : {VV#443 : int | [$k__308[VV#307:=VV#443][x#a13j:=lq_anf__d13Z][lq_tmp_x_377:=lq_anf__d13Z][lq_tmp_x_375:=VV#443]]}
bind 55 VV#443 : {VV#443 : int | [$k__308[VV#307:=VV#443][x#a13j:=lq_anf__d13Z][lq_tmp_x_377:=lq_anf__d13Z][lq_tmp_x_375:=VV#443]]}
bind 56 VV#446 : {VV#446 : int | [(VV#446 = lq_anf__d13Z)]}
bind 57 VV#446 : {VV#446 : int | [(VV#446 = lq_anf__d13Z)]}
bind 58 VV#449 : {VV#449 : int | [(VV#449 = 12)]}
bind 59 VV#449 : {VV#449 : int | [(VV#449 = 12)]}
bind 60 VV#452 : {VV#452 : int | [(VV#452 = (lq_anf__d13X + lq_anf__d13Y))]}
bind 61 VV#452 : {VV#452 : int | [(VV#452 = (lq_anf__d13X + lq_anf__d13Y))]}
bind 62 VV#455 : {VV#455 : int | [(VV#455 = lq_anf__d13Y)]}
bind 63 VV#455 : {VV#455 : int | [(VV#455 = lq_anf__d13Y)]}
bind 64 VV#458 : {VV#458 : int | [(VV#458 = lq_anf__d13X)]}
bind 65 VV#458 : {VV#458 : int | [(VV#458 = lq_anf__d13X)]}
bind 66 VV#461 : {VV#461 : int | [(VV#461 = 1)]}
bind 67 VV#461 : {VV#461 : int | [(VV#461 = 1)]}
bind 68 VV#464 : {VV#464 : int | [(VV#464 = x#a13j)]}
bind 69 VV#464 : {VV#464 : int | [(VV#464 = x#a13j)]}
bind 70 VV#467 : {VV#467 : GHC.Types.Bool | [(VV#467 = lq_anf__d13W)]}
bind 71 VV#467 : {VV#467 : GHC.Types.Bool | [(VV#467 = lq_anf__d13W)]}
bind 72 VV#470 : {VV#470 : int | [(VV#470 = lq_anf__d13V)]}
bind 73 VV#470 : {VV#470 : int | [(VV#470 = lq_anf__d13V)]}
bind 74 VV#473 : {VV#473 : int | [(VV#473 = x#a13j)]}
bind 75 VV#473 : {VV#473 : int | [(VV#473 = x#a13j)]}
bind 76 VV#476 : {VV#476 : int | [(VV#476 = 0)]}
bind 77 VV#476 : {VV#476 : int | [(VV#476 = 0)]}
bind 78 VV#479 : {VV#479 : GHC.Types.Bool | [(? Prop([VV#479]))]}
bind 79 VV#479 : {VV#479 : GHC.Types.Bool | [(? Prop([VV#479]))]}
bind 80 VV#482 : {VV#482 : GHC.Types.Bool | [(VV#482 = Test0.toss#rZN)]}
bind 81 VV#482 : {VV#482 : GHC.Types.Bool | [(VV#482 = Test0.toss#rZN)]}
bind 82 VV#485 : {VV#485 : GHC.Types.Bool | [(VV#485 = GHC.Types.False#68)]}
bind 83 VV#485 : {VV#485 : GHC.Types.Bool | [(VV#485 = GHC.Types.False#68)]}
bind 84 VV#488 : {VV#488 : GHC.Types.Bool | [(VV#488 = GHC.Types.False#68)]}
bind 85 VV#488 : {VV#488 : GHC.Types.Bool | [(VV#488 = GHC.Types.False#68)]}
bind 86 VV#491 : {VV#491 : GHC.Types.Bool | [((? Prop([VV#491])) <=> (lq_anf__d13R > lq_anf__d13S))]}
bind 87 VV#491 : {VV#491 : GHC.Types.Bool | [((? Prop([VV#491])) <=> (lq_anf__d13R > lq_anf__d13S))]}
bind 88 VV#494 : {VV#494 : int | [(VV#494 = lq_anf__d13S)]}
bind 89 VV#494 : {VV#494 : int | [(VV#494 = lq_anf__d13S)]}
bind 90 VV#497 : {VV#497 : int | [(VV#497 = lq_anf__d13R)]}
bind 91 VV#497 : {VV#497 : int | [(VV#497 = lq_anf__d13R)]}
bind 92 VV#500 : {VV#500 : int | [(VV#500 = 10)]}
bind 93 VV#500 : {VV#500 : int | [(VV#500 = 10)]}
bind 94 VV#503 : {VV#503 : int | [(VV#503 = lq_anf__d13Q)]}
bind 95 VV#503 : {VV#503 : int | [(VV#503 = lq_anf__d13Q)]}
bind 96 VV#506 : {VV#506 : int | [(VV#506 = 0)]}
bind 97 VV#506 : {VV#506 : int | [(VV#506 = 0)]}
bind 98 VV#407 : {VV#407 : int | [$k__408]}
bind 99 VV#380 : {VV#380 : int | [$k__381]}
bind 100 VV#384 : {VV#384 : int | [$k__385]}
bind 101 VV#365 : {VV#365 : int | [$k__366]}
bind 102 VV#303 : {VV#303 : int | [$k__304]}
bind 103 VV#338 : {VV#338 : int | [$k__339]}
bind 104 VV#324 : {VV#324 : int | [$k__325]}
bind 105 VV#307 : {VV#307 : int | [$k__308]}
bind 106 VV#268 : {VV#268 : GHC.Types.Bool | [$k__269]}
bind 107 VV#259 : {VV#259 : int | [$k__260]}
bind 108 VV#230 : {VV#230 : GHC.Types.Bool | [$k__231]}




constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 88; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = lq_anf__d13S)]}
  rhs {VV#F16 : int | [$k__260[VV#259:=VV#F16][lq_tmp_x_256:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_257:=lq_anf__d13R][lq_tmp_x_262:=VV#F16][VV#494:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [5]
  // META constraint id 16 : test000.hs:6:21-22


constraint:
  env [0;
       1;
       17;
       2;
       3;
       35;
       4;
       5;
       6;
       38;
       7;
       8;
       40;
       9;
       10;
       11;
       12;
       28;
       13]
  grd true
  lhs {VV#F1 : int | [$k__385[VV#384:=VV#F1][zzz#a13k:=lq_anf__d141][lq_tmp_x_419:=lq_anf__d141][lq_tmp_x_417:=VV#F1][VV#422:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : int | [$k__408[VV#407:=VV#F1][VV#422:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : test000.hs:21:7-13


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 90; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = lq_anf__d13R)]}
  rhs {VV#F17 : int | [$k__260[VV#259:=VV#F17][lq_tmp_x_256:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_262:=VV#F17][VV#497:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [5]
  // META constraint id 17 : test000.hs:6:9-16


constraint:
  env [0;
       1;
       17;
       2;
       3;
       35;
       4;
       5;
       6;
       38;
       7;
       8;
       9;
       10;
       42;
       11;
       12;
       28;
       13]
  grd true
  lhs {VV#F2 : int | [(VV#F2 = lq_anf__d141)]}
  rhs {VV#F2 : int | [$k__381[VV#380:=VV#F2][lq_tmp_x_416:=VV#F2][VV#425:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : test000.hs:21:12-13


constraint:
  env [0;
       1;
       17;
       2;
       3;
       35;
       4;
       36;
       5;
       37;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       28;
       13;
       46]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = (zzz#a13k + lq_anf__d140))]}
  rhs {VV#F3 : int | [$k__385[VV#384:=VV#F3][VV#431:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : test000.hs:19:12-18


constraint:
  env [0; 1; 17; 2; 34; 3; 4; 5; 6; 54; 7; 8; 9; 10; 11; 12; 28; 13]
  grd true
  lhs {VV#F4 : int | [$k__308[VV#307:=VV#F4][x#a13j:=lq_anf__d13Z][lq_tmp_x_377:=lq_anf__d13Z][lq_tmp_x_375:=VV#F4][VV#443:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__366[VV#365:=VV#F4][VV#443:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : test000.hs:16:7-12


constraint:
  env [0; 1; 17; 2; 34; 3; 4; 5; 6; 7; 8; 56; 9; 10; 11; 12; 28; 13]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = lq_anf__d13Z)]}
  rhs {VV#F5 : int | [$k__304[VV#303:=VV#F5][lq_tmp_x_374:=VV#F5][VV#446:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : test000.hs:16:11-12


constraint:
  env [0;
       32;
       1;
       17;
       33;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       28;
       60;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = (lq_anf__d13X + lq_anf__d13Y))]}
  rhs {VV#F6 : int | [$k__308[VV#307:=VV#F6][VV#452:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : test000.hs:14:9-36


constraint:
  env [0;
       1;
       17;
       2;
       3;
       4;
       68;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = x#a13j)]}
  rhs {VV#F7 : int | [$k__339[VV#338:=VV#F7][lq_tmp_x_336:=lq_anf__d13W][lq_tmp_x_341:=VV#F7][VV#464:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : test000.hs:14:31


constraint:
  env [0;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       70;
       7;
       8;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F8 : GHC.Types.Bool | [(VV#F8 = lq_anf__d13W)]}
  rhs {VV#F8 : GHC.Types.Bool | [(? Prop([VV#F8]))]}
  id 8 tag [3]
  // META constraint id 8 : test000.hs:14:24-28


constraint:
  env [0;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       72;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       30]
  grd true
  lhs {VV#F9 : int | [(VV#F9 = lq_anf__d13V)]}
  rhs {VV#F9 : int | [$k__325[VV#324:=VV#F9][lq_tmp_x_321:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_322:=x#a13j][lq_tmp_x_327:=VV#F9][VV#470:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : test000.hs:14:28


constraint:
  env [0;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       74;
       11;
       12;
       28;
       13;
       29;
       30]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = x#a13j)]}
  rhs {VV#F10 : int | [$k__325[VV#324:=VV#F10][lq_tmp_x_321:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_327:=VV#F10][VV#473:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : test000.hs:14:24


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       13;
       78]
  grd true
  lhs {VV#F11 : GHC.Types.Bool | [(? Prop([VV#F11]))]}
  rhs {VV#F11 : GHC.Types.Bool | [$k__269[VV#268:=VV#F11][VV#479:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [6]
  // META constraint id 11 : test000.hs:10:33-50


constraint:
  env [0;
       80;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       13]
  grd true
  lhs {VV#F12 : GHC.Types.Bool | [(VV#F12 = Test0.toss#rZN)]}
  rhs {VV#F12 : GHC.Types.Bool | [(? Prop([VV#F12]))]}
  id 12 tag [6]
  // META constraint id 12 : test000.hs:10:47-50


constraint:
  env [0;
       1;
       17;
       2;
       18;
       82;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F13 : GHC.Types.Bool | [(VV#F13 = GHC.Types.False#68)]}
  rhs {VV#F13 : GHC.Types.Bool | [$k__269[VV#268:=VV#F13][VV#485:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [6]
  // META constraint id 13 : test000.hs:10:57-61


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       84;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F14 : GHC.Types.Bool | [(VV#F14 = GHC.Types.False#68)]}
  rhs {VV#F14 : GHC.Types.Bool | [$k__269[VV#268:=VV#F14][VV#488:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [6]
  // META constraint id 14 : test000.hs:11:19-23


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 86; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F15 : GHC.Types.Bool | [((? Prop([VV#F15])) <=> (lq_anf__d13R > lq_anf__d13S))]}
  rhs {VV#F15 : GHC.Types.Bool | [$k__231[VV#230:=VV#F15][VV#491:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [5]
  // META constraint id 15 : test000.hs:6:8-22




wf:
  env [0; 1; 17; 2; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13]
  reft {VV#407 : int | [$k__408]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13]
  reft {VV#380 : int | [$k__381]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 35; 4; 36; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13]
  reft {VV#384 : int | [$k__385]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13]
  reft {VV#365 : int | [$k__366]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13]
  reft {VV#303 : int | [$k__304]}
  
  // META wf  : <no location info>


wf:
  env [0;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       30;
       31]
  reft {VV#338 : int | [$k__339]}
  
  // META wf  : test000.hs:14:10-21


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13; 29; 30]
  reft {VV#324 : int | [$k__325]}
  
  // META wf  : test000.hs:14:26


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13; 29]
  reft {VV#307 : int | [$k__308]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#268 : GHC.Types.Bool | [$k__269]}
  
  // META wf  : test000.hs:(9,12)-(11,23)


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#259 : int | [$k__260]}
  
  // META wf  : test000.hs:6:19


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#230 : GHC.Types.Bool | [$k__231]}
  
  // META wf  : <no location info>







