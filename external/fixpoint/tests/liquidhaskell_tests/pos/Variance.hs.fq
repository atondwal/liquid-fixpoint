//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:GHC.Types.Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif CmpLen(v:[a], ~A:[b])  : len([v]) [= ; >=; >; <=; <] len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif Cmp(v:int,~A:int)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:GHC.Types.Bool)   : Prop(v)
qualif False1(v:GHC.Types.Bool)  : ~ Prop(v)


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(1, [Pred @(0); @(0); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

qualif Papp3(v:a,~X:b, ~Y:c, ~P:Pred a b c) : papp3(~P, v, ~X, ~Y)
constant papp3 : func(6, [Pred @(0) @(1) @(2); @(3); @(4); @(5); bool])

// qualif Papp4(v:a,~X:b, ~Y:c, ~Z:d, ~P:Pred a b c d) : papp4(~P, v, ~X, ~Y, ~Z)
constant papp4 : func(8, [Pred @(0) @(1) @(2) @(6); @(3); @(4); @(5); @(7); bool])


constant Prop : func(0, [GHC.Types.Bool; bool])
qualif Fst(v : a, fix##126#Y : b): (v = fst([fix##126#Y])) // "/Users/niki/.cabal/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.3.1.0/include/GHC/Base.spec" (line 26, column 8)
qualif Snd(v : a, fix##126#Y : b): (v = snd([fix##126#Y])) // "/Users/niki/.cabal/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.3.1.0/include/GHC/Base.spec" (line 27, column 8)
qualif Auto(v : int): (v = 1) // "Variance.hs" (line 10, column 1)
qualif Auto(v : int): (v > 0) // "Variance.hs" (line 10, column 1)
qualif Auto(v : int): (v > 0) // "Variance.hs" (line 15, column 1)
qualif Auto(v : int): (v = 1) // "Variance.hs" (line 15, column 1)
qualif Auto(v : int): (v = 1) // "Variance.hs" (line 19, column 1)
qualif Auto(v : int): (v > 0) // "Variance.hs" (line 19, column 1)
qualif Auto(v : int): (v = 1) // "Variance.hs" (line 23, column 1)
qualif Auto(v : int): (v > 0) // "Variance.hs" (line 23, column 1)
qualif Auto(v : int): (v < 2) // "Variance.hs" (line 23, column 1)
qualif Auto(v : int): (v = 1) // "Variance.hs" (line 28, column 1)
qualif Auto(v : int): (v > 0) // "Variance.hs" (line 28, column 1)
qualif Auto(v : int): (v < 2) // "Variance.hs" (line 28, column 1)

constant Prop : func(0, [GHC.Types.Bool; bool])
constant x_Tuple64 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(3)])
constant x_Tuple54 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(3)])
constant x_Tuple44 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(3)])
constant xListSelector : func(1, [[@(0)]; @(0)])
constant x_Tuple41 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(0)])
constant x_Tuple76 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(5)])
constant addrLen : func(0, [int; int])
constant x_Tuple65 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(4)])
constant x_Tuple52 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(1)])
constant x_Tuple75 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(4)])
constant x_Tuple33 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(2)])
constant fst : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                        @(0)])
constant x_Tuple73 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(2)])
constant x_Tuple31 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(0)])
constant x_Tuple43 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(2)])
constant x_Tuple71 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(0)])
constant x_Tuple32 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(1)])
constant x_Tuple72 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(1)])
constant x_Tuple63 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(2)])
constant x_Tuple51 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(0)])
constant len : func(1, [[@(0)]; int])
constant xsListSelector : func(1, [[@(0)]; [@(0)]])
constant null : func(1, [[@(0)]; bool])
constant x_Tuple53 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(2)])
constant x_Tuple22 : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                              @(1)])
constant fromJust : func(1, [FAppTy Data.Maybe.Maybe  @(0); @(0)])
constant snd : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                        @(1)])
constant x_Tuple62 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(1)])
constant x_Tuple55 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(4)])
constant x_Tuple74 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(3)])
constant cmp : func(0, [GHC.Types.Ordering; GHC.Types.Ordering])
constant x_Tuple42 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(1)])
constant x_Tuple21 : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                              @(0)])
constant x_Tuple61 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(0)])
constant isJust : func(1, [FAppTy Data.Maybe.Maybe  @(0); bool])
constant x_Tuple66 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(5)])
constant x_Tuple77 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(6)])
bind 0 GHC.Types.EQ#6U : {VV#88 : GHC.Types.Ordering | []}
bind 1 GHC.Types.LT#6S : {VV#89 : GHC.Types.Ordering | []}
bind 2 GHC.Types.GT#6W : {VV#90 : GHC.Types.Ordering | []}
bind 3 GHC.Integer.Type.smallInteger#0Z : {VV : func(0, [int;
                                                         int]) | []}
bind 4 GHC.Types.I##6c : {VV : func(0, [int; int]) | []}
bind 5 fix#GHC.Prim.#43##35##35#98 : {VV : func(0, [int;
                                                    int;
                                                    int]) | []}
bind 6 fix#GHC.Prim.#45##35##35#99 : {VV : func(0, [int;
                                                    int;
                                                    int]) | []}
bind 7 fix#GHC.Prim.#61##61##35##35#9o : {VV : func(0, [int;
                                                        int;
                                                        int]) | []}
bind 8 fix#GHC.Prim.#62##61##35##35#9n : {VV : func(0, [int;
                                                        int;
                                                        int]) | []}
bind 9 fix#GHC.Prim.#60##61##35##35#9r : {VV : func(0, [int;
                                                        int;
                                                        int]) | []}
bind 10 fix#GHC.Prim.#60##35##35#9q : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 11 fix#GHC.Prim.#62##35##35#9m : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 12 GHC.Types.EQ#6U : {VV#107 : GHC.Types.Ordering | [(cmp([VV#107]) = GHC.Types.EQ#6U)]}
bind 13 GHC.Types.LT#6S : {VV#109 : GHC.Types.Ordering | [(cmp([VV#109]) = GHC.Types.LT#6S)]}
bind 14 GHC.Types.GT#6W : {VV#110 : GHC.Types.Ordering | [(cmp([VV#110]) = GHC.Types.GT#6W)]}
bind 15 r#aMd : {VV#120 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  int)  b_aMy)  c_aMz)  d_aMA | []}
bind 16 r#aMc : {VV#125 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aMQ)  int)  c_aMR)  d_aMS | []}
bind 17 r#aMb : {VV : func(0, [FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aN8)  b_aN9)  c_aNa)  int;
                               fix##40##41#]) | []}
bind 18 r#aMa : {VV#140 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aNq)  b_aNr)  c_aNs)  int | []}
bind 19 r#aM9 : {VV#145 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aNI)  b_aNJ)  int)  c_aNK | []}
bind 20 VV#149 : {VV#149 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aNI)  b_aNJ)  int)  c_aNK | [(VV#149 = r#aM9)]}
bind 21 VV#149 : {VV#149 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aNI)  b_aNJ)  int)  c_aNK | [(VV#149 = r#aM9)]}
bind 22 VV : {VV : a_aNI | []}
bind 23 VV : {VV : a_aNI | []}
bind 24 VV : {VV : b_aNJ | []}
bind 25 VV : {VV : b_aNJ | []}
bind 26 VV#156 : {VV#156 : int | [(VV#156 = 1)]}
bind 27 VV#156 : {VV#156 : int | [(VV#156 = 1)]}
bind 28 VV : {VV : c_aNK | []}
bind 29 VV#160 : {VV#160 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aNq)  b_aNr)  c_aNs)  int | [(VV#160 = r#aMa)]}
bind 30 VV#160 : {VV#160 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aNq)  b_aNr)  c_aNs)  int | [(VV#160 = r#aMa)]}
bind 31 VV : {VV : a_aNq | []}
bind 32 VV : {VV : a_aNq | []}
bind 33 VV : {VV : b_aNr | []}
bind 34 VV : {VV : b_aNr | []}
bind 35 VV : {VV : c_aNs | []}
bind 36 VV#168 : {VV#168 : int | [(VV#168 = 1)]}
bind 37 VV#168 : {VV#168 : int | [(VV#168 = 1)]}
bind 38 lq_tmp_x136 : {lq_tmp_x136 : func(0, [FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aN8)  b_aN9)  c_aNa)  int;
                                              fix##40##41#]) | [(lq_tmp_x136 = r#aMb)]}
bind 39 VV#172 : {VV#172 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aN8)  b_aN9)  c_aNa)  int | []}
bind 40 VV#172 : {VV#172 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aN8)  b_aN9)  c_aNa)  int | []}
bind 41 VV : {VV : a_aN8 | []}
bind 42 VV : {VV : a_aN8 | []}
bind 43 VV : {VV : b_aN9 | []}
bind 44 VV : {VV : b_aN9 | []}
bind 45 VV : {VV : c_aNa | []}
bind 46 VV#180 : {VV#180 : int | [(VV#180 = 1)]}
bind 47 VV#180 : {VV#180 : int | [(VV#180 = 1)]}
bind 48 lq_tmp_x131 : {VV#183 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aN8)  b_aN9)  c_aNa)  int | []}
bind 49 VV#184 : {VV#184 : fix##40##41# | []}
bind 50 VV#184 : {VV#184 : fix##40##41# | []}
bind 51 VV#187 : {VV#187 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aMQ)  int)  c_aMR)  d_aMS | [(VV#187 = r#aMc)]}
bind 52 VV#187 : {VV#187 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  a_aMQ)  int)  c_aMR)  d_aMS | [(VV#187 = r#aMc)]}
bind 53 VV : {VV : a_aMQ | []}
bind 54 VV : {VV : a_aMQ | []}
bind 55 VV#192 : {VV#192 : int | [(VV#192 = 1)]}
bind 56 VV#192 : {VV#192 : int | [(VV#192 = 1)]}
bind 57 VV#195 : {VV#195 : int | [&& [(VV#195 > 0); (VV#195 < 2)]]}
bind 58 VV#195 : {VV#195 : int | [&& [(VV#195 > 0); (VV#195 < 2)]]}
bind 59 VV : {VV : c_aMR | []}
bind 60 VV : {VV : d_aMS | []}
bind 61 VV#200 : {VV#200 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  int)  b_aMy)  c_aMz)  d_aMA | [(VV#200 = r#aMd)]}
bind 62 VV#200 : {VV#200 : FAppTy (FAppTy (FAppTy (FAppTy Variance.Foo  int)  b_aMy)  c_aMz)  d_aMA | [(VV#200 = r#aMd)]}
bind 63 VV#203 : {VV#203 : int | [(VV#203 = 1)]}
bind 64 VV#203 : {VV#203 : int | [(VV#203 = 1)]}
bind 65 VV#206 : {VV#206 : int | [&& [(VV#206 > 0); (VV#206 < 2)]]}
bind 66 VV#206 : {VV#206 : int | [&& [(VV#206 > 0); (VV#206 < 2)]]}
bind 67 VV : {VV : b_aMy | []}
bind 68 VV : {VV : b_aMy | []}
bind 69 VV : {VV : c_aMz | []}
bind 70 VV : {VV : d_aMA | []}


constraint:
  env [0; 1; 2; 3; 19; 4; 5; 21; 6; 7; 8; 9; 10; 26; 11; 12; 13; 14]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = 1); true]}
  rhs {VV#F1 : int | [(VV#F1 > 0)]}
  id 1 tag [5]


constraint:
  env [0; 1; 2; 18; 3; 4; 36; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 30]
  grd true
  lhs {VV#F2 : int | [(VV#F2 = 1); true]}
  rhs {VV#F2 : int | [(VV#F2 > 0)]}
  id 2 tag [4]


constraint:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 40; 9; 10; 11; 12; 13; 14; 46]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = 1); true]}
  rhs {VV#F3 : int | [(VV#F3 > 0)]}
  id 3 tag [3]


constraint:
  env [0; 16; 1; 2; 3; 4; 52; 5; 6; 7; 55; 8; 9; 10; 11; 12; 13; 14]
  grd true
  lhs {VV#F4 : int | [(VV#F4 = 1); true]}
  rhs {VV#F4 : int | [&& [(VV#F4 > 0); (VV#F4 < 2)]]}
  id 4 tag [2]


constraint:
  env [0; 16; 1; 2; 3; 4; 52; 5; 6; 7; 8; 9; 57; 10; 11; 12; 13; 14]
  grd true
  lhs {VV#F5 : int | [&& [(VV#F5 > 0); (VV#F5 < 2)]; true]}
  rhs {VV#F5 : int | [(VV#F5 = 1)]}
  id 5 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 62; 15; 63]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = 1); true]}
  rhs {VV#F6 : int | [&& [(VV#F6 > 0); (VV#F6 < 2)]]}
  id 6 tag [1]


constraint:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 62; 15]
  grd true
  lhs {VV#F7 : int | [&& [(VV#F7 > 0); (VV#F7 < 2)]; true]}
  rhs {VV#F7 : int | [(VV#F7 = 1)]}
  id 7 tag [1]