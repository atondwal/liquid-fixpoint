qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))


bind 0 GHC.Types.EQ#6U : {VV#163 : GHC.Types.Ordering | [(VV#163 = GHC.Types.EQ#6U)]}
bind 1 GHC.Types.LT#6S : {VV#164 : GHC.Types.Ordering | [(VV#164 = GHC.Types.LT#6S)]}
bind 2 GHC.Types.GT#6W : {VV#165 : GHC.Types.Ordering | [(VV#165 = GHC.Types.GT#6W)]}
bind 3 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 4 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 5 GHC.Types.EQ#6U : {VV#191 : GHC.Types.Ordering | [(cmp([VV#191]) = GHC.Types.EQ#6U)]}
bind 6 GHC.Types.LT#6S : {VV#192 : GHC.Types.Ordering | [(cmp([VV#192]) = GHC.Types.LT#6S)]}
bind 7 GHC.Types.GT#6W : {VV#193 : GHC.Types.Ordering | [(cmp([VV#193]) = GHC.Types.GT#6W)]}
bind 8 xs#aOg : {VV#198 : [a_aOo] | [(len([VV#198]) >= 0);
                                     (len([VV#198]) > 0)]}
bind 9 xs#aOf : {VV#212 : [a_aOA] | [(len([VV#212]) >= 0);
                                     (len([VV#212]) > 0)]}
bind 10 x#aOd : {VV : a_aON | []}
bind 11 xs#aOe : {VV#226 : [a_aON] | [(len([VV#226]) >= 0);
                                      (len([VV#226]) > 0)]}
bind 12 lq_tmp_x_239 : {VV : a_aON | []}
bind 13 xInv : {VV#243 : [a_aON] | [(len([VV#243]) = (1 + len([xs#aOe])));
                                    ((? null([VV#243])) <=> false);
                                    (xsListSelector([VV#243]) = xs#aOe);
                                    (xListSelector([VV#243]) = x#aOd);
                                    (len([VV#243]) >= 0)]}
bind 14 lq_anf__dPa : {lq_tmp_x_245 : int | [(lq_tmp_x_245 = 1)]}
bind 15 Invariant.xs#rou : {VV#256 : [int] | [(len([VV#256]) >= 0);
                                              (len([VV#256]) > 0)]}
bind 16 VV#257 : {VV#257 : [int] | [(len([VV#257]) >= 0);
                                    (len([VV#257]) > 0)]}
bind 17 VV#257 : {VV#257 : [int] | [(len([VV#257]) >= 0);
                                    (len([VV#257]) > 0)]}
bind 18 VV#260 : {VV#260 : int | [$k__252[VV#251:=VV#260][lq_tmp_x_250:=lq_anf__dPa][lq_tmp_x_248:=VV#257][lq_tmp_x_254:=VV#260]]}
bind 19 VV#260 : {VV#260 : int | [$k__252[VV#251:=VV#260][lq_tmp_x_250:=lq_anf__dPa][lq_tmp_x_248:=VV#257][lq_tmp_x_254:=VV#260]]}
bind 20 fldList : {VV#263 : int | []}
bind 21 VV#264 : {VV#264 : int | []}
bind 22 VV#264 : {VV#264 : int | []}
bind 23 VV#267 : {VV#267 : int | [(VV#267 = lq_anf__dPa)]}
bind 24 VV#267 : {VV#267 : int | [(VV#267 = lq_anf__dPa)]}
bind 25 VV#270 : {VV#270 : [a_aON] | [(len([VV#270]) = (1 + len([xs#aOe])));
                                      ((? null([VV#270])) <=> false);
                                      (xsListSelector([VV#270]) = xs#aOe);
                                      (xListSelector([VV#270]) = x#aOd);
                                      (len([VV#270]) >= 0);
                                      (len([VV#270]) > 0)]}
bind 26 VV#270 : {VV#270 : [a_aON] | [(len([VV#270]) = (1 + len([xs#aOe])));
                                      ((? null([VV#270])) <=> false);
                                      (xsListSelector([VV#270]) = xs#aOe);
                                      (xListSelector([VV#270]) = x#aOd);
                                      (len([VV#270]) >= 0);
                                      (len([VV#270]) > 0)]}
bind 27 VV#233 : {VV#233 : a_aON | [$k__234[lq_tmp_x_231:=x#aOd][lq_tmp_x_232:=xs#aOe][VV:=VV#270]]}
bind 28 fldList : {VV : a_aON | []}
bind 29 VV#233 : {VV#233 : a_aON | [$k__237[VV#236:=VV#233][lq_tmp_x_231:=x#aOd][lq_tmp_x_232:=xs#aOe][lq_tmp_x_239:=fldList]]}
bind 30 VV#276 : {VV#276 : [a_aON] | [(VV#276 = xs#aOe);
                                      (len([VV#276]) >= 0);
                                      (len([VV#276]) > 0)]}
bind 31 VV#276 : {VV#276 : [a_aON] | [(VV#276 = xs#aOe);
                                      (len([VV#276]) >= 0);
                                      (len([VV#276]) > 0)]}
bind 32 VV : {VV : a_aON | []}
bind 33 lq_tmp_x_227 : {VV : a_aON | []}
bind 34 VV : {VV : a_aON | []}
bind 35 VV : {VV : a_aON | [(VV = x#aOd)]}
bind 36 VV#217 : {VV#217 : a_aOA | [$k__218[lq_tmp_x_216:=xs#aOf]]}
bind 37 VV#284 : {VV#284 : [a_aOA] | [(VV#284 = xs#aOf);
                                      (len([VV#284]) >= 0);
                                      (len([VV#284]) > 0)]}
bind 38 VV#284 : {VV#284 : [a_aOA] | [(VV#284 = xs#aOf);
                                      (len([VV#284]) >= 0);
                                      (len([VV#284]) > 0)]}
bind 39 VV : {VV : a_aOA | []}
bind 40 lq_tmp_x_213 : {VV : a_aOA | []}
bind 41 VV : {VV : a_aOA | []}
bind 42 VV#290 : {VV#290 : [a_aOo] | [(len([VV#290]) = (len([xs#aOg]) - 1));
                                      (len([VV#290]) >= 0);
                                      (len([VV#290]) > 0)]}
bind 43 VV#290 : {VV#290 : [a_aOo] | [(len([VV#290]) = (len([xs#aOg]) - 1));
                                      (len([VV#290]) >= 0);
                                      (len([VV#290]) > 0)]}
bind 44 VV#205 : {VV#205 : a_aOo | [$k__206[lq_tmp_x_204:=xs#aOg][lq_tmp_x_202:=VV#290]]}
bind 45 fldList : {VV : a_aOo | []}
bind 46 VV#205 : {VV#205 : a_aOo | []}
bind 47 VV#296 : {VV#296 : [a_aOo] | [(VV#296 = xs#aOg);
                                      (len([VV#296]) >= 0);
                                      (len([VV#296]) > 0)]}
bind 48 VV#296 : {VV#296 : [a_aOo] | [(VV#296 = xs#aOg);
                                      (len([VV#296]) >= 0);
                                      (len([VV#296]) > 0)]}
bind 49 VV : {VV : a_aOo | []}
bind 50 lq_tmp_x_199 : {VV : a_aOo | []}
bind 51 VV : {VV : a_aOo | []}
bind 52 VV#251 : {VV#251 : int | [$k__252]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 14]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = lq_anf__dPa)]}
  rhs {VV#F1 : int | [$k__252[VV#251:=VV#F1][lq_tmp_x_254:=VV#F1][VV#267:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : StreamInvariants.hs:6:13


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 10; 11; 13]
  grd true
  lhs {VV#F2 : bool | [((? VV#F2) <=> && [(len([xInv]) > 0)])]}
  rhs {VV#F2 : bool | [(? VV#F2)]}
  id 2 tag [3]
  // META constraint id 2 : StreamInvariants.hs:8:12-15


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 10; 11; 31]
  grd true
  lhs {VV#F3 : a_aON | []}
  rhs {VV#F3 : a_aON | [$k__234[lq_tmp_x_231:=x#aOd][lq_tmp_x_228:=VV#276][VV#233:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : StreamInvariants.hs:8:14-15


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 10; 11; 31]
  grd true
  lhs {VV#F4 : a_aON | []}
  rhs {VV#F4 : a_aON | [$k__237[lq_tmp_x_239:=x#aOd][VV#236:=VV#F4][lq_tmp_x_231:=x#aOd][lq_tmp_x_228:=VV#276][VV#233:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : StreamInvariants.hs:8:14-15


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 5; 6; 7; 10; 11; 31]
  grd true
  lhs {VV#F5 : a_aON | []}
  rhs {VV#F5 : a_aON | [$k__237[lq_tmp_x_239:=lq_tmp_x_227][VV#236:=VV#F5][lq_tmp_x_231:=x#aOd][VV#233:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : StreamInvariants.hs:8:14-15


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 7; 10; 11]
  grd true
  lhs {VV#F6 : a_aON | [(VV#F6 = x#aOd)]}
  rhs {VV#F6 : a_aON | [$k__234[VV#233:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : StreamInvariants.hs:8:12


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 9]
  grd true
  lhs {VV#F7 : [a_aOA] | [(VV#F7 = xs#aOf); (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [a_aOA] | [(len([VV#F7]) > 0)]}
  id 7 tag [2]
  // META constraint id 7 : StreamInvariants.hs:10:15-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 39; 9]
  grd true
  lhs {VV#F8 : a_aOA | []}
  rhs {VV#F8 : a_aOA | [$k__218[lq_tmp_x_214:=VV#284][VV#217:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : StreamInvariants.hs:10:15-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 47]
  grd true
  lhs {VV#F9 : [a_aOo] | [(VV#F9 = xs#aOg); (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [a_aOo] | [(len([VV#F9]) > 0)]}
  id 9 tag [1]
  // META constraint id 9 : StreamInvariants.hs:11:15-16


constraint:
  env [0; 48; 1; 49; 2; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F10 : a_aOo | []}
  rhs {VV#F10 : a_aOo | [$k__206[lq_tmp_x_200:=VV#296][VV#205:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : StreamInvariants.hs:11:15-16




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 14]
  reft {VV#251 : int | [$k__252]}
  
  // META wf  : StreamInvariants.hs:6:6-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 10; 11; 12]
  reft {VV#236 : a_aON | [$k__237]}
  
  // META wf  : StreamInvariants.hs:8:13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 10; 11]
  reft {VV#233 : a_aON | [$k__234]}
  
  // META wf  : StreamInvariants.hs:8:13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 9]
  reft {VV#217 : a_aOA | [$k__218]}
  
  // META wf  : StreamInvariants.hs:10:10-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#205 : a_aOo | [$k__206]}
  
  // META wf  : StreamInvariants.hs:11:10-13







