qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Types.False#68 : {VV#178 : GHC.Types.Bool | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 GHC.Types.True#6u : {VV#181 : GHC.Types.Bool | []}
bind 3 GHC.Types.EQ#6U : {VV#186 : GHC.Types.Ordering | [(VV#186 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#187 : GHC.Types.Ordering | [(VV#187 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#188 : GHC.Types.Ordering | [(VV#188 = GHC.Types.GT#6W)]}
bind 6 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 7 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 8 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 9 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 10 GHC.Types.EQ#6U : {VV#231 : GHC.Types.Ordering | [(cmp([VV#231]) = GHC.Types.EQ#6U)]}
bind 11 GHC.Types.LT#6S : {VV#232 : GHC.Types.Ordering | [(cmp([VV#232]) = GHC.Types.LT#6S)]}
bind 12 GHC.Types.GT#6W : {VV#233 : GHC.Types.Ordering | [(cmp([VV#233]) = GHC.Types.GT#6W)]}
bind 13 x#a13t : {VV#237 : t_a13F | [$k__238]}
bind 14 y#a13u : {VV#241 : t_a13G | [$k__242]}
bind 15 x#a13s : {VV#246 : int | [$k__247]}
bind 16 lq_anf__d14a : {lq_tmp_x_254 : int | [(lq_tmp_x_254 = (0  :  int))]}
bind 17 lq_anf__d14b : {lq_tmp_x_261 : GHC.Types.Bool | [((? Prop([lq_tmp_x_261])) <=> (x#a13s > lq_anf__d14a))]}
bind 18 lq_anf__d14c : {lq_tmp_x_269 : GHC.Types.Bool | [(lq_tmp_x_269 = lq_anf__d14b)]}
bind 19 lq_anf__d14c : {lq_tmp_x_271 : GHC.Types.Bool | [(lq_tmp_x_271 = lq_anf__d14b)]}
bind 20 lq_anf__d14c : {lq_tmp_x_271 : GHC.Types.Bool | [(lq_tmp_x_271 = lq_anf__d14b);
                                                         (~ ((? Prop([lq_tmp_x_271]))));
                                                         (~ ((? Prop([lq_tmp_x_271]))));
                                                         (~ ((? Prop([lq_tmp_x_271]))))]}
bind 21 lq_anf__d14d : {lq_tmp_x_277 : int | [(lq_tmp_x_277 = (0  :  int))]}
bind 22 lq_anf__d14c : {lq_tmp_x_291 : GHC.Types.Bool | [(lq_tmp_x_291 = lq_anf__d14b)]}
bind 23 lq_anf__d14c : {lq_tmp_x_291 : GHC.Types.Bool | [(lq_tmp_x_291 = lq_anf__d14b);
                                                         (? Prop([lq_tmp_x_291]));
                                                         (? Prop([lq_tmp_x_291]));
                                                         (? Prop([lq_tmp_x_291]))]}
bind 24 x#a13v : {VV#299 : int | []}
bind 25 lq_tmp_x_309 : {VV#310 : GHC.Prim.Any | []}
bind 26 lq_anf__d14e : {lq_tmp_x_301 : [GHC.Prim.Any] | [(len([lq_tmp_x_301]) = 0);
                                                         ((? null([lq_tmp_x_301])) <=> true);
                                                         (len([lq_tmp_x_301]) >= 0)]}
bind 27 lq_anf__d14g : {lq_tmp_x_340 : int | [$k__251[VV#250:=lq_tmp_x_340][x#a13s:=x#a13v][lq_tmp_x_342:=x#a13v]]}
bind 28 fix#x#39##35#a13w : {lq_tmp_x_358 : int | [$k__356[VV#355:=lq_tmp_x_358][lq_tmp_x_349:=lq_anf__d14f][lq_tmp_x_350:=lq_anf__d14g]]}
bind 29 lq_anf__d14h : {lq_tmp_x_366 : int | [(lq_tmp_x_366 = (0  :  int))]}
bind 30 lq_anf__d14i : {lq_tmp_x_373 : GHC.Types.Bool | [((? Prop([lq_tmp_x_373])) <=> (fix#x#39##35#a13w >= lq_anf__d14h))]}
bind 31 VV#387 : {VV#387 : GHC.Types.Bool | [(? Prop([VV#387]))]}
bind 32 VV#387 : {VV#387 : GHC.Types.Bool | [(? Prop([VV#387]))]}
bind 33 VV#390 : {VV#390 : GHC.Types.Bool | [(VV#390 = lq_anf__d14i)]}
bind 34 VV#390 : {VV#390 : GHC.Types.Bool | [(VV#390 = lq_anf__d14i)]}
bind 35 VV#393 : {VV#393 : int | [(VV#393 = lq_anf__d14h)]}
bind 36 VV#393 : {VV#393 : int | [(VV#393 = lq_anf__d14h)]}
bind 37 VV#396 : {VV#396 : int | [(VV#396 = fix#x#39##35#a13w)]}
bind 38 VV#396 : {VV#396 : int | [(VV#396 = fix#x#39##35#a13w)]}
bind 39 VV#399 : {VV#399 : int | [(VV#399 = 0)]}
bind 40 VV#399 : {VV#399 : int | [(VV#399 = 0)]}
bind 41 VV#402 : {VV#402 : int | [(VV#402 = lq_anf__d14g)]}
bind 42 VV#402 : {VV#402 : int | [(VV#402 = lq_anf__d14g)]}
bind 43 VV#406 : {VV#406 : int | [$k__352[VV#351:=VV#406][lq_tmp_x_354:=VV#406]]}
bind 44 VV#406 : {VV#406 : int | [$k__352[VV#351:=VV#406][lq_tmp_x_354:=VV#406]]}
bind 45 lq_tmp_x_348 : {lq_tmp_x_354 : int | [$k__352[VV#351:=lq_tmp_x_354]]}
bind 46 VV#410 : {VV#410 : int | [$k__331[VV#330:=VV#410][lq_tmp_x_314:=lq_anf__d14e][lq_tmp_x_333:=VV#410][lq_tmp_x_315:=lq_tmp_x_348][lq_tmp_x_362:=lq_tmp_x_348][lq_tmp_x_360:=VV#410];
                                  (VV#410 = lq_tmp_x_348)]}
bind 47 VV#410 : {VV#410 : int | [$k__331[VV#330:=VV#410][lq_tmp_x_314:=lq_anf__d14e][lq_tmp_x_333:=VV#410][lq_tmp_x_315:=lq_tmp_x_348][lq_tmp_x_362:=lq_tmp_x_348][lq_tmp_x_360:=VV#410];
                                  (VV#410 = lq_tmp_x_348)]}
bind 48 VV#413 : {VV#413 : int | [(VV#413 = x#a13v)]}
bind 49 VV#413 : {VV#413 : int | [(VV#413 = x#a13v)]}
bind 50 VV#416 : {VV#416 : [GHC.Prim.Any] | [(VV#416 = lq_anf__d14e);
                                             (len([VV#416]) >= 0)]}
bind 51 VV#416 : {VV#416 : [GHC.Prim.Any] | [(VV#416 = lq_anf__d14e);
                                             (len([VV#416]) >= 0)]}
bind 52 VV#419 : {VV#419 : GHC.Prim.Any | [$k__303[VV#302:=VV#419][lq_tmp_x_305:=VV#419][lq_tmp_x_301:=VV#416][lq_tmp_x_337:=VV#416][lq_tmp_x_334:=VV#419]]}
bind 53 VV#419 : {VV#419 : GHC.Prim.Any | [$k__303[VV#302:=VV#419][lq_tmp_x_305:=VV#419][lq_tmp_x_301:=VV#416][lq_tmp_x_337:=VV#416][lq_tmp_x_334:=VV#419]]}
bind 54 lq_tmp_x_327 : {VV#422 : GHC.Prim.Any | []}
bind 55 VV#423 : {VV#423 : GHC.Prim.Any | [$k__307[lq_tmp_x_309:=lq_tmp_x_327][VV#306:=VV#423][lq_tmp_x_305:=VV#423][lq_tmp_x_300:=lq_tmp_x_327][lq_tmp_x_335:=lq_tmp_x_327][lq_tmp_x_336:=VV#423]]}
bind 56 VV#423 : {VV#423 : GHC.Prim.Any | [$k__307[lq_tmp_x_309:=lq_tmp_x_327][VV#306:=VV#423][lq_tmp_x_305:=VV#423][lq_tmp_x_300:=lq_tmp_x_327][lq_tmp_x_335:=lq_tmp_x_327][lq_tmp_x_336:=VV#423]]}
bind 57 VV#426 : {VV#426 : int | [(VV#426 = x#a13s)]}
bind 58 VV#426 : {VV#426 : int | [(VV#426 = x#a13s)]}
bind 59 VV#429 : {VV#429 : int | [(VV#429 = (lq_anf__d14d - x#a13s))]}
bind 60 VV#429 : {VV#429 : int | [(VV#429 = (lq_anf__d14d - x#a13s))]}
bind 61 VV#432 : {VV#432 : int | [(VV#432 = x#a13s)]}
bind 62 VV#432 : {VV#432 : int | [(VV#432 = x#a13s)]}
bind 63 VV#435 : {VV#435 : int | [(VV#435 = lq_anf__d14d)]}
bind 64 VV#435 : {VV#435 : int | [(VV#435 = lq_anf__d14d)]}
bind 65 VV#438 : {VV#438 : int | [(VV#438 = 0)]}
bind 66 VV#438 : {VV#438 : int | [(VV#438 = 0)]}
bind 67 VV#441 : {VV#441 : int | [(VV#441 = lq_anf__d14a)]}
bind 68 VV#441 : {VV#441 : int | [(VV#441 = lq_anf__d14a)]}
bind 69 VV#444 : {VV#444 : int | [(VV#444 = x#a13s)]}
bind 70 VV#444 : {VV#444 : int | [(VV#444 = x#a13s)]}
bind 71 VV#447 : {VV#447 : int | [(VV#447 = 0)]}
bind 72 VV#447 : {VV#447 : int | [(VV#447 = 0)]}
bind 73 VV#355 : {VV#355 : int | [$k__356]}
bind 74 VV#351 : {VV#351 : int | [$k__352]}
bind 75 VV#330 : {VV#330 : int | [$k__331]}
bind 76 VV#323 : {VV#323 : [GHC.Prim.Any] | [$k__324;
                                             (len([VV#323]) >= 0)]}
bind 77 VV#316 : {VV#316 : GHC.Prim.Any | [$k__317]}
bind 78 lq_tmp_x_319 : {VV#455 : GHC.Prim.Any | []}
bind 79 VV#320 : {VV#320 : GHC.Prim.Any | [$k__321]}
bind 80 VV#306 : {VV#306 : GHC.Prim.Any | [$k__307]}
bind 81 VV#302 : {VV#302 : GHC.Prim.Any | [$k__303]}
bind 82 VV#246 : {VV#246 : int | [$k__247]}
bind 83 VV#250 : {VV#250 : int | [$k__251]}




constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       24;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       29;
       30]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(VV#F1 = lq_anf__d14i)]}
  rhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  id 1 tag [3]
  // META constraint id 1 : poly2-degenerate.hs:11:29-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 41; 10; 26; 11; 27; 12]
  grd true
  lhs {VV#F2 : int | [(VV#F2 = lq_anf__d14g)]}
  rhs {VV#F2 : int | [$k__352[VV#351:=VV#F2][lq_tmp_x_349:=lq_anf__d14f][lq_tmp_x_354:=VV#F2][VV#402:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : poly2-degenerate.hs:12:25-31


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 27; 43; 12]
  grd true
  lhs {VV#F3 : int | [$k__352[VV#351:=VV#F3][lq_tmp_x_354:=VV#F3][VV#406:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__331[VV#330:=VV#F3][lq_tmp_x_314:=lq_anf__d14e][lq_tmp_x_333:=VV#F3][lq_tmp_x_359:=VV#F3][VV#406:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : poly2-degenerate.hs:12:14-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 27; 43; 12]
  grd true
  lhs {VV#F4 : int | [$k__352[VV#351:=VV#F4][lq_tmp_x_354:=VV#F4][VV#406:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__242[x#a13t:=lq_anf__d14e][VV#241:=VV#F4][lq_tmp_x_314:=lq_anf__d14e][lq_tmp_x_333:=VV#F4][lq_tmp_x_359:=VV#F4][VV#406:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : poly2-degenerate.hs:12:14-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 27; 12; 45; 46]
  grd true
  lhs {VV#F5 : int | [$k__331[VV#330:=VV#F5][lq_tmp_x_314:=lq_anf__d14e][lq_tmp_x_333:=VV#F5][lq_tmp_x_315:=lq_tmp_x_348][lq_tmp_x_362:=lq_tmp_x_348][lq_tmp_x_360:=VV#F5][VV#410:=VV#F5][VV#F:=VV#F5];
                      (VV#F5 = lq_tmp_x_348)]}
  rhs {VV#F5 : int | [$k__356[VV#355:=VV#F5][lq_tmp_x_358:=VV#F5][VV#410:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : poly2-degenerate.hs:12:14-21


constraint:
  env [0; 48; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = x#a13v)]}
  rhs {VV#F6 : int | [$k__247[VV#246:=VV#F6][lq_tmp_x_339:=VV#F6][VV#413:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : poly2-degenerate.hs:12:31


constraint:
  env [0; 1; 2; 50; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12]
  grd true
  lhs {VV#F7 : [GHC.Prim.Any] | [(VV#F7 = lq_anf__d14e);
                                 (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [GHC.Prim.Any] | [$k__324[VV#323:=VV#F7][lq_tmp_x_329:=VV#F7][VV#416:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : poly2-degenerate.hs:12:20-21


constraint:
  env [0; 1; 2; 50; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12]
  grd true
  lhs {VV#F8 : [GHC.Prim.Any] | [(VV#F8 = lq_anf__d14e);
                                 (len([VV#F8]) >= 0)]}
  rhs {VV#F8 : [GHC.Prim.Any] | [$k__238[VV#237:=VV#F8][lq_tmp_x_329:=VV#F8][VV#416:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : poly2-degenerate.hs:12:20-21


constraint:
  env [0; 1; 2; 3; 51; 4; 52; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12]
  grd true
  lhs {VV#F9 : GHC.Prim.Any | [$k__303[VV#302:=VV#F9][lq_tmp_x_305:=VV#F9][lq_tmp_x_301:=VV#416][lq_tmp_x_337:=VV#416][lq_tmp_x_334:=VV#F9][VV#419:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : GHC.Prim.Any | [$k__317[VV#316:=VV#F9][VV#323:=VV#416][lq_tmp_x_329:=VV#416][lq_tmp_x_326:=VV#F9][VV#419:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : poly2-degenerate.hs:12:20-21


constraint:
  env [0; 1; 2; 3; 51; 4; 5; 6; 54; 7; 55; 8; 24; 9; 10; 26; 11; 12]
  grd true
  lhs {VV#F10 : GHC.Prim.Any | [$k__307[lq_tmp_x_309:=lq_tmp_x_327][VV#306:=VV#F10][lq_tmp_x_305:=VV#F10][lq_tmp_x_300:=lq_tmp_x_327][lq_tmp_x_335:=lq_tmp_x_327][lq_tmp_x_336:=VV#F10][VV#423:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : GHC.Prim.Any | [$k__321[VV#320:=VV#F10][lq_tmp_x_319:=lq_tmp_x_327][lq_tmp_x_328:=VV#F10][VV#423:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : poly2-degenerate.hs:12:20-21


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       9;
       57;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = x#a13s)]}
  rhs {VV#F11 : int | [$k__251[VV#250:=VV#F11][VV#426:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : poly2-degenerate.hs:5:31


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       59;
       12;
       15]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = (lq_anf__d14d - x#a13s))]}
  rhs {VV#F12 : int | [$k__251[VV#250:=VV#F12][VV#429:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : poly2-degenerate.hs:5:38-48




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 27; 12]
  reft {VV#355 : int | [$k__356]}
  
  // META wf  : poly2-degenerate.hs:12:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 27; 12]
  reft {VV#351 : int | [$k__352]}
  
  // META wf  : poly2-degenerate.hs:12:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12]
  reft {VV#330 : int | [$k__331]}
  
  // META wf  : poly2-degenerate.hs:12:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12]
  reft {VV#323 : [GHC.Prim.Any] | [$k__324]}
  
  // META wf  : poly2-degenerate.hs:12:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12; 76]
  reft {VV#316 : GHC.Prim.Any | [$k__317]}
  
  // META wf  : poly2-degenerate.hs:12:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 11; 12; 78]
  reft {VV#320 : GHC.Prim.Any | [$k__321]}
  
  // META wf  : poly2-degenerate.hs:12:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 10; 11; 12]
  reft {VV#306 : GHC.Prim.Any | [$k__307]}
  
  // META wf  : poly2-degenerate.hs:11:1-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 11; 12]
  reft {VV#302 : GHC.Prim.Any | [$k__303]}
  
  // META wf  : poly2-degenerate.hs:11:1-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#246 : int | [$k__247]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 15]
  reft {VV#250 : int | [$k__251]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#237 : t_a13F | [$k__238]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#241 : t_a13G | [$k__242]}
  
  // META wf  : <no location info>







