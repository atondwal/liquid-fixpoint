qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aLe], fix##126#A0 : [a_aLe]): (? Set_sub([listElts([v]);
                                                             listElts([fix##126#A0])])) // "meas11.hs" (line 7, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aLe], fix##126#A0 : [a_aLe]): (? Set_sub([listElts([v]);
                                                             listElts([fix##126#A0])])) // "meas11.hs" (line 7, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant Set_emp : (func(1, [(Set_Set  @(0)); bool]))
constant Set_empty : (func(1, [int; (Set_Set  @(0))]))
constant Set_cup : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant Set_sub : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             bool]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant Set_dif : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant strLen : (func(0, [int; int]))
constant Set_cap : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant listElts : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_sng : (func(1, [@(0); (Set_Set  @(0))]))
constant Set_mem : (func(1, [@(0); (Set_Set  @(0)); bool]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Types.False#68 : {VV#119 : GHC.Types.Bool | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 GHC.Types.True#6u : {VV#121 : GHC.Types.Bool | []}
bind 3 GHC.Types.EQ#6U : {VV#122 : GHC.Types.Ordering | [(VV#122 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#123 : GHC.Types.Ordering | [(VV#123 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#124 : GHC.Types.Ordering | [(VV#124 = GHC.Types.GT#6W)]}
bind 6 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 7 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 8 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 9 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 10 GHC.Types.EQ#6U : {VV#149 : GHC.Types.Ordering | [(cmp([VV#149]) = GHC.Types.EQ#6U)]}
bind 11 GHC.Types.LT#6S : {VV#150 : GHC.Types.Ordering | [(cmp([VV#150]) = GHC.Types.LT#6S)]}
bind 12 GHC.Types.GT#6W : {VV#151 : GHC.Types.Ordering | [(cmp([VV#151]) = GHC.Types.GT#6W)]}
bind 13 ds_dLl : {VV#163 : [a_aLe] | [(len([VV#163]) >= 0)]}
bind 14 lq_anf__dLm : {lq_tmp_x_165 : [a_aLe] | [(lq_tmp_x_165 = ds_dLl);
                                                 (len([lq_tmp_x_165]) >= 0)]}
bind 15 lq_anf__dLm : {lq_tmp_x_168 : [a_aLe] | [(lq_tmp_x_168 = ds_dLl);
                                                 (len([lq_tmp_x_168]) >= 0);
                                                 (len([lq_tmp_x_168]) >= 0)]}
bind 16 lq_anf__dLm : {lq_tmp_x_168 : [a_aLe] | [(lq_tmp_x_168 = ds_dLl);
                                                 (len([lq_tmp_x_168]) >= 0);
                                                 (? Set_emp([listElts([lq_tmp_x_168])]));
                                                 (len([lq_tmp_x_168]) = 0);
                                                 ((? null([lq_tmp_x_168])) <=> true);
                                                 (lq_tmp_x_168 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (? Set_emp([listElts([lq_tmp_x_168])]));
                                                 (len([lq_tmp_x_168]) = 0);
                                                 ((? null([lq_tmp_x_168])) <=> true);
                                                 (len([lq_tmp_x_168]) >= 0)]}
bind 17 lq_tmp_x_183 : {VV : a_aLe | []}
bind 18 lq_anf__dLm : {lq_tmp_x_186 : [a_aLe] | [(lq_tmp_x_186 = ds_dLl);
                                                 (len([lq_tmp_x_186]) >= 0);
                                                 (len([lq_tmp_x_186]) >= 0)]}
bind 19 x#aL5 : {VV : a_aLe | []}
bind 20 xs#aL6 : {lq_tmp_x_196 : [a_aLe] | [(len([lq_tmp_x_196]) >= 0)]}
bind 21 lq_anf__dLm : {lq_tmp_x_186 : [a_aLe] | [(lq_tmp_x_186 = ds_dLl);
                                                 (len([lq_tmp_x_186]) >= 0);
                                                 (listElts([lq_tmp_x_186]) = Set_cup([Set_sng([x#aL5]);
                                                                                      listElts([xs#aL6])]));
                                                 (len([lq_tmp_x_186]) = (1 + len([xs#aL6])));
                                                 ((? null([lq_tmp_x_186])) <=> false);
                                                 (xsListSelector([lq_tmp_x_186]) = xs#aL6);
                                                 (xListSelector([lq_tmp_x_186]) = x#aL5);
                                                 (lq_tmp_x_186 = fix#GHC.Types.#58##35#64([x#aL5;
                                                                                           xs#aL6]));
                                                 (listElts([lq_tmp_x_186]) = Set_cup([Set_sng([x#aL5]);
                                                                                      listElts([xs#aL6])]));
                                                 (len([lq_tmp_x_186]) = (1 + len([xs#aL6])));
                                                 ((? null([lq_tmp_x_186])) <=> false);
                                                 (xsListSelector([lq_tmp_x_186]) = xs#aL6);
                                                 (xListSelector([lq_tmp_x_186]) = x#aL5);
                                                 (len([lq_tmp_x_186]) >= 0)]}
bind 22 lq_anf__dLn : {lq_tmp_x_205 : GHC.Types.Bool | []}
bind 23 lq_anf__dLo : {lq_tmp_x_209 : GHC.Types.Bool | [(lq_tmp_x_209 = lq_anf__dLn)]}
bind 24 lq_anf__dLo : {lq_tmp_x_211 : GHC.Types.Bool | [(lq_tmp_x_211 = lq_anf__dLn)]}
bind 25 lq_anf__dLo : {lq_tmp_x_211 : GHC.Types.Bool | [(lq_tmp_x_211 = lq_anf__dLn);
                                                        (~ ((? Prop([lq_tmp_x_211]))));
                                                        (~ ((? Prop([lq_tmp_x_211]))));
                                                        (~ ((? Prop([lq_tmp_x_211]))))]}
bind 26 lq_anf__dLo : {lq_tmp_x_235 : GHC.Types.Bool | [(lq_tmp_x_235 = lq_anf__dLn)]}
bind 27 lq_anf__dLo : {lq_tmp_x_235 : GHC.Types.Bool | [(lq_tmp_x_235 = lq_anf__dLn);
                                                        (? Prop([lq_tmp_x_235]));
                                                        (? Prop([lq_tmp_x_235]));
                                                        (? Prop([lq_tmp_x_235]))]}
bind 28 lq_anf__dLp : {v : [a_aLe] | [(? Set_sub([listElts([v]);
                                                  listElts([xs#aL6])]));
                                      (len([v]) >= 0)]}
bind 29 lq_tmp_x_274 : {VV : a_aLe | []}
bind 30 VV#278 : {VV#278 : [a_aLe] | [(listElts([VV#278]) = Set_cup([Set_sng([x#aL5]);
                                                                     listElts([lq_anf__dLp])]));
                                      (len([VV#278]) = (1 + len([lq_anf__dLp])));
                                      ((? null([VV#278])) <=> false);
                                      (xsListSelector([VV#278]) = lq_anf__dLp);
                                      (xListSelector([VV#278]) = x#aL5);
                                      (len([VV#278]) >= 0)]}
bind 31 VV#278 : {VV#278 : [a_aLe] | [(listElts([VV#278]) = Set_cup([Set_sng([x#aL5]);
                                                                     listElts([lq_anf__dLp])]));
                                      (len([VV#278]) = (1 + len([lq_anf__dLp])));
                                      ((? null([VV#278])) <=> false);
                                      (xsListSelector([VV#278]) = lq_anf__dLp);
                                      (xListSelector([VV#278]) = x#aL5);
                                      (len([VV#278]) >= 0)]}
bind 32 VV#268 : {VV#268 : a_aLe | [$k__269[lq_tmp_x_266:=x#aL5][lq_tmp_x_267:=lq_anf__dLp][lq_tmp_x_263:=VV#278]]}
bind 33 fldList : {VV : a_aLe | []}
bind 34 VV#268 : {VV#268 : a_aLe | [$k__272[lq_tmp_x_274:=fldList][VV#271:=VV#268][lq_tmp_x_266:=x#aL5][lq_tmp_x_267:=lq_anf__dLp][lq_tmp_x_262:=fldList]]}
bind 35 VV#284 : {VV#284 : [a_aLe] | [(VV#284 = lq_anf__dLp);
                                      (len([VV#284]) >= 0)]}
bind 36 VV#284 : {VV#284 : [a_aLe] | [(VV#284 = lq_anf__dLp);
                                      (len([VV#284]) >= 0)]}
bind 37 VV#251 : {VV#251 : a_aLe | [$k__252[lq_tmp_x_159:=f#aL3][lq_tmp_x_160:=xs#aL6][v:=VV#284][lq_tmp_x_277:=VV#284]]}
bind 38 lq_tmp_x_260 : {VV : a_aLe | []}
bind 39 VV#251 : {VV#251 : a_aLe | []}
bind 40 VV : {VV : a_aLe | [(VV = x#aL5)]}
bind 41 VV#291 : {VV#291 : [a_aLe] | [(VV#291 = xs#aL6);
                                      (len([VV#291]) >= 0)]}
bind 42 VV#291 : {VV#291 : [a_aLe] | [(VV#291 = xs#aL6);
                                      (len([VV#291]) >= 0)]}
bind 43 VV : {VV : a_aLe | []}
bind 44 fldList : {VV : a_aLe | []}
bind 45 VV : {VV : a_aLe | []}
bind 46 VV#251 : {VV#251 : a_aLe | [$k__252]}
bind 47 lq_tmp_x_158 : {VV#251 : a_aLe | [$k__252]}
bind 48 VV#300 : {VV#300 : GHC.Types.Bool | []}
bind 49 VV#300 : {VV#300 : GHC.Types.Bool | []}
bind 50 VV#303 : {VV#303 : [a_aLe] | [(? Set_sub([listElts([VV#303]);
                                                  listElts([xs#aL6])]));
                                      (len([VV#303]) >= 0)]}
bind 51 VV#303 : {VV#303 : [a_aLe] | [(? Set_sub([listElts([VV#303]);
                                                  listElts([xs#aL6])]));
                                      (len([VV#303]) >= 0)]}
bind 52 VV#227 : {VV#227 : a_aLe | [$k__228[lq_tmp_x_159:=f#aL3][lq_tmp_x_160:=xs#aL6][v:=VV#303]]}
bind 53 fldList : {VV : a_aLe | []}
bind 54 VV#227 : {VV#227 : a_aLe | []}
bind 55 VV#309 : {VV#309 : [a_aLe] | [(VV#309 = xs#aL6);
                                      (len([VV#309]) >= 0)]}
bind 56 VV#309 : {VV#309 : [a_aLe] | [(VV#309 = xs#aL6);
                                      (len([VV#309]) >= 0)]}
bind 57 VV : {VV : a_aLe | []}
bind 58 fldList : {VV : a_aLe | []}
bind 59 VV : {VV : a_aLe | []}
bind 60 VV#227 : {VV#227 : a_aLe | [$k__228]}
bind 61 lq_tmp_x_158 : {VV#227 : a_aLe | [$k__228]}
bind 62 VV#318 : {VV#318 : GHC.Types.Bool | []}
bind 63 VV#318 : {VV#318 : GHC.Types.Bool | []}
bind 64 VV : {VV : a_aLe | [(VV = x#aL5)]}
bind 65 VV#322 : {VV#322 : [a_aLe] | [(? Set_emp([listElts([VV#322])]));
                                      (len([VV#322]) = 0);
                                      ((? null([VV#322])) <=> true);
                                      (len([VV#322]) >= 0)]}
bind 66 VV#322 : {VV#322 : [a_aLe] | [(? Set_emp([listElts([VV#322])]));
                                      (len([VV#322]) = 0);
                                      ((? null([VV#322])) <=> true);
                                      (len([VV#322]) >= 0)]}
bind 67 VV#177 : {VV#177 : a_aLe | [$k__178[lq_tmp_x_176:=VV#322]]}
bind 68 fldList : {VV : a_aLe | []}
bind 69 VV#177 : {VV#177 : a_aLe | [$k__181[lq_tmp_x_183:=fldList][VV#180:=VV#177][lq_tmp_x_175:=fldList]]}




constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       14;
       30]
  grd true
  lhs {VV#F1 : [a_aLe] | [(listElts([VV#F1]) = Set_cup([Set_sng([x#aL5]);
                                                        listElts([lq_anf__dLp])]));
                          (len([VV#F1]) = (1 + len([lq_anf__dLp])));
                          ((? null([VV#F1])) <=> false);
                          (xsListSelector([VV#F1]) = lq_anf__dLp);
                          (xListSelector([VV#F1]) = x#aL5);
                          (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [a_aLe] | [(? Set_sub([listElts([VV#F1]);
                                      listElts([ds_dLl])]))]}
  id 1 tag [1]
  // META constraint id 1 : meas11.hs:9:28-44


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       14]
  grd true
  lhs {VV#F2 : a_aLe | [$k__252[lq_tmp_x_159:=f#aL3][lq_tmp_x_160:=xs#aL6][v:=VV#284][lq_tmp_x_277:=VV#284][VV#251:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : a_aLe | [$k__269[lq_tmp_x_266:=x#aL5][lq_tmp_x_261:=VV#284][VV#268:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [1]
  // META constraint id 2 : meas11.hs:9:32-44


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       36;
       5;
       21;
       37;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       14]
  grd true
  lhs {VV#F3 : a_aLe | [$k__252[lq_tmp_x_159:=f#aL3][lq_tmp_x_160:=xs#aL6][v:=VV#284][lq_tmp_x_277:=VV#284][VV#251:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : a_aLe | [$k__272[lq_tmp_x_274:=x#aL5][VV#271:=VV#F3][lq_tmp_x_266:=x#aL5][lq_tmp_x_261:=VV#284][VV#268:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : meas11.hs:9:32-44


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       36;
       5;
       21;
       6;
       22;
       38;
       7;
       23;
       39;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       14]
  grd true
  lhs {VV#F4 : a_aLe | []}
  rhs {VV#F4 : a_aLe | [$k__272[lq_tmp_x_274:=lq_tmp_x_260][VV#271:=VV#F4][lq_tmp_x_266:=x#aL5][VV#268:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : meas11.hs:9:32-44


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       40;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       14]
  grd true
  lhs {VV#F5 : a_aLe | [(VV#F5 = x#aL5)]}
  rhs {VV#F5 : a_aLe | [$k__269[VV#268:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]
  // META constraint id 5 : meas11.hs:9:28


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       41;
       10;
       26;
       11;
       27;
       12;
       13;
       14]
  grd true
  lhs {VV#F6 : [a_aLe] | [(VV#F6 = xs#aL6); (len([VV#F6]) >= 0)]}
  rhs {VV#F6 : [a_aLe] | [(len([VV#F6]) < len([ds_dLl]))]}
  id 6 tag [1]
  // META constraint id 6 : meas11.hs:9:43-44


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       41;
       10;
       26;
       11;
       27;
       12;
       13;
       14]
  grd true
  lhs {VV#F7 : [a_aLe] | [(VV#F7 = xs#aL6); (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [a_aLe] | [(len([VV#F7]) >= 0)]}
  id 7 tag [1]
  // META constraint id 7 : meas11.hs:9:43-44


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       42;
       11;
       27;
       43;
       12;
       13;
       14]
  grd true
  lhs {VV#F8 : a_aLe | []}
  rhs {VV#F8 : a_aLe | [$k__252[lq_tmp_x_159:=f#aL3][VV:=VV#291][VV#251:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : meas11.hs:9:43-44


constraint:
  env [0;
       1;
       2;
       18;
       50;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       13;
       14]
  grd true
  lhs {VV#F9 : [a_aLe] | [(? Set_sub([listElts([VV#F9]);
                                      listElts([xs#aL6])]));
                          (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [a_aLe] | [(? Set_sub([listElts([VV#F9]);
                                      listElts([ds_dLl])]))]}
  id 9 tag [1]
  // META constraint id 9 : meas11.hs:10:28-40


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       55;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       13;
       14]
  grd true
  lhs {VV#F10 : [a_aLe] | [(VV#F10 = xs#aL6); (len([VV#F10]) >= 0)]}
  rhs {VV#F10 : [a_aLe] | [(len([VV#F10]) < len([ds_dLl]))]}
  id 10 tag [1]
  // META constraint id 10 : meas11.hs:10:39-40


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       55;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       13;
       14]
  grd true
  lhs {VV#F11 : [a_aLe] | [(VV#F11 = xs#aL6); (len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [a_aLe] | [(len([VV#F11]) >= 0)]}
  id 11 tag [1]
  // META constraint id 11 : meas11.hs:10:39-40


constraint:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       56;
       9;
       25;
       57;
       10;
       11;
       12;
       13;
       14]
  grd true
  lhs {VV#F12 : a_aLe | []}
  rhs {VV#F12 : a_aLe | [$k__228[lq_tmp_x_159:=f#aL3][VV:=VV#309][VV#227:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : meas11.hs:10:39-40


constraint:
  env [0; 16; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F13 : [a_aLe] | [(? Set_emp([listElts([VV#F13])]));
                           (len([VV#F13]) = 0);
                           ((? null([VV#F13])) <=> true);
                           (len([VV#F13]) >= 0)]}
  rhs {VV#F13 : [a_aLe] | [(? Set_sub([listElts([VV#F13]);
                                       listElts([ds_dLl])]))]}
  id 13 tag [1]
  // META constraint id 13 : meas11.hs:7:21-22




wf:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       29;
       14]
  reft {VV#271 : a_aLe | [$k__272]}
  
  // META wf  : meas11.hs:9:30


wf:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       14]
  reft {VV#268 : a_aLe | [$k__269]}
  
  // META wf  : meas11.hs:9:30


wf:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       26;
       11;
       27;
       12;
       13;
       14]
  reft {VV#251 : a_aLe | [$k__252]}
  
  // META wf  : meas11.hs:9:32-39


wf:
  env [0;
       1;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       13;
       14]
  reft {VV#227 : a_aLe | [$k__228]}
  
  // META wf  : meas11.hs:10:28-35


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#180 : a_aLe | [$k__181]}
  
  // META wf  : meas11.hs:7:21-22


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#177 : a_aLe | [$k__178]}
  
  // META wf  : meas11.hs:7:21-22







