qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aMQ], fix##126#A0 : [a_aMQ]): (listElts([v]) = listElts([fix##126#A0])) // "meas10.hs" (line 9, column 1)
qualif Auto(v : [b_aMA]): (? Set_emp([listElts([v])])) // "meas10.hs" (line 22, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)
qualif Cup1(v : [@(0)], fix##126#Xs : [@(0)], fix##126#Ys : [@(0)]): (listElts([v]) = Set_cup([listElts([fix##126#Xs]);
                                                                                               listElts([fix##126#Ys])])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 1, column 8)
qualif Cup2(v : [@(0)], fix##126#Xs : [@(0)], fix##126#Ys : [@(0)]): (listElts([fix##126#Xs]) = Set_cup([listElts([v]);
                                                                                                         listElts([fix##126#Ys])])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 2, column 8)
qualif IsEmp(v : [@(0)]): (? Set_emp([listElts([v])])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 3, column 8)
qualif EqSet(v : [@(0)], fix##126#Xs : [@(0)]): (listElts([v]) = listElts([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 4, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aMQ], fix##126#A0 : [a_aMQ]): (listElts([v]) = listElts([fix##126#A0])) // "meas10.hs" (line 9, column 1)
qualif Auto(v : [b_aMA]): (? Set_emp([listElts([v])])) // "meas10.hs" (line 22, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)
qualif Cup1(v : [@(0)], fix##126#Xs : [@(0)], fix##126#Ys : [@(0)]): (listElts([v]) = Set_cup([listElts([fix##126#Xs]);
                                                                                               listElts([fix##126#Ys])])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 1, column 8)
qualif Cup2(v : [@(0)], fix##126#Xs : [@(0)], fix##126#Ys : [@(0)]): (listElts([fix##126#Xs]) = Set_cup([listElts([v]);
                                                                                                         listElts([fix##126#Ys])])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 2, column 8)
qualif IsEmp(v : [@(0)]): (? Set_emp([listElts([v])])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 3, column 8)
qualif EqSet(v : [@(0)], fix##126#Xs : [@(0)]): (listElts([v]) = listElts([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/tests/pos/listSet.hquals" (line 4, column 8)


cut $k__319
cut $k__322
cut $k__312
cut $k__315
cut $k__299
cut $k__309
cut $k__302
cut $k__295
cut $k__305


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant Set_emp : (func(1, [(Set_Set  @(0)); bool]))
constant Set_empty : (func(1, [int; (Set_Set  @(0))]))
constant Set_cup : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant Set_sub : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             bool]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant Set_dif : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant strLen : (func(0, [int; int]))
constant Set_cap : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant listElts : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_sng : (func(1, [@(0); (Set_Set  @(0))]))
constant Set_mem : (func(1, [@(0); (Set_Set  @(0)); bool]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant lit#foo : (Str)
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 GHC.Types.EQ#6U : {VV#144 : GHC.Types.Ordering | [(VV#144 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#145 : GHC.Types.Ordering | [(VV#145 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#146 : GHC.Types.Ordering | [(VV#146 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#170 : GHC.Types.Ordering | [(cmp([VV#170]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#171 : GHC.Types.Ordering | [(cmp([VV#171]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#172 : GHC.Types.Ordering | [(cmp([VV#172]) = GHC.Types.GT#6W)]}
bind 9 x#aMo : {VV : a_aMz | []}
bind 10 lq_tmp_x_186 : {VV : b_aMA | []}
bind 11 acc#aMk : {VV#191 : [a_aMI] | [(len([VV#191]) >= 0)]}
bind 12 ds_dNe : {VV#192 : [a_aMI] | [(len([VV#192]) >= 0)]}
bind 13 lq_anf__dNg : {lq_tmp_x_194 : [a_aMI] | [(lq_tmp_x_194 = ds_dNe);
                                                 (len([lq_tmp_x_194]) >= 0)]}
bind 14 lq_anf__dNg : {lq_tmp_x_197 : [a_aMI] | [(lq_tmp_x_197 = ds_dNe);
                                                 (len([lq_tmp_x_197]) >= 0);
                                                 (len([lq_tmp_x_197]) >= 0)]}
bind 15 lq_anf__dNg : {lq_tmp_x_197 : [a_aMI] | [(lq_tmp_x_197 = ds_dNe);
                                                 (len([lq_tmp_x_197]) >= 0);
                                                 (? Set_emp([listElts([lq_tmp_x_197])]));
                                                 (len([lq_tmp_x_197]) = 0);
                                                 ((? null([lq_tmp_x_197])) <=> true);
                                                 (lq_tmp_x_197 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (? Set_emp([listElts([lq_tmp_x_197])]));
                                                 (len([lq_tmp_x_197]) = 0);
                                                 ((? null([lq_tmp_x_197])) <=> true);
                                                 (len([lq_tmp_x_197]) >= 0)]}
bind 16 lq_anf__dNg : {lq_tmp_x_207 : [a_aMI] | [(lq_tmp_x_207 = ds_dNe);
                                                 (len([lq_tmp_x_207]) >= 0);
                                                 (len([lq_tmp_x_207]) >= 0)]}
bind 17 y#aMm : {VV : a_aMI | []}
bind 18 ys#aMn : {lq_tmp_x_217 : [a_aMI] | [(len([lq_tmp_x_217]) >= 0)]}
bind 19 lq_anf__dNg : {lq_tmp_x_207 : [a_aMI] | [(lq_tmp_x_207 = ds_dNe);
                                                 (len([lq_tmp_x_207]) >= 0);
                                                 (listElts([lq_tmp_x_207]) = Set_cup([Set_sng([y#aMm]);
                                                                                      listElts([ys#aMn])]));
                                                 (len([lq_tmp_x_207]) = (1 + len([ys#aMn])));
                                                 ((? null([lq_tmp_x_207])) <=> false);
                                                 (xsListSelector([lq_tmp_x_207]) = ys#aMn);
                                                 (xListSelector([lq_tmp_x_207]) = y#aMm);
                                                 (lq_tmp_x_207 = fix#GHC.Types.#58##35#64([y#aMm;
                                                                                           ys#aMn]));
                                                 (listElts([lq_tmp_x_207]) = Set_cup([Set_sng([y#aMm]);
                                                                                      listElts([ys#aMn])]));
                                                 (len([lq_tmp_x_207]) = (1 + len([ys#aMn])));
                                                 ((? null([lq_tmp_x_207])) <=> false);
                                                 (xsListSelector([lq_tmp_x_207]) = ys#aMn);
                                                 (xListSelector([lq_tmp_x_207]) = y#aMm);
                                                 (len([lq_tmp_x_207]) >= 0)]}
bind 20 lq_anf__dNh : {lq_tmp_x_226 : int | [(lq_tmp_x_226 ~~ lit#foo);
                                             (strLen([lq_tmp_x_226]) = 3)]}
bind 21 lq_anf__dNi : {lq_tmp_x_232 : [GHC.Types.Char] | [(lq_tmp_x_232 ~~ lq_anf__dNh);
                                                          (len([lq_tmp_x_232]) = strLen([lq_anf__dNh]));
                                                          (len([lq_tmp_x_232]) >= 0)]}
bind 22 xs#aMe : {VV#261 : [a_aMQ] | [(len([VV#261]) >= 0)]}
bind 23 acc#aMg : {VV#301 : [a_aN4] | [$k__302;
                                       (len([VV#301]) >= 0)]}
bind 24 ds_dNf : {VV#311 : [a_aN4] | [$k__312[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg];
                                      (len([VV#311]) >= 0)]}
bind 25 lq_anf__dNj : {lq_tmp_x_332 : [a_aN4] | [(lq_tmp_x_332 = ds_dNf);
                                                 (len([lq_tmp_x_332]) >= 0)]}
bind 26 lq_anf__dNj : {lq_tmp_x_335 : [a_aN4] | [(lq_tmp_x_335 = ds_dNf);
                                                 (len([lq_tmp_x_335]) >= 0);
                                                 (len([lq_tmp_x_335]) >= 0)]}
bind 27 lq_anf__dNj : {lq_tmp_x_335 : [a_aN4] | [(lq_tmp_x_335 = ds_dNf);
                                                 (len([lq_tmp_x_335]) >= 0);
                                                 (? Set_emp([listElts([lq_tmp_x_335])]));
                                                 (len([lq_tmp_x_335]) = 0);
                                                 ((? null([lq_tmp_x_335])) <=> true);
                                                 (lq_tmp_x_335 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (? Set_emp([listElts([lq_tmp_x_335])]));
                                                 (len([lq_tmp_x_335]) = 0);
                                                 ((? null([lq_tmp_x_335])) <=> true);
                                                 (len([lq_tmp_x_335]) >= 0)]}
bind 28 lq_anf__dNj : {lq_tmp_x_345 : [a_aN4] | [(lq_tmp_x_345 = ds_dNf);
                                                 (len([lq_tmp_x_345]) >= 0);
                                                 (len([lq_tmp_x_345]) >= 0)]}
bind 29 y#aMi : {VV#304 : a_aN4 | [$k__305[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][VV#311:=lq_anf__dNj][lq_tmp_x_332:=lq_anf__dNj][lq_tmp_x_345:=lq_anf__dNj]]}
bind 30 ys#aMj : {lq_tmp_x_355 : [a_aN4] | [(len([lq_tmp_x_355]) >= 0)]}
bind 31 lq_anf__dNj : {lq_tmp_x_345 : [a_aN4] | [(lq_tmp_x_345 = ds_dNf);
                                                 (len([lq_tmp_x_345]) >= 0);
                                                 (listElts([lq_tmp_x_345]) = Set_cup([Set_sng([y#aMi]);
                                                                                      listElts([ys#aMj])]));
                                                 (len([lq_tmp_x_345]) = (1 + len([ys#aMj])));
                                                 ((? null([lq_tmp_x_345])) <=> false);
                                                 (xsListSelector([lq_tmp_x_345]) = ys#aMj);
                                                 (xListSelector([lq_tmp_x_345]) = y#aMi);
                                                 (lq_tmp_x_345 = fix#GHC.Types.#58##35#64([y#aMi;
                                                                                           ys#aMj]));
                                                 (listElts([lq_tmp_x_345]) = Set_cup([Set_sng([y#aMi]);
                                                                                      listElts([ys#aMj])]));
                                                 (len([lq_tmp_x_345]) = (1 + len([ys#aMj])));
                                                 ((? null([lq_tmp_x_345])) <=> false);
                                                 (xsListSelector([lq_tmp_x_345]) = ys#aMj);
                                                 (xListSelector([lq_tmp_x_345]) = y#aMi);
                                                 (len([lq_tmp_x_345]) >= 0)]}
bind 32 lq_tmp_x_378 : {VV : a_aN4 | []}
bind 33 lq_anf__dNk : {lq_tmp_x_367 : [a_aN4] | [(listElts([lq_tmp_x_367]) = Set_cup([Set_sng([y#aMi]);
                                                                                      listElts([acc#aMg])]));
                                                 (len([lq_tmp_x_367]) = (1 + len([acc#aMg])));
                                                 ((? null([lq_tmp_x_367])) <=> false);
                                                 (xsListSelector([lq_tmp_x_367]) = acc#aMg);
                                                 (xListSelector([lq_tmp_x_367]) = y#aMi);
                                                 (len([lq_tmp_x_367]) >= 0)]}
bind 34 lq_tmp_x_416 : {VV : a_aMQ | []}
bind 35 lq_anf__dNl : {lq_tmp_x_409 : [a_aMQ] | [(? Set_emp([listElts([lq_tmp_x_409])]));
                                                 (len([lq_tmp_x_409]) = 0);
                                                 ((? null([lq_tmp_x_409])) <=> true);
                                                 (len([lq_tmp_x_409]) >= 0)]}
bind 36 VV#437 : {VV#437 : [a_aMQ] | [$k__292[VV#291:=VV#437][lq_tmp_x_262:=lq_anf__dNl][lq_tmp_x_273:=xs#aMe][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_428:=xs#aMe][lq_tmp_x_424:=VV#437];
                                      (len([VV#437]) >= 0)]}
bind 37 VV#437 : {VV#437 : [a_aMQ] | [$k__292[VV#291:=VV#437][lq_tmp_x_262:=lq_anf__dNl][lq_tmp_x_273:=xs#aMe][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_428:=xs#aMe][lq_tmp_x_424:=VV#437];
                                      (len([VV#437]) >= 0)]}
bind 38 VV#429 : {VV#429 : a_aMQ | [$k__430[lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_428:=xs#aMe][lq_tmp_x_424:=VV#437];
                                    $k__285[VV#291:=VV#437][lq_tmp_x_262:=lq_anf__dNl][lq_tmp_x_273:=xs#aMe][VV#284:=VV#429][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_428:=xs#aMe][lq_tmp_x_424:=VV#437]]}
bind 39 fldList : {VV : a_aMQ | []}
bind 40 VV#429 : {VV#429 : a_aMQ | [$k__289[lq_tmp_x_287:=fldList][lq_tmp_x_262:=lq_anf__dNl][lq_tmp_x_273:=xs#aMe][VV#288:=VV#429][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_428:=xs#aMe][lq_tmp_x_423:=fldList]]}
bind 41 VV#443 : {VV#443 : [a_aMQ] | [(VV#443 = xs#aMe);
                                      (len([VV#443]) >= 0)]}
bind 42 VV#443 : {VV#443 : [a_aMQ] | [(VV#443 = xs#aMe);
                                      (len([VV#443]) >= 0)]}
bind 43 VV : {VV : a_aMQ | []}
bind 44 lq_tmp_x_421 : {VV : a_aMQ | []}
bind 45 VV : {VV : a_aMQ | []}
bind 46 VV#449 : {VV#449 : [a_aMQ] | [(VV#449 = lq_anf__dNl);
                                      (len([VV#449]) >= 0)]}
bind 47 VV#449 : {VV#449 : [a_aMQ] | [(VV#449 = lq_anf__dNl);
                                      (len([VV#449]) >= 0)]}
bind 48 VV#410 : {VV#410 : a_aMQ | [$k__411[lq_tmp_x_409:=VV#449][lq_tmp_x_433:=VV#449]]}
bind 49 lq_tmp_x_419 : {VV : a_aMQ | []}
bind 50 VV#410 : {VV#410 : a_aMQ | [$k__414[lq_tmp_x_416:=lq_tmp_x_419][VV#413:=VV#410][lq_tmp_x_408:=lq_tmp_x_419][lq_tmp_x_432:=lq_tmp_x_419]]}
bind 51 VV#456 : {VV#456 : [a_aN4] | [$k__271[VV#270:=VV#456];
                                      (len([VV#456]) >= 0)]}
bind 52 VV#456 : {VV#456 : [a_aN4] | [$k__271[VV#270:=VV#456];
                                      (len([VV#456]) >= 0)]}
bind 53 VV#263 : {VV#263 : a_aN4 | [$k__264[VV#270:=VV#456]]}
bind 54 lq_tmp_x_397 : {VV : a_aN4 | []}
bind 55 VV#267 : {VV#267 : a_aN4 | [$k__268[lq_tmp_x_266:=lq_tmp_x_397]]}
bind 56 lq_tmp_x_262 : {VV#270 : [a_aN4] | [$k__271;
                                            (len([VV#270]) >= 0)]}
bind 57 VV#464 : {VV#464 : [a_aN4] | [$k__282[VV#281:=VV#464];
                                      (len([VV#464]) >= 0)]}
bind 58 VV#464 : {VV#464 : [a_aN4] | [$k__282[VV#281:=VV#464];
                                      (len([VV#464]) >= 0)]}
bind 59 VV#274 : {VV#274 : a_aN4 | [$k__275[VV#281:=VV#464]]}
bind 60 lq_tmp_x_399 : {VV : a_aN4 | []}
bind 61 VV#278 : {VV#278 : a_aN4 | [$k__279[lq_tmp_x_277:=lq_tmp_x_399]]}
bind 62 lq_tmp_x_273 : {VV#281 : [a_aN4] | [$k__282;
                                            (len([VV#281]) >= 0)]}
bind 63 VV#471 : {VV#471 : [a_aN4] | [$k__322[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][VV#321:=VV#471][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_402:=VV#471];
                                      (len([VV#471]) >= 0)]}
bind 64 VV#471 : {VV#471 : [a_aN4] | [$k__322[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][VV#321:=VV#471][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_402:=VV#471];
                                      (len([VV#471]) >= 0)]}
bind 65 VV#314 : {VV#314 : a_aN4 | [$k__315[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][VV#321:=VV#471][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_402:=VV#471]]}
bind 66 lq_tmp_x_287 : {VV : a_aN4 | []}
bind 67 VV#318 : {VV#318 : a_aN4 | [$k__319[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][lq_tmp_x_317:=lq_tmp_x_287][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_401:=lq_tmp_x_287]]}
bind 68 VV#477 : {VV#477 : [a_aN4] | [$k__322[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][VV#321:=VV#477];
                                      (len([VV#477]) >= 0)]}
bind 69 VV#477 : {VV#477 : [a_aN4] | [$k__322[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][VV#321:=VV#477];
                                      (len([VV#477]) >= 0)]}
bind 70 VV#314 : {VV#314 : a_aN4 | [$k__315[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][VV#321:=VV#477]]}
bind 71 lq_tmp_x_317 : {VV : a_aN4 | []}
bind 72 VV#318 : {VV#318 : a_aN4 | [$k__319[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][lq_tmp_x_317:=lq_tmp_x_317]]}
bind 73 VV#483 : {VV#483 : [a_aN4] | [(VV#483 = ys#aMj);
                                      (len([VV#483]) >= 0)]}
bind 74 VV#483 : {VV#483 : [a_aN4] | [(VV#483 = ys#aMj);
                                      (len([VV#483]) >= 0)]}
bind 75 VV#304 : {VV#304 : a_aN4 | [$k__305[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][VV#311:=lq_anf__dNj][lq_tmp_x_332:=lq_anf__dNj][lq_tmp_x_345:=lq_anf__dNj][lq_tmp_x_352:=y#aMi][lq_tmp_x_355:=VV#483][lq_tmp_x_396:=VV#483];
                                    $k__309[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][lq_tmp_x_307:=y#aMi][lq_tmp_x_331:=y#aMi][lq_tmp_x_344:=y#aMi][VV#308:=VV#304][lq_tmp_x_352:=y#aMi][lq_tmp_x_355:=VV#483][lq_tmp_x_396:=VV#483]]}
bind 76 lq_tmp_x_307 : {VV : a_aN4 | []}
bind 77 VV#304 : {VV#304 : a_aN4 | [$k__309[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][lq_tmp_x_307:=lq_tmp_x_307][lq_tmp_x_331:=lq_tmp_x_307][lq_tmp_x_344:=lq_tmp_x_307][VV#308:=VV#304][lq_tmp_x_352:=y#aMi][lq_tmp_x_354:=lq_tmp_x_307][lq_tmp_x_395:=lq_tmp_x_307]]}
bind 78 VV#489 : {VV#489 : [a_aN4] | [(VV#489 = lq_anf__dNk);
                                      (len([VV#489]) >= 0)]}
bind 79 VV#489 : {VV#489 : [a_aN4] | [(VV#489 = lq_anf__dNk);
                                      (len([VV#489]) >= 0)]}
bind 80 VV#372 : {VV#372 : a_aN4 | [$k__373[lq_tmp_x_370:=y#aMi][lq_tmp_x_371:=acc#aMg][lq_tmp_x_367:=VV#489][lq_tmp_x_394:=VV#489]]}
bind 81 lq_tmp_x_297 : {VV : a_aN4 | []}
bind 82 VV#372 : {VV#372 : a_aN4 | [$k__376[lq_tmp_x_378:=lq_tmp_x_297][VV#375:=VV#372][lq_tmp_x_370:=y#aMi][lq_tmp_x_371:=acc#aMg][lq_tmp_x_366:=lq_tmp_x_297][lq_tmp_x_393:=lq_tmp_x_297]]}
bind 83 VV#495 : {VV#495 : [a_aN4] | [(VV#495 = acc#aMg);
                                      (len([VV#495]) >= 0)]}
bind 84 VV#495 : {VV#495 : [a_aN4] | [(VV#495 = acc#aMg);
                                      (len([VV#495]) >= 0)]}
bind 85 VV#294 : {VV#294 : a_aN4 | [$k__295[VV#301:=VV#495][lq_tmp_x_381:=VV#495]]}
bind 86 lq_tmp_x_364 : {VV : a_aN4 | []}
bind 87 VV#298 : {VV#298 : a_aN4 | [$k__299[lq_tmp_x_297:=lq_tmp_x_364][lq_tmp_x_380:=lq_tmp_x_364]]}
bind 88 VV#304 : {VV#304 : a_aN4 | [(VV#304 = y#aMi)]}
bind 89 VV#502 : {VV#502 : [a_aN4] | [(VV#502 = acc#aMg);
                                      (len([VV#502]) >= 0)]}
bind 90 VV#502 : {VV#502 : [a_aN4] | [(VV#502 = acc#aMg);
                                      (len([VV#502]) >= 0)]}
bind 91 VV#294 : {VV#294 : a_aN4 | [$k__295[VV#301:=VV#502][lq_tmp_x_343:=VV#502]]}
bind 92 lq_tmp_x_317 : {VV : a_aN4 | []}
bind 93 VV#298 : {VV#298 : a_aN4 | [$k__299[lq_tmp_x_297:=lq_tmp_x_317][lq_tmp_x_342:=lq_tmp_x_317]]}
bind 94 VV#508 : {VV#508 : [a_aMI] | [$k__251[VV#250:=VV#508][lq_tmp_x_242:=lq_anf__dNi][lq_tmp_x_254:=VV#508];
                                      (len([VV#508]) >= 0)]}
bind 95 VV#508 : {VV#508 : [a_aMI] | [$k__251[VV#250:=VV#508][lq_tmp_x_242:=lq_anf__dNi][lq_tmp_x_254:=VV#508];
                                      (len([VV#508]) >= 0)]}
bind 96 VV#243 : {VV#243 : a_aMI | [$k__244[VV#250:=VV#508][lq_tmp_x_242:=lq_anf__dNi][lq_tmp_x_254:=VV#508]]}
bind 97 fldList : {VV : a_aMI | []}
bind 98 VV#247 : {VV#247 : a_aMI | [$k__248[lq_tmp_x_246:=fldList][lq_tmp_x_242:=lq_anf__dNi][lq_tmp_x_253:=fldList]]}
bind 99 VV#514 : {VV#514 : [GHC.Types.Char] | [(VV#514 = lq_anf__dNi);
                                               (len([VV#514]) >= 0)]}
bind 100 VV#514 : {VV#514 : [GHC.Types.Char] | [(VV#514 = lq_anf__dNi);
                                                (len([VV#514]) >= 0)]}
bind 101 VV#517 : {VV#517 : GHC.Types.Char | []}
bind 102 VV#517 : {VV#517 : GHC.Types.Char | []}
bind 103 lq_tmp_x_238 : {VV#520 : GHC.Types.Char | []}
bind 104 VV#521 : {VV#521 : GHC.Types.Char | []}
bind 105 VV#521 : {VV#521 : GHC.Types.Char | []}
bind 106 VV#524 : {VV#524 : int | [(VV#524 = lq_anf__dNh)]}
bind 107 VV#524 : {VV#524 : int | [(VV#524 = lq_anf__dNh)]}
bind 108 VV#527 : {VV#527 : [a_aMI] | [(VV#527 = acc#aMk);
                                       (len([VV#527]) >= 0)]}
bind 109 VV#527 : {VV#527 : [a_aMI] | [(VV#527 = acc#aMk);
                                       (len([VV#527]) >= 0)]}
bind 110 VV : {VV : a_aMI | []}
bind 111 fldList : {VV : a_aMI | []}
bind 112 VV : {VV : a_aMI | []}
bind 113 VV#533 : {VV#533 : [b_aMA] | [(? Set_emp([listElts([VV#533])]));
                                       (len([VV#533]) = 0);
                                       ((? null([VV#533])) <=> true);
                                       (len([VV#533]) >= 0)]}
bind 114 VV#533 : {VV#533 : [b_aMA] | [(? Set_emp([listElts([VV#533])]));
                                       (len([VV#533]) = 0);
                                       ((? null([VV#533])) <=> true);
                                       (len([VV#533]) >= 0)]}
bind 115 VV#180 : {VV#180 : b_aMA | [$k__181[lq_tmp_x_179:=VV#533]]}
bind 116 fldList : {VV : b_aMA | []}
bind 117 VV#180 : {VV#180 : b_aMA | [$k__184[lq_tmp_x_186:=fldList][VV#183:=VV#180][lq_tmp_x_178:=fldList]]}
bind 118 VV#301 : {VV#301 : [a_aN4] | [$k__302;
                                       (len([VV#301]) >= 0)]}
bind 119 lq_tmp_x_297 : {VV : a_aN4 | []}
bind 120 acc#aMg : {VV#301 : [a_aN4] | [$k__302;
                                        (len([VV#301]) >= 0)]}
bind 121 VV#311 : {VV#311 : [a_aN4] | [$k__312;
                                       (len([VV#311]) >= 0)]}
bind 122 lq_tmp_x_307 : {VV : a_aN4 | []}
bind 123 ds_dNf : {VV#311 : [a_aN4] | [$k__312;
                                       (len([VV#311]) >= 0)]}
bind 124 VV#321 : {VV#321 : [a_aN4] | [$k__322;
                                       (len([VV#321]) >= 0)]}
bind 125 lq_tmp_x_317 : {VV : a_aN4 | []}
bind 126 VV#270 : {VV#270 : [a_aN4] | [$k__271;
                                       (len([VV#270]) >= 0)]}
bind 127 lq_tmp_x_266 : {VV : a_aN4 | []}
bind 128 lq_tmp_x_262 : {VV#270 : [a_aN4] | [$k__271;
                                             (len([VV#270]) >= 0)]}
bind 129 VV#281 : {VV#281 : [a_aN4] | [$k__282;
                                       (len([VV#281]) >= 0)]}
bind 130 lq_tmp_x_277 : {VV : a_aN4 | []}
bind 131 lq_tmp_x_273 : {VV#281 : [a_aN4] | [$k__282;
                                             (len([VV#281]) >= 0)]}
bind 132 VV#291 : {VV#291 : [a_aN4] | [$k__292;
                                       (len([VV#291]) >= 0)]}
bind 133 lq_tmp_x_287 : {VV : a_aN4 | []}
bind 134 VV#250 : {VV#250 : [a_aMI] | [$k__251;
                                       (len([VV#250]) >= 0)]}
bind 135 lq_tmp_x_246 : {VV : a_aMI | []}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 56; 62; 63]
  grd true
  lhs {VV#F16 : [a_aN4] | [$k__322[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][VV#321:=VV#F16][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_402:=VV#F16][VV#471:=VV#F16][VV#F:=VV#F16];
                           (len([VV#F16]) >= 0)]}
  rhs {VV#F16 : [a_aN4] | [$k__292[VV#291:=VV#F16][VV#471:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [3]
  // META constraint id 16 : meas10.hs:9:1-5


constraint:
  env [0;
       1;
       2;
       3;
       4;
       84;
       5;
       6;
       22;
       86;
       7;
       23;
       87;
       8;
       24;
       25;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F32 : a_aN4 | [$k__299[lq_tmp_x_297:=lq_tmp_x_364][lq_tmp_x_380:=lq_tmp_x_364][VV#298:=VV#F32][VV#F:=VV#F32]]}
  rhs {VV#F32 : a_aN4 | [$k__376[lq_tmp_x_378:=lq_tmp_x_364][VV#375:=VV#F32][lq_tmp_x_370:=y#aMi][VV#372:=VV#F32][VV#F:=VV#F32]]}
  id 32 tag [3]
  // META constraint id 32 : meas10.hs:12:32-34


constraint:
  env [0; 1; 2; 3; 35; 4; 36; 5; 6; 22; 7; 8]
  grd true
  lhs {VV#F1 : [a_aMQ] | [$k__292[VV#291:=VV#F1][lq_tmp_x_262:=lq_anf__dNl][lq_tmp_x_273:=xs#aMe][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_428:=xs#aMe][lq_tmp_x_424:=VV#F1][VV#437:=VV#F1][VV#F:=VV#F1];
                          (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [a_aMQ] | [(listElts([VV#F1]) = listElts([xs#aMe]))]}
  id 1 tag [3]
  // META constraint id 1 : meas10.hs:9:12-19


constraint:
  env [0; 64; 1; 65; 2; 3; 4; 5; 6; 22; 7; 8; 56; 62]
  grd true
  lhs {VV#F17 : a_aN4 | [$k__315[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][VV#321:=VV#471][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_402:=VV#471][VV#314:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : a_aN4 | [$k__285[VV#291:=VV#471][VV#284:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [3]
  // META constraint id 17 : meas10.hs:9:1-5


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 88; 25; 28; 29; 30; 31]
  grd true
  lhs {VV#F33 : a_aN4 | [(VV#F33 = y#aMi)]}
  rhs {VV#F33 : a_aN4 | [$k__373[VV#372:=VV#F33][VV#F:=VV#F33]]}
  id 33 tag [3]
  // META constraint id 33 : meas10.hs:12:30


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 41]
  grd true
  lhs {VV#F2 : [a_aMQ] | [(VV#F2 = xs#aMe); (len([VV#F2]) >= 0)]}
  rhs {VV#F2 : [a_aMQ] | [$k__282[VV#281:=VV#F2][lq_tmp_x_262:=lq_anf__dNl][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_422:=VV#F2][VV#443:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : meas10.hs:9:18-19


constraint:
  env [0; 64; 1; 2; 66; 3; 67; 4; 5; 6; 22; 7; 8; 56; 62]
  grd true
  lhs {VV#F18 : a_aN4 | [$k__319[acc#aMg:=lq_tmp_x_262][ds_dNf:=lq_tmp_x_273][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_325:=lq_tmp_x_273][lq_tmp_x_317:=lq_tmp_x_287][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_327:=lq_tmp_x_273][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_406:=lq_tmp_x_273][lq_tmp_x_401:=lq_tmp_x_287][VV#318:=VV#F18][VV#F:=VV#F18]]}
  rhs {VV#F18 : a_aN4 | [$k__289[VV#288:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [3]
  // META constraint id 18 : meas10.hs:9:1-5


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 25; 89; 26; 27]
  grd true
  lhs {VV#F34 : [a_aN4] | [(VV#F34 = acc#aMg); (len([VV#F34]) >= 0)]}
  rhs {VV#F34 : [a_aN4] | [$k__322[acc#aMg:=acc#aMg][ds_dNf:=ds_dNf][lq_tmp_x_324:=acc#aMg][lq_tmp_x_325:=ds_dNf][lq_tmp_x_326:=acc#aMg][lq_tmp_x_327:=ds_dNf][VV#321:=VV#F34][VV#502:=VV#F34][VV#F:=VV#F34]]}
  id 34 tag [3]
  // META constraint id 34 : meas10.hs:11:26-28


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 42; 43]
  grd true
  lhs {VV#F3 : a_aMQ | []}
  rhs {VV#F3 : a_aMQ | [$k__430[lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_422:=VV#443][VV#429:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : meas10.hs:9:18-19


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       68;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F19 : [a_aN4] | [$k__322[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][VV#321:=VV#F19][VV#477:=VV#F19][VV#F:=VV#F19];
                           (len([VV#F19]) >= 0)]}
  rhs {VV#F19 : [a_aN4] | [$k__322[acc#aMg:=acc#aMg][ds_dNf:=ds_dNf][lq_tmp_x_324:=acc#aMg][lq_tmp_x_325:=ds_dNf][lq_tmp_x_326:=acc#aMg][lq_tmp_x_327:=ds_dNf][VV#321:=VV#F19][VV#477:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [3]
  // META constraint id 19 : meas10.hs:12:26-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 25; 26; 90; 27; 91]
  grd true
  lhs {VV#F35 : a_aN4 | [$k__295[VV#301:=VV#502][lq_tmp_x_343:=VV#502][VV#294:=VV#F35][VV#F:=VV#F35]]}
  rhs {VV#F35 : a_aN4 | [$k__315[acc#aMg:=acc#aMg][ds_dNf:=ds_dNf][lq_tmp_x_324:=acc#aMg][lq_tmp_x_325:=ds_dNf][lq_tmp_x_326:=acc#aMg][lq_tmp_x_327:=ds_dNf][VV#321:=VV#502][VV#314:=VV#F35][VV#F:=VV#F35]]}
  id 35 tag [3]
  // META constraint id 35 : meas10.hs:11:26-28


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 42; 43]
  grd true
  lhs {VV#F4 : a_aMQ | []}
  rhs {VV#F4 : a_aMQ | [$k__275[VV#281:=VV#443][lq_tmp_x_262:=lq_anf__dNl][VV#274:=VV#F4][lq_tmp_x_427:=lq_anf__dNl][lq_tmp_x_422:=VV#443][VV#429:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : meas10.hs:9:18-19


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       69;
       6;
       22;
       70;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F20 : a_aN4 | [$k__315[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][VV#321:=VV#477][VV#314:=VV#F20][VV#F:=VV#F20]]}
  rhs {VV#F20 : a_aN4 | [$k__315[acc#aMg:=acc#aMg][ds_dNf:=ds_dNf][lq_tmp_x_324:=acc#aMg][lq_tmp_x_325:=ds_dNf][lq_tmp_x_326:=acc#aMg][lq_tmp_x_327:=ds_dNf][VV#321:=VV#477][VV#314:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [3]
  // META constraint id 20 : meas10.hs:12:26-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 25; 26; 90; 27; 92; 93]
  grd true
  lhs {VV#F36 : a_aN4 | [$k__299[lq_tmp_x_297:=lq_tmp_x_317][lq_tmp_x_342:=lq_tmp_x_317][VV#298:=VV#F36][VV#F:=VV#F36]]}
  rhs {VV#F36 : a_aN4 | [$k__319[acc#aMg:=acc#aMg][ds_dNf:=ds_dNf][lq_tmp_x_324:=acc#aMg][lq_tmp_x_325:=ds_dNf][lq_tmp_x_326:=acc#aMg][lq_tmp_x_327:=ds_dNf][VV#318:=VV#F36][VV#F:=VV#F36]]}
  id 36 tag [3]
  // META constraint id 36 : meas10.hs:11:26-28


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 42; 44; 45]
  grd true
  lhs {VV#F5 : a_aMQ | []}
  rhs {VV#F5 : a_aMQ | [$k__279[lq_tmp_x_277:=lq_tmp_x_421][lq_tmp_x_262:=lq_anf__dNl][VV#278:=VV#F5][lq_tmp_x_427:=lq_anf__dNl][VV#429:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : meas10.hs:9:18-19


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       69;
       6;
       22;
       7;
       23;
       71;
       8;
       24;
       72;
       25;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F21 : a_aN4 | [$k__319[acc#aMg:=lq_anf__dNk][ds_dNf:=ys#aMj][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_325:=ys#aMj][lq_tmp_x_326:=lq_anf__dNk][lq_tmp_x_327:=ys#aMj][lq_tmp_x_317:=lq_tmp_x_317][VV#318:=VV#F21][VV#F:=VV#F21]]}
  rhs {VV#F21 : a_aN4 | [$k__319[acc#aMg:=acc#aMg][ds_dNf:=ds_dNf][lq_tmp_x_324:=acc#aMg][lq_tmp_x_325:=ds_dNf][lq_tmp_x_326:=acc#aMg][lq_tmp_x_327:=ds_dNf][VV#318:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [3]
  // META constraint id 21 : meas10.hs:12:26-38


constraint:
  env [0; 1; 113; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F37 : [b_aMA] | [(? Set_emp([listElts([VV#F37])]));
                           (len([VV#F37]) = 0);
                           ((? null([VV#F37])) <=> true);
                           (len([VV#F37]) >= 0)]}
  rhs {VV#F37 : [b_aMA] | [(? Set_emp([listElts([VV#F37])]))]}
  id 37 tag [1]
  // META constraint id 37 : meas10.hs:22:14-15


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 46]
  grd true
  lhs {VV#F6 : [a_aMQ] | [(VV#F6 = lq_anf__dNl);
                          (len([VV#F6]) >= 0)]}
  rhs {VV#F6 : [a_aMQ] | [$k__271[VV#270:=VV#F6][lq_tmp_x_420:=VV#F6][VV#449:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : meas10.hs:9:15-16


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       73;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F22 : [a_aN4] | [(VV#F22 = ys#aMj); (len([VV#F22]) >= 0)]}
  rhs {VV#F22 : [a_aN4] | [$k__312[acc#aMg:=lq_anf__dNk][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_326:=lq_anf__dNk][VV#311:=VV#F22][VV#483:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [3]
  // META constraint id 22 : meas10.hs:12:37-38


constraint:
  env [0; 48; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 47]
  grd true
  lhs {VV#F7 : a_aMQ | [$k__411[lq_tmp_x_409:=VV#449][lq_tmp_x_433:=VV#449][VV#410:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : a_aMQ | [$k__430[lq_tmp_x_420:=VV#449][VV#429:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : meas10.hs:9:15-16


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       73;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F23 : [a_aN4] | [(VV#F23 = ys#aMj); (len([VV#F23]) >= 0)]}
  rhs {VV#F23 : [a_aN4] | [(len([VV#F23]) < len([ds_dNf]))]}
  id 23 tag [3]
  // META constraint id 23 : meas10.hs:12:37-38


constraint:
  env [0; 48; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8; 47]
  grd true
  lhs {VV#F8 : a_aMQ | [$k__411[lq_tmp_x_409:=VV#449][lq_tmp_x_433:=VV#449][VV#410:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : a_aMQ | [$k__264[VV#270:=VV#449][VV#263:=VV#F8][lq_tmp_x_420:=VV#449][VV#429:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : meas10.hs:9:15-16


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       73;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F24 : [a_aN4] | [(VV#F24 = ys#aMj); (len([VV#F24]) >= 0)]}
  rhs {VV#F24 : [a_aN4] | [(len([VV#F24]) >= 0)]}
  id 24 tag [3]
  // META constraint id 24 : meas10.hs:12:37-38


constraint:
  env [0; 1; 49; 2; 50; 3; 35; 4; 5; 6; 22; 7; 8; 47]
  grd true
  lhs {VV#F9 : a_aMQ | [$k__414[lq_tmp_x_416:=lq_tmp_x_419][VV#413:=VV#F9][lq_tmp_x_408:=lq_tmp_x_419][lq_tmp_x_432:=lq_tmp_x_419][VV#410:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : a_aMQ | [$k__268[lq_tmp_x_266:=lq_tmp_x_419][VV#267:=VV#F9][VV#429:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : meas10.hs:9:15-16


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       74;
       75;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F25 : a_aN4 | [$k__305[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][VV#311:=lq_anf__dNj][lq_tmp_x_332:=lq_anf__dNj][lq_tmp_x_345:=lq_anf__dNj][lq_tmp_x_352:=y#aMi][lq_tmp_x_355:=VV#483][lq_tmp_x_396:=VV#483][VV#304:=VV#F25][VV#F:=VV#F25];
                         $k__309[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][lq_tmp_x_307:=y#aMi][lq_tmp_x_331:=y#aMi][lq_tmp_x_344:=y#aMi][VV#308:=VV#F25][lq_tmp_x_352:=y#aMi][lq_tmp_x_355:=VV#483][lq_tmp_x_396:=VV#483][VV#304:=VV#F25][VV#F:=VV#F25]]}
  rhs {VV#F25 : a_aN4 | [$k__305[acc#aMg:=lq_anf__dNk][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_326:=lq_anf__dNk][VV#311:=VV#483][VV#304:=VV#F25][VV#F:=VV#F25]]}
  id 25 tag [3]
  // META constraint id 25 : meas10.hs:12:37-38


constraint:
  env [0; 1; 2; 3; 51; 4; 5; 6; 22; 7; 8]
  grd true
  lhs {VV#F10 : [a_aN4] | [$k__271[VV#270:=VV#F10][VV#456:=VV#F10][VV#F:=VV#F10];
                           (len([VV#F10]) >= 0)]}
  rhs {VV#F10 : [a_aN4] | [$k__302[VV#301:=VV#F10][lq_tmp_x_398:=VV#F10][VV#456:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : meas10.hs:9:1-5


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       74;
       28;
       76;
       29;
       77;
       30;
       31]
  grd true
  lhs {VV#F26 : a_aN4 | [$k__309[acc#aMg:=acc#aMg][lq_tmp_x_324:=acc#aMg][lq_tmp_x_326:=acc#aMg][lq_tmp_x_307:=lq_tmp_x_307][lq_tmp_x_331:=lq_tmp_x_307][lq_tmp_x_344:=lq_tmp_x_307][VV#308:=VV#F26][lq_tmp_x_352:=y#aMi][lq_tmp_x_354:=lq_tmp_x_307][lq_tmp_x_395:=lq_tmp_x_307][VV#304:=VV#F26][VV#F:=VV#F26]]}
  rhs {VV#F26 : a_aN4 | [$k__309[acc#aMg:=lq_anf__dNk][lq_tmp_x_324:=lq_anf__dNk][lq_tmp_x_326:=lq_anf__dNk][VV#308:=VV#F26][VV#F:=VV#F26]]}
  id 26 tag [3]
  // META constraint id 26 : meas10.hs:12:37-38


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 53; 6; 22; 7; 8]
  grd true
  lhs {VV#F11 : a_aN4 | [$k__264[VV#270:=VV#456][VV#263:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : a_aN4 | [$k__295[VV#301:=VV#456][lq_tmp_x_398:=VV#456][VV#294:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : meas10.hs:9:1-5


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       78;
       31]
  grd true
  lhs {VV#F27 : [a_aN4] | [(VV#F27 = lq_anf__dNk);
                           (len([VV#F27]) >= 0)]}
  rhs {VV#F27 : [a_aN4] | [$k__302[VV#301:=VV#F27][VV#489:=VV#F27][VV#F:=VV#F27]]}
  id 27 tag [3]
  // META constraint id 27 : meas10.hs:12:30-34


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 22; 54; 7; 55; 8]
  grd true
  lhs {VV#F12 : a_aN4 | [$k__268[lq_tmp_x_266:=lq_tmp_x_397][VV#267:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : a_aN4 | [$k__299[lq_tmp_x_297:=lq_tmp_x_397][VV#298:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : meas10.hs:9:1-5


constraint:
  env [0;
       80;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       31;
       79]
  grd true
  lhs {VV#F28 : a_aN4 | [$k__373[lq_tmp_x_370:=y#aMi][lq_tmp_x_371:=acc#aMg][lq_tmp_x_367:=VV#489][lq_tmp_x_394:=VV#489][VV#372:=VV#F28][VV#F:=VV#F28]]}
  rhs {VV#F28 : a_aN4 | [$k__295[VV#301:=VV#489][VV#294:=VV#F28][VV#F:=VV#F28]]}
  id 28 tag [3]
  // META constraint id 28 : meas10.hs:12:30-34


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 56; 57]
  grd true
  lhs {VV#F13 : [a_aN4] | [$k__282[VV#281:=VV#F13][VV#464:=VV#F13][VV#F:=VV#F13];
                           (len([VV#F13]) >= 0)]}
  rhs {VV#F13 : [a_aN4] | [$k__312[acc#aMg:=lq_tmp_x_262][lq_tmp_x_324:=lq_tmp_x_262][VV#311:=VV#F13][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_400:=VV#F13][VV#464:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : meas10.hs:9:1-5


constraint:
  env [0;
       1;
       33;
       81;
       2;
       82;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       31;
       79]
  grd true
  lhs {VV#F29 : a_aN4 | [$k__376[lq_tmp_x_378:=lq_tmp_x_297][VV#375:=VV#F29][lq_tmp_x_370:=y#aMi][lq_tmp_x_371:=acc#aMg][lq_tmp_x_366:=lq_tmp_x_297][lq_tmp_x_393:=lq_tmp_x_297][VV#372:=VV#F29][VV#F:=VV#F29]]}
  rhs {VV#F29 : a_aN4 | [$k__299[VV#298:=VV#F29][VV#F:=VV#F29]]}
  id 29 tag [3]
  // META constraint id 29 : meas10.hs:12:30-34


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 56; 58; 59]
  grd true
  lhs {VV#F14 : a_aN4 | [$k__275[VV#281:=VV#464][VV#274:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : a_aN4 | [$k__305[acc#aMg:=lq_tmp_x_262][lq_tmp_x_324:=lq_tmp_x_262][VV#311:=VV#464][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_405:=lq_tmp_x_262][lq_tmp_x_400:=VV#464][VV#304:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [3]
  // META constraint id 14 : meas10.hs:9:1-5


constraint:
  env [0;
       1;
       2;
       3;
       4;
       84;
       5;
       85;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F30 : a_aN4 | [$k__295[VV#301:=VV#495][lq_tmp_x_381:=VV#495][VV#294:=VV#F30][VV#F:=VV#F30]]}
  rhs {VV#F30 : a_aN4 | [$k__373[lq_tmp_x_370:=y#aMi][lq_tmp_x_365:=VV#495][VV#372:=VV#F30][VV#F:=VV#F30]]}
  id 30 tag [3]
  // META constraint id 30 : meas10.hs:12:32-34


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 56; 58; 60; 61]
  grd true
  lhs {VV#F15 : a_aN4 | [$k__279[lq_tmp_x_277:=lq_tmp_x_399][VV#278:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : a_aN4 | [$k__309[acc#aMg:=lq_tmp_x_262][lq_tmp_x_324:=lq_tmp_x_262][lq_tmp_x_307:=lq_tmp_x_399][lq_tmp_x_326:=lq_tmp_x_262][lq_tmp_x_405:=lq_tmp_x_262][VV#308:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [3]
  // META constraint id 15 : meas10.hs:9:1-5


constraint:
  env [0;
       1;
       2;
       3;
       4;
       84;
       5;
       85;
       6;
       22;
       7;
       23;
       8;
       24;
       25;
       28;
       29;
       30;
       31]
  grd true
  lhs {VV#F31 : a_aN4 | [$k__295[VV#301:=VV#495][lq_tmp_x_381:=VV#495][VV#294:=VV#F31][VV#F:=VV#F31]]}
  rhs {VV#F31 : a_aN4 | [$k__376[lq_tmp_x_378:=y#aMi][VV#375:=VV#F31][lq_tmp_x_370:=y#aMi][lq_tmp_x_365:=VV#495][VV#372:=VV#F31][VV#F:=VV#F31]]}
  id 31 tag [3]
  // META constraint id 31 : meas10.hs:12:32-34




wf:
  env [0; 1; 2; 3; 35; 4; 5; 6; 22; 7; 8]
  reft {VV#429 : a_aMQ | [$k__430]}
  
  // META wf  : meas10.hs:9:12-13


wf:
  env [0; 1; 2; 34; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#413 : a_aMQ | [$k__414]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#410 : a_aMQ | [$k__411]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 32; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 25; 28; 29; 30; 31]
  reft {VV#375 : a_aN4 | [$k__376]}
  
  // META wf  : meas10.hs:12:31


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 25; 28; 29; 30; 31]
  reft {VV#372 : a_aN4 | [$k__373]}
  
  // META wf  : meas10.hs:12:31


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#301 : [a_aN4] | [$k__302]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 118; 7; 8]
  reft {VV#294 : a_aN4 | [$k__295]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 119; 8]
  reft {VV#298 : a_aN4 | [$k__299]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 120]
  reft {VV#311 : [a_aN4] | [$k__312]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 120; 121]
  reft {VV#304 : a_aN4 | [$k__305]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 120; 122]
  reft {VV#308 : a_aN4 | [$k__309]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 120; 123]
  reft {VV#321 : [a_aN4] | [$k__322]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 120; 123; 124]
  reft {VV#314 : a_aN4 | [$k__315]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 120; 123; 125]
  reft {VV#318 : a_aN4 | [$k__319]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#270 : [a_aN4] | [$k__271]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 126]
  reft {VV#263 : a_aN4 | [$k__264]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 127]
  reft {VV#267 : a_aN4 | [$k__268]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 128; 1; 2; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#281 : [a_aN4] | [$k__282]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 128; 1; 129; 2; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#274 : a_aN4 | [$k__275]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 128; 1; 2; 130; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#278 : a_aN4 | [$k__279]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 128; 1; 2; 3; 131; 4; 5; 6; 22; 7; 8]
  reft {VV#291 : [a_aN4] | [$k__292]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 128; 1; 2; 3; 131; 4; 132; 5; 6; 22; 7; 8]
  reft {VV#284 : a_aN4 | [$k__285]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 128; 1; 2; 3; 131; 4; 5; 133; 6; 22; 7; 8]
  reft {VV#288 : a_aN4 | [$k__289]}
  
  // META wf  : meas10.hs:9:1-5


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 21; 6; 7; 8; 11; 12; 13]
  reft {VV#250 : [a_aMI] | [$k__251]}
  
  // META wf  : meas10.hs:18:18-22


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       134;
       7;
       8;
       11;
       12;
       13]
  reft {VV#243 : a_aMI | [$k__244]}
  
  // META wf  : meas10.hs:18:18-22


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       135;
       8;
       11;
       12;
       13]
  reft {VV#247 : a_aMI | [$k__248]}
  
  // META wf  : meas10.hs:18:18-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#183 : b_aMA | [$k__184]}
  
  // META wf  : meas10.hs:22:14-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#180 : b_aMA | [$k__181]}
  
  // META wf  : meas10.hs:22:14-15







