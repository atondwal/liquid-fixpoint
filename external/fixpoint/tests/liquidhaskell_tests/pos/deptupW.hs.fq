qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([q;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 10, column 1)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([q;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 10, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(VV : b_a12p, fix##126#A0 : a_a12o): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif Auto(vv : a_a12o, fix##126#A0 : a_a12o): (vv = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : b_a12p): (y([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : a_a12o): (x([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(v : b_a12p, fix##126#P : (Pred  b_a12p  a_a12o), fix##126#A0 : a_a12o): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([q;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 10, column 1)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([q;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 10, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 10, column 1)
qualif Auto(VV : b_a12p, fix##126#A0 : a_a12o): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif Auto(vv : a_a12o, fix##126#A0 : a_a12o): (vv = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : b_a12p): (y([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : a_a12o): (x([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(v : b_a12p, fix##126#P : (Pred  b_a12p  a_a12o), fix##126#A0 : a_a12o): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant y : (func(2, [(Deptup0.Pair  @(0)  @(1)); @(1)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x : (func(2, [(Deptup0.Pair  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant Deptup0.P#r12h : (func(2, [@(0);
                                    @(1);
                                    (Deptup0.Pair  @(0)  @(1))]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant Deptup0.P#r12h : (func(2, [@(0);
                                    @(1);
                                    (Deptup0.Pair  @(0)  @(1))]))


bind 0 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#195 : (GHC.Classes.Ord  int) | []}
bind 1 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#196 : (GHC.Num.Num  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#200 : GHC.Types.Ordering | [(VV#200 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#201 : GHC.Types.Ordering | [(VV#201 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#202 : GHC.Types.Ordering | [(VV#202 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#244 : GHC.Types.Ordering | [(cmp([VV#244]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#245 : GHC.Types.Ordering | [(cmp([VV#245]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#246 : GHC.Types.Ordering | [(cmp([VV#246]) = GHC.Types.GT#6W)]}
bind 10 q : {VV#253 : (Pred  a_a14s  a_a14s) | []}
bind 11 y0 : {VV : a_a14s | []}
bind 12 x#a140 : {VV : a_a14s | []}
bind 13 y#a141 : {VV : a_a14s | [(? papp2([q; VV; x#a140]))]}
bind 14 lq_tmp_x_272 : {VV : a_a14s | []}
bind 15 x#a142 : {VV#275 : int | [$k__276]}
bind 16 lq_anf__d14X : {lq_tmp_x_283 : int | [(lq_tmp_x_283 = (1  :  int))]}
bind 17 x#a143 : {VV#302 : int | [$k__303]}
bind 18 lq_anf__d14Y : {lq_tmp_x_320 : int | [$k__280[VV#279:=lq_tmp_x_320][x#a142:=x#a143][lq_tmp_x_322:=x#a143]]}
bind 19 lq_tmp_x_338 : {VV#339 : int | []}
bind 20 ds_d14W : {VV#353 : (Deptup0.Pair  int  int) | [$k__354]}
bind 21 lq_anf__d14Z : {lq_tmp_x_364 : (Deptup0.Pair  int  int) | [(lq_tmp_x_364 = ds_d14W)]}
bind 22 lq_anf__d14Z : {lq_tmp_x_370 : (Deptup0.Pair  int  int) | [(lq_tmp_x_370 = ds_d14W)]}
bind 23 x#a144 : {lq_tmp_x_366 : int | [$k__344[VV#343:=lq_tmp_x_366][VV#353:=lq_anf__d14Z][lq_tmp_x_360:=lq_tmp_x_366][lq_tmp_x_364:=lq_anf__d14Z][lq_tmp_x_370:=lq_anf__d14Z]]}
bind 24 y#a145 : {lq_tmp_x_367 : int | [$k__347[VV#346:=lq_tmp_x_367][VV#353:=lq_anf__d14Z][lq_tmp_x_361:=lq_tmp_x_367][lq_tmp_x_364:=lq_anf__d14Z][lq_tmp_x_370:=lq_anf__d14Z][lq_tmp_x_375:=x#a144];
                                        $k__351[VV#350:=lq_tmp_x_367][lq_tmp_x_349:=x#a144][lq_tmp_x_363:=lq_tmp_x_367][lq_tmp_x_362:=x#a144][lq_tmp_x_368:=x#a144][lq_tmp_x_369:=lq_tmp_x_367][lq_tmp_x_375:=x#a144]]}
bind 25 lq_anf__d14Z : {lq_tmp_x_370 : (Deptup0.Pair  int  int) | [(lq_tmp_x_370 = ds_d14W);
                                                                   (y([lq_tmp_x_370]) = y#a145);
                                                                   (x([lq_tmp_x_370]) = x#a144);
                                                                   (lq_tmp_x_370 = Deptup0.P#r12h([x#a144;
                                                                                                   y#a145]));
                                                                   (y([lq_tmp_x_370]) = y#a145);
                                                                   (x([lq_tmp_x_370]) = x#a144)]}
bind 26 lq_anf__d150 : {lq_tmp_x_386 : GHC.Types.Bool | [((? Prop([lq_tmp_x_386])) <=> (x#a144 < y#a145))]}
bind 27 lq_anf__d151 : {lq_tmp_x_412 : int | [(lq_tmp_x_412 = (100  :  int))]}
bind 28 n#a146 : {lq_tmp_x_418 : int | []}
bind 29 lq_anf__d152 : {lq_tmp_x_428 : (Deptup0.Pair  int  int) | [$k__317[VV#316:=lq_tmp_x_428][x#a143:=n#a146][lq_tmp_x_430:=n#a146]]}
bind 30 Deptup0.prop#r12m : {VV#408 : GHC.Types.Bool | [$k__409]}
bind 31 VV#475 : {VV#475 : GHC.Types.Bool | [$k__458[VV#457:=VV#475][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_438:=lq_anf__d152][lq_tmp_x_460:=VV#475]]}
bind 32 VV#475 : {VV#475 : GHC.Types.Bool | [$k__458[VV#457:=VV#475][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_438:=lq_anf__d152][lq_tmp_x_460:=VV#475]]}
bind 33 VV#478 : {VV#478 : (Deptup0.Pair  int  int) | [(VV#478 = lq_anf__d152)]}
bind 34 VV#478 : {VV#478 : (Deptup0.Pair  int  int) | [(VV#478 = lq_anf__d152)]}
bind 35 VV#481 : {VV#481 : int | [$k__307[VV#306:=VV#481][VV#316:=VV#478][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_424:=VV#481][lq_tmp_x_428:=VV#478][lq_tmp_x_473:=VV#478][lq_tmp_x_469:=VV#481]]}
bind 36 VV#481 : {VV#481 : int | [$k__307[VV#306:=VV#481][VV#316:=VV#478][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_424:=VV#481][lq_tmp_x_428:=VV#478][lq_tmp_x_473:=VV#478][lq_tmp_x_469:=VV#481]]}
bind 37 VV#484 : {VV#484 : int | [$k__310[VV#309:=VV#484][VV#316:=VV#478][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_425:=VV#484][lq_tmp_x_428:=VV#478][lq_tmp_x_473:=VV#478][lq_tmp_x_470:=VV#484]]}
bind 38 VV#484 : {VV#484 : int | [$k__310[VV#309:=VV#484][VV#316:=VV#478][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_425:=VV#484][lq_tmp_x_428:=VV#478][lq_tmp_x_473:=VV#478][lq_tmp_x_470:=VV#484]]}
bind 39 lq_tmp_x_454 : {VV#487 : int | []}
bind 40 VV#488 : {VV#488 : int | [$k__314[VV#313:=VV#488][lq_tmp_x_312:=lq_tmp_x_454][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_427:=VV#488][lq_tmp_x_426:=lq_tmp_x_454][lq_tmp_x_471:=lq_tmp_x_454][lq_tmp_x_472:=VV#488]]}
bind 41 VV#488 : {VV#488 : int | [$k__314[VV#313:=VV#488][lq_tmp_x_312:=lq_tmp_x_454][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_427:=VV#488][lq_tmp_x_426:=lq_tmp_x_454][lq_tmp_x_471:=lq_tmp_x_454][lq_tmp_x_472:=VV#488]]}
bind 42 VV#492 : {VV#492 : (Deptup0.Pair  int  int) | [$k__450[VV#449:=VV#492][lq_tmp_x_456:=VV#492]]}
bind 43 VV#492 : {VV#492 : (Deptup0.Pair  int  int) | [$k__450[VV#449:=VV#492][lq_tmp_x_456:=VV#492]]}
bind 44 VV#495 : {VV#495 : int | [$k__440[VV#439:=VV#495][VV#449:=VV#492][lq_tmp_x_456:=VV#492][lq_tmp_x_452:=VV#495]]}
bind 45 VV#495 : {VV#495 : int | [$k__440[VV#439:=VV#495][VV#449:=VV#492][lq_tmp_x_456:=VV#492][lq_tmp_x_452:=VV#495]]}
bind 46 VV#498 : {VV#498 : int | [$k__443[VV#442:=VV#498][VV#449:=VV#492][lq_tmp_x_456:=VV#492][lq_tmp_x_453:=VV#498]]}
bind 47 VV#498 : {VV#498 : int | [$k__443[VV#442:=VV#498][VV#449:=VV#492][lq_tmp_x_456:=VV#492][lq_tmp_x_453:=VV#498]]}
bind 48 lq_tmp_x_463 : {VV#501 : int | []}
bind 49 VV#502 : {VV#502 : int | [$k__447[VV#446:=VV#502][lq_tmp_x_445:=lq_tmp_x_463][lq_tmp_x_454:=lq_tmp_x_463][lq_tmp_x_455:=VV#502]]}
bind 50 VV#502 : {VV#502 : int | [$k__447[VV#446:=VV#502][lq_tmp_x_445:=lq_tmp_x_463][lq_tmp_x_454:=lq_tmp_x_463][lq_tmp_x_455:=VV#502]]}
bind 51 lq_tmp_x_436 : {lq_tmp_x_456 : (Deptup0.Pair  int  int) | [$k__450[VV#449:=lq_tmp_x_456]]}
bind 52 VV#506 : {VV#506 : GHC.Types.Bool | [$k__358[VV#357:=VV#506][ds_d14W:=lq_tmp_x_436][lq_tmp_x_468:=lq_tmp_x_436][lq_tmp_x_466:=VV#506]]}
bind 53 VV#506 : {VV#506 : GHC.Types.Bool | [$k__358[VV#357:=VV#506][ds_d14W:=lq_tmp_x_436][lq_tmp_x_468:=lq_tmp_x_436][lq_tmp_x_466:=VV#506]]}
bind 54 VV#509 : {VV#509 : int | [(VV#509 = n#a146)]}
bind 55 VV#509 : {VV#509 : int | [(VV#509 = n#a146)]}
bind 56 VV#512 : {VV#512 : int | [(VV#512 = lq_anf__d151)]}
bind 57 VV#512 : {VV#512 : int | [(VV#512 = lq_anf__d151)]}
bind 58 VV#515 : {VV#515 : int | [(VV#515 = 100)]}
bind 59 VV#515 : {VV#515 : int | [(VV#515 = 100)]}
bind 60 VV#518 : {VV#518 : GHC.Types.Bool | [(? Prop([VV#518]))]}
bind 61 VV#518 : {VV#518 : GHC.Types.Bool | [(? Prop([VV#518]))]}
bind 62 VV#521 : {VV#521 : GHC.Types.Bool | [(VV#521 = lq_anf__d150)]}
bind 63 VV#521 : {VV#521 : GHC.Types.Bool | [(VV#521 = lq_anf__d150)]}
bind 64 VV#524 : {VV#524 : int | [(VV#524 = y#a145)]}
bind 65 VV#524 : {VV#524 : int | [(VV#524 = y#a145)]}
bind 66 VV#527 : {VV#527 : int | [(VV#527 = x#a144)]}
bind 67 VV#527 : {VV#527 : int | [(VV#527 = x#a144)]}
bind 68 VV#530 : {VV#530 : (Deptup0.Pair  int  int) | []}
bind 69 VV#530 : {VV#530 : (Deptup0.Pair  int  int) | []}
bind 70 VV#533 : {VV#533 : int | [$k__332[VV#331:=VV#533][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_326:=VV#530][lq_tmp_x_334:=VV#533]]}
bind 71 VV#533 : {VV#533 : int | [$k__332[VV#331:=VV#533][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_326:=VV#530][lq_tmp_x_334:=VV#533]]}
bind 72 VV#536 : {VV#536 : int | [$k__332[VV#331:=VV#536][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_326:=VV#530][lq_tmp_x_334:=VV#536]]}
bind 73 VV#536 : {VV#536 : int | [$k__332[VV#331:=VV#536][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_326:=VV#530][lq_tmp_x_334:=VV#536]]}
bind 74 lq_tmp_x_312 : {VV#539 : int | []}
bind 75 VV#540 : {VV#540 : int | [$k__336[lq_tmp_x_338:=lq_tmp_x_312][VV#335:=VV#540][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_325:=lq_tmp_x_312][lq_tmp_x_334:=VV#540]]}
bind 76 VV#540 : {VV#540 : int | [$k__336[lq_tmp_x_338:=lq_tmp_x_312][VV#335:=VV#540][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_325:=lq_tmp_x_312][lq_tmp_x_334:=VV#540]]}
bind 77 VV#543 : {VV#543 : int | [(VV#543 = lq_anf__d14Y)]}
bind 78 VV#543 : {VV#543 : int | [(VV#543 = lq_anf__d14Y)]}
bind 79 VV#546 : {VV#546 : int | [(VV#546 = x#a143)]}
bind 80 VV#546 : {VV#546 : int | [(VV#546 = x#a143)]}
bind 81 VV#549 : {VV#549 : int | [(VV#549 = x#a143)]}
bind 82 VV#549 : {VV#549 : int | [(VV#549 = x#a143)]}
bind 83 VV#552 : {VV#552 : int | [(VV#552 = (x#a142 + lq_anf__d14X))]}
bind 84 VV#552 : {VV#552 : int | [(VV#552 = (x#a142 + lq_anf__d14X))]}
bind 85 VV#555 : {VV#555 : int | [(VV#555 = lq_anf__d14X)]}
bind 86 VV#555 : {VV#555 : int | [(VV#555 = lq_anf__d14X)]}
bind 87 VV#558 : {VV#558 : int | [(VV#558 = x#a142)]}
bind 88 VV#558 : {VV#558 : int | [(VV#558 = x#a142)]}
bind 89 VV#561 : {VV#561 : int | [(VV#561 = 1)]}
bind 90 VV#561 : {VV#561 : int | [(VV#561 = 1)]}
bind 91 VV#564 : {VV#564 : (Deptup0.Pair  a_a14s  a_a14s) | [(y([VV#564]) = y#a141);
                                                             (x([VV#564]) = x#a140)]}
bind 92 VV#564 : {VV#564 : (Deptup0.Pair  a_a14s  a_a14s) | [(y([VV#564]) = y#a141);
                                                             (x([VV#564]) = x#a140)]}
bind 93 VV#263 : {VV#263 : a_a14s | [$k__264[lq_tmp_x_261:=x#a140][lq_tmp_x_262:=y#a141][lq_tmp_x_258:=VV#564]]}
bind 94 VV#266 : {VV#266 : a_a14s | [$k__267[lq_tmp_x_261:=x#a140][lq_tmp_x_262:=y#a141][lq_tmp_x_258:=VV#564]]}
bind 95 y0 : {VV : a_a14s | []}
bind 96 VV#266 : {VV#266 : a_a14s | [$k__270[lq_tmp_x_272:=y0][VV#269:=VV#266][lq_tmp_x_261:=x#a140][lq_tmp_x_262:=y#a141][lq_tmp_x_257:=y0]]}
bind 97 VV : {VV : a_a14s | [(VV = y#a141)]}
bind 98 VV : {VV : a_a14s | [(VV = x#a140)]}
bind 99 VV#457 : {VV#457 : GHC.Types.Bool | [$k__458]}
bind 100 VV#449 : {VV#449 : (Deptup0.Pair  int  int) | [$k__450]}
bind 101 VV#439 : {VV#439 : int | [$k__440]}
bind 102 VV#442 : {VV#442 : int | [$k__443]}
bind 103 lq_tmp_x_445 : {VV#577 : int | []}
bind 104 VV#446 : {VV#446 : int | [$k__447]}
bind 105 VV#408 : {VV#408 : GHC.Types.Bool | [$k__409]}
bind 106 VV#353 : {VV#353 : (Deptup0.Pair  int  int) | [$k__354]}
bind 107 VV#343 : {VV#343 : int | [$k__344]}
bind 108 VV#346 : {VV#346 : int | [$k__347]}
bind 109 lq_tmp_x_349 : {VV#583 : int | []}
bind 110 VV#350 : {VV#350 : int | [$k__351]}
bind 111 VV#393 : {VV#393 : int | [$k__394]}
bind 112 VV#357 : {VV#357 : GHC.Types.Bool | [$k__358]}
bind 113 VV#302 : {VV#302 : int | [$k__303]}
bind 114 VV#335 : {VV#335 : int | [$k__336]}
bind 115 VV#331 : {VV#331 : int | [$k__332]}
bind 116 VV#316 : {VV#316 : (Deptup0.Pair  int  int) | [$k__317]}
bind 117 VV#306 : {VV#306 : int | [$k__307]}
bind 118 VV#309 : {VV#309 : int | [$k__310]}
bind 119 lq_tmp_x_312 : {VV#593 : int | []}
bind 120 VV#313 : {VV#313 : int | [$k__314]}
bind 121 VV#275 : {VV#275 : int | [$k__276]}
bind 122 VV#279 : {VV#279 : int | [$k__280]}




constraint:
  env [0; 1; 17; 2; 18; 3; 4; 68; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F16 : (Deptup0.Pair  int  int) | []}
  rhs {VV#F16 : (Deptup0.Pair  int  int) | [$k__317[VV#316:=VV#F16][VV#530:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [4]
  // META constraint id 16 : deptupW.hs:15:9-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 27; 28; 29; 31]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [$k__458[VV#457:=VV#F1][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_438:=lq_anf__d152][lq_tmp_x_460:=VV#F1][VV#475:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__409[VV#408:=VV#F1][VV#475:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [5]
  // META constraint id 1 : deptupW.hs:20:8-18


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 69; 6; 70; 7; 8; 9]
  grd true
  lhs {VV#F17 : int | [$k__332[VV#331:=VV#F17][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_326:=VV#530][lq_tmp_x_334:=VV#F17][VV#533:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : int | [$k__307[VV#316:=VV#530][VV#306:=VV#F17][VV#533:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [4]
  // META constraint id 17 : deptupW.hs:15:9-22


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 27; 28; 29]
  grd true
  lhs {VV#F2 : (Deptup0.Pair  int  int) | [(VV#F2 = lq_anf__d152)]}
  rhs {VV#F2 : (Deptup0.Pair  int  int) | [$k__450[VV#449:=VV#F2][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_456:=VV#F2][VV#478:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [5]
  // META constraint id 2 : deptupW.hs:20:14-18


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 69; 6; 7; 8; 72; 9]
  grd true
  lhs {VV#F18 : int | [$k__332[VV#331:=VV#F18][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_326:=VV#530][lq_tmp_x_334:=VV#F18][VV#536:=VV#F18][VV#F:=VV#F18]]}
  rhs {VV#F18 : int | [$k__310[VV#316:=VV#530][VV#309:=VV#F18][VV#536:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [4]
  // META constraint id 18 : deptupW.hs:15:9-22


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 5; 6; 7; 8; 9; 27; 28; 29]
  grd true
  lhs {VV#F3 : int | [$k__307[VV#306:=VV#F3][VV#316:=VV#478][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_424:=VV#F3][lq_tmp_x_428:=VV#478][lq_tmp_x_473:=VV#478][lq_tmp_x_469:=VV#F3][VV#481:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__440[VV#439:=VV#F3][VV#449:=VV#478][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_456:=VV#478][lq_tmp_x_452:=VV#F3][VV#481:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [5]
  // META constraint id 3 : deptupW.hs:20:14-18


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 69; 6; 7; 8; 9; 74; 75]
  grd true
  lhs {VV#F19 : int | [$k__336[lq_tmp_x_338:=lq_tmp_x_312][VV#335:=VV#F19][lq_tmp_x_329:=x#a143][lq_tmp_x_330:=lq_anf__d14Y][lq_tmp_x_325:=lq_tmp_x_312][lq_tmp_x_334:=VV#F19][VV#540:=VV#F19][VV#F:=VV#F19]]}
  rhs {VV#F19 : int | [$k__314[VV#313:=VV#F19][VV#540:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [4]
  // META constraint id 19 : deptupW.hs:15:9-22


constraint:
  env [0; 1; 2; 34; 3; 4; 5; 37; 6; 7; 8; 9; 27; 28; 29]
  grd true
  lhs {VV#F4 : int | [$k__310[VV#309:=VV#F4][VV#316:=VV#478][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_425:=VV#F4][lq_tmp_x_428:=VV#478][lq_tmp_x_473:=VV#478][lq_tmp_x_470:=VV#F4][VV#484:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__443[VV#442:=VV#F4][VV#449:=VV#478][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_456:=VV#478][lq_tmp_x_453:=VV#F4][VV#484:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [5]
  // META constraint id 4 : deptupW.hs:20:14-18


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 77]
  grd true
  lhs {VV#F20 : int | [(VV#F20 = lq_anf__d14Y)]}
  rhs {VV#F20 : int | [$k__332[VV#331:=VV#F20][lq_tmp_x_329:=x#a143][lq_tmp_x_334:=VV#F20][VV#543:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [4]
  // META constraint id 20 : deptupW.hs:15:16-21


constraint:
  env [0; 1; 2; 34; 3; 4; 5; 6; 7; 39; 8; 40; 9; 27; 28; 29]
  grd true
  lhs {VV#F5 : int | [$k__314[VV#313:=VV#F5][lq_tmp_x_312:=lq_tmp_x_454][x#a143:=n#a146][lq_tmp_x_430:=n#a146][lq_tmp_x_427:=VV#F5][lq_tmp_x_426:=lq_tmp_x_454][lq_tmp_x_471:=lq_tmp_x_454][lq_tmp_x_472:=VV#F5][VV#488:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__447[VV#446:=VV#F5][lq_tmp_x_445:=lq_tmp_x_454][lq_tmp_x_437:=Deptup0.chk#r12l][lq_tmp_x_455:=VV#F5][VV#488:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [5]
  // META constraint id 5 : deptupW.hs:20:14-18


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 77]
  grd true
  lhs {VV#F21 : int | [(VV#F21 = lq_anf__d14Y)]}
  rhs {VV#F21 : int | [$k__336[lq_tmp_x_338:=x#a143][VV#335:=VV#F21][lq_tmp_x_329:=x#a143][lq_tmp_x_334:=VV#F21][VV#543:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [4]
  // META constraint id 21 : deptupW.hs:15:16-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 42; 27; 28; 29]
  grd true
  lhs {VV#F6 : (Deptup0.Pair  int  int) | [$k__450[VV#449:=VV#F6][lq_tmp_x_456:=VV#F6][VV#492:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : (Deptup0.Pair  int  int) | [$k__354[VV#353:=VV#F6][lq_tmp_x_465:=VV#F6][VV#492:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [5]
  // META constraint id 6 : deptupW.hs:20:8-10


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 79]
  grd true
  lhs {VV#F22 : int | [(VV#F22 = x#a143)]}
  rhs {VV#F22 : int | [$k__332[VV#331:=VV#F22][lq_tmp_x_334:=VV#F22][VV#546:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [4]
  // META constraint id 22 : deptupW.hs:15:13


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 27; 43; 28; 44; 29]
  grd true
  lhs {VV#F7 : int | [$k__440[VV#439:=VV#F7][VV#449:=VV#492][lq_tmp_x_456:=VV#492][lq_tmp_x_452:=VV#F7][VV#495:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : int | [$k__344[VV#343:=VV#F7][VV#353:=VV#492][lq_tmp_x_465:=VV#492][lq_tmp_x_461:=VV#F7][VV#495:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [5]
  // META constraint id 7 : deptupW.hs:20:8-10


constraint:
  env [0; 1; 17; 81; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F23 : int | [(VV#F23 = x#a143)]}
  rhs {VV#F23 : int | [$k__276[VV#275:=VV#F23][lq_tmp_x_319:=VV#F23][VV#549:=VV#F23][VV#F:=VV#F23]]}
  id 23 tag [4]
  // META constraint id 23 : deptupW.hs:15:21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 27; 43; 28; 29; 46]
  grd true
  lhs {VV#F8 : int | [$k__443[VV#442:=VV#F8][VV#449:=VV#492][lq_tmp_x_456:=VV#492][lq_tmp_x_453:=VV#F8][VV#498:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__347[VV#346:=VV#F8][VV#353:=VV#492][lq_tmp_x_465:=VV#492][lq_tmp_x_462:=VV#F8][VV#498:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [5]
  // META constraint id 8 : deptupW.hs:20:8-10


constraint:
  env [0; 16; 1; 2; 3; 83; 4; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F24 : int | [(VV#F24 = (x#a142 + lq_anf__d14X))]}
  rhs {VV#F24 : int | [$k__280[VV#279:=VV#F24][VV#552:=VV#F24][VV#F:=VV#F24]]}
  id 24 tag [2]
  // META constraint id 24 : deptupW.hs:13:10-14


constraint:
  env [0; 48; 1; 49; 2; 3; 4; 5; 6; 7; 8; 9; 27; 43; 28; 29]
  grd true
  lhs {VV#F9 : int | [$k__447[VV#446:=VV#F9][lq_tmp_x_445:=lq_tmp_x_463][lq_tmp_x_454:=lq_tmp_x_463][lq_tmp_x_455:=VV#F9][VV#502:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__351[VV#350:=VV#F9][lq_tmp_x_349:=lq_tmp_x_463][lq_tmp_x_464:=VV#F9][VV#502:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [5]
  // META constraint id 9 : deptupW.hs:20:8-10


constraint:
  env [0; 96; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 92; 13; 95]
  grd true
  lhs {VV#F25 : a_a14s | [$k__270[lq_tmp_x_272:=y0][VV#269:=VV#F25][lq_tmp_x_261:=x#a140][lq_tmp_x_262:=y#a141][lq_tmp_x_257:=y0][VV#266:=VV#F25][VV#F:=VV#F25]]}
  rhs {VV#F25 : a_a14s | [(? papp2([q; VV#F25; y0]))]}
  id 25 tag [3]
  // META constraint id 25 : deptupW.hs:10:11-15


constraint:
  env [0; 1; 2; 3; 51; 4; 52; 5; 6; 7; 8; 9; 27; 28; 29]
  grd true
  lhs {VV#F10 : GHC.Types.Bool | [$k__358[VV#357:=VV#F10][ds_d14W:=lq_tmp_x_436][lq_tmp_x_468:=lq_tmp_x_436][lq_tmp_x_466:=VV#F10][VV#506:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : GHC.Types.Bool | [$k__458[VV#457:=VV#F10][lq_tmp_x_460:=VV#F10][VV#506:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [5]
  // META constraint id 10 : deptupW.hs:20:8-10


constraint:
  env [0; 1; 97; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F26 : a_a14s | [(VV#F26 = y#a141)]}
  rhs {VV#F26 : a_a14s | [$k__267[lq_tmp_x_261:=x#a140][VV#266:=VV#F26][VV#F:=VV#F26]]}
  id 26 tag [3]
  // META constraint id 26 : deptupW.hs:10:15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 54; 7; 8; 9; 27; 28]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = n#a146)]}
  rhs {VV#F11 : int | [$k__303[VV#302:=VV#F11][lq_tmp_x_423:=VV#F11][VV#509:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [5]
  // META constraint id 11 : deptupW.hs:20:18


constraint:
  env [0; 1; 97; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F27 : a_a14s | [(VV#F27 = y#a141)]}
  rhs {VV#F27 : a_a14s | [$k__270[lq_tmp_x_272:=x#a140][VV#269:=VV#F27][lq_tmp_x_261:=x#a140][VV#266:=VV#F27][VV#F:=VV#F27]]}
  id 27 tag [3]
  // META constraint id 27 : deptupW.hs:10:15


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26; 60]
  grd true
  lhs {VV#F12 : GHC.Types.Bool | [(? Prop([VV#F12]))]}
  rhs {VV#F12 : GHC.Types.Bool | [$k__358[VV#357:=VV#F12][VV#518:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : deptupW.hs:18:15-35


constraint:
  env [0; 1; 2; 98; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F28 : a_a14s | [(VV#F28 = x#a140)]}
  rhs {VV#F28 : a_a14s | [$k__264[VV#263:=VV#F28][VV#F:=VV#F28]]}
  id 28 tag [3]
  // META constraint id 28 : deptupW.hs:10:13


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26; 62]
  grd true
  lhs {VV#F13 : GHC.Types.Bool | [(VV#F13 = lq_anf__d150)]}
  rhs {VV#F13 : GHC.Types.Bool | [(? Prop([VV#F13]))]}
  id 13 tag [1]
  // META constraint id 13 : deptupW.hs:18:30-34


constraint:
  env [0; 64; 1; 2; 3; 4; 20; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25]
  grd true
  lhs {VV#F14 : int | [(VV#F14 = y#a145)]}
  rhs {VV#F14 : int | [$k__394[VV#393:=VV#F14][lq_tmp_x_390:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_391:=x#a144][lq_tmp_x_396:=VV#F14][VV#524:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : deptupW.hs:18:34


constraint:
  env [0; 1; 2; 66; 3; 4; 20; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = x#a144)]}
  rhs {VV#F15 : int | [$k__394[VV#393:=VV#F15][lq_tmp_x_390:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_396:=VV#F15][VV#527:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : deptupW.hs:18:30




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 27; 28; 29]
  reft {VV#457 : GHC.Types.Bool | [$k__458]}
  
  // META wf  : deptupW.hs:20:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 27; 28; 29]
  reft {VV#449 : (Deptup0.Pair  int  int) | [$k__450]}
  
  // META wf  : deptupW.hs:20:12


wf:
  env [0; 1; 2; 3; 4; 100; 5; 6; 7; 8; 9; 27; 28; 29]
  reft {VV#439 : int | [$k__440]}
  
  // META wf  : deptupW.hs:20:12


wf:
  env [0; 1; 2; 3; 4; 100; 5; 6; 7; 8; 9; 27; 28; 29]
  reft {VV#442 : int | [$k__443]}
  
  // META wf  : deptupW.hs:20:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 103; 8; 9; 27; 28; 29]
  reft {VV#446 : int | [$k__447]}
  
  // META wf  : deptupW.hs:20:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#408 : GHC.Types.Bool | [$k__409]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#353 : (Deptup0.Pair  int  int) | [$k__354]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 106]
  reft {VV#343 : int | [$k__344]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 106]
  reft {VV#346 : int | [$k__347]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 109]
  reft {VV#350 : int | [$k__351]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25]
  reft {VV#393 : int | [$k__394]}
  
  // META wf  : deptupW.hs:18:32


wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 8; 9]
  reft {VV#357 : GHC.Types.Bool | [$k__358]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#302 : int | [$k__303]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9]
  reft {VV#335 : int | [$k__336]}
  
  // META wf  : deptupW.hs:15:9-11


wf:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#331 : int | [$k__332]}
  
  // META wf  : deptupW.hs:15:9-11


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#316 : (Deptup0.Pair  int  int) | [$k__317]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 116; 5; 6; 7; 8; 9]
  reft {VV#306 : int | [$k__307]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 116; 5; 6; 7; 8; 9]
  reft {VV#309 : int | [$k__310]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 119; 8; 9]
  reft {VV#313 : int | [$k__314]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#275 : int | [$k__276]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#279 : int | [$k__280]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#269 : a_a14s | [$k__270]}
  
  // META wf  : deptupW.hs:10:11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#266 : a_a14s | [$k__267]}
  
  // META wf  : deptupW.hs:10:11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#263 : a_a14s | [$k__264]}
  
  // META wf  : deptupW.hs:10:11







