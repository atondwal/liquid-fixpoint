qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : int, fix##126#A0 : [a_aM7]): (VV = lllen([fix##126#A0])) // "HaskellMeasure.hs" (line 12, column 1)
qualif Auto(v : int, fix##126#A0 : [a_aMs]): (lllen([fix##126#A0]) = v) // "HaskellMeasure.hs" (line 16, column 1)
qualif Auto(v : int, fix##126#A0 : [a_aMf]): (lllen([fix##126#A0]) = v) // "HaskellMeasure.hs" (line 5, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : int, fix##126#A0 : [a_aM7]): (VV = lllen([fix##126#A0])) // "HaskellMeasure.hs" (line 12, column 1)
qualif Auto(v : int, fix##126#A0 : [a_aMs]): (lllen([fix##126#A0]) = v) // "HaskellMeasure.hs" (line 16, column 1)
qualif Auto(v : int, fix##126#A0 : [a_aMf]): (lllen([fix##126#A0]) = v) // "HaskellMeasure.hs" (line 5, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant lllen : (func(1, [[@(0)]; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#136 : (GHC.Num.Num  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#137 : GHC.Types.Ordering | [(VV#137 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#138 : GHC.Types.Ordering | [(VV#138 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#139 : GHC.Types.Ordering | [(VV#139 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#162 : GHC.Types.Ordering | [(cmp([VV#162]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#163 : GHC.Types.Ordering | [(cmp([VV#163]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#164 : GHC.Types.Ordering | [(cmp([VV#164]) = GHC.Types.GT#6W)]}
bind 10 ds_dMI : {VV#171 : [a_aM7] | [(len([VV#171]) >= 0)]}
bind 11 lq_anf__dMK : {lq_tmp_x_173 : [a_aM7] | [(lq_tmp_x_173 = ds_dMI);
                                                 (len([lq_tmp_x_173]) >= 0)]}
bind 12 lq_anf__dMK : {lq_tmp_x_176 : [a_aM7] | [(lq_tmp_x_176 = ds_dMI);
                                                 (len([lq_tmp_x_176]) >= 0);
                                                 (len([lq_tmp_x_176]) >= 0)]}
bind 13 lq_anf__dMK : {lq_tmp_x_176 : [a_aM7] | [(lq_tmp_x_176 = ds_dMI);
                                                 (len([lq_tmp_x_176]) >= 0);
                                                 (len([lq_tmp_x_176]) = 0);
                                                 ((? null([lq_tmp_x_176])) <=> true);
                                                 (lllen([lq_tmp_x_176]) = 0);
                                                 (lq_tmp_x_176 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (len([lq_tmp_x_176]) = 0);
                                                 ((? null([lq_tmp_x_176])) <=> true);
                                                 (lllen([lq_tmp_x_176]) = 0);
                                                 (len([lq_tmp_x_176]) >= 0)]}
bind 14 lq_anf__dMK : {lq_tmp_x_189 : [a_aM7] | [(lq_tmp_x_189 = ds_dMI);
                                                 (len([lq_tmp_x_189]) >= 0);
                                                 (len([lq_tmp_x_189]) >= 0)]}
bind 15 x#aLY : {VV : a_aM7 | []}
bind 16 xs#aLZ : {lq_tmp_x_199 : [a_aM7] | [(len([lq_tmp_x_199]) >= 0)]}
bind 17 lq_anf__dMK : {lq_tmp_x_189 : [a_aM7] | [(lq_tmp_x_189 = ds_dMI);
                                                 (len([lq_tmp_x_189]) >= 0);
                                                 (len([lq_tmp_x_189]) = (1 + len([xs#aLZ])));
                                                 ((? null([lq_tmp_x_189])) <=> false);
                                                 (xsListSelector([lq_tmp_x_189]) = xs#aLZ);
                                                 (xListSelector([lq_tmp_x_189]) = x#aLY);
                                                 (lllen([lq_tmp_x_189]) = (1 + lllen([xs#aLZ])));
                                                 (lq_tmp_x_189 = fix#GHC.Types.#58##35#64([x#aLY;
                                                                                           xs#aLZ]));
                                                 (len([lq_tmp_x_189]) = (1 + len([xs#aLZ])));
                                                 ((? null([lq_tmp_x_189])) <=> false);
                                                 (xsListSelector([lq_tmp_x_189]) = xs#aLZ);
                                                 (xListSelector([lq_tmp_x_189]) = x#aLY);
                                                 (lllen([lq_tmp_x_189]) = (1 + lllen([xs#aLZ])));
                                                 (len([lq_tmp_x_189]) >= 0)]}
bind 18 lq_anf__dML : {lq_tmp_x_209 : int | [(lq_tmp_x_209 = (1  :  int))]}
bind 19 lq_anf__dMM : {VV#224 : int | [(VV#224 = lllen([xs#aLZ]))]}
bind 20 ds_dMJ : {VV#251 : [a_aMf] | [(len([VV#251]) >= 0)]}
bind 21 lq_anf__dMN : {lq_tmp_x_253 : [a_aMf] | [(lq_tmp_x_253 = ds_dMJ);
                                                 (len([lq_tmp_x_253]) >= 0)]}
bind 22 lq_anf__dMN : {lq_tmp_x_256 : [a_aMf] | [(lq_tmp_x_256 = ds_dMJ);
                                                 (len([lq_tmp_x_256]) >= 0);
                                                 (len([lq_tmp_x_256]) >= 0)]}
bind 23 lq_anf__dMN : {lq_tmp_x_256 : [a_aMf] | [(lq_tmp_x_256 = ds_dMJ);
                                                 (len([lq_tmp_x_256]) >= 0);
                                                 (len([lq_tmp_x_256]) = 0);
                                                 ((? null([lq_tmp_x_256])) <=> true);
                                                 (lllen([lq_tmp_x_256]) = 0);
                                                 (lq_tmp_x_256 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (len([lq_tmp_x_256]) = 0);
                                                 ((? null([lq_tmp_x_256])) <=> true);
                                                 (lllen([lq_tmp_x_256]) = 0);
                                                 (len([lq_tmp_x_256]) >= 0)]}
bind 24 lq_anf__dMN : {lq_tmp_x_269 : [a_aMf] | [(lq_tmp_x_269 = ds_dMJ);
                                                 (len([lq_tmp_x_269]) >= 0);
                                                 (len([lq_tmp_x_269]) >= 0)]}
bind 25 x#aLW : {VV : a_aMf | []}
bind 26 xs#aLX : {lq_tmp_x_279 : [a_aMf] | [(len([lq_tmp_x_279]) >= 0)]}
bind 27 lq_anf__dMN : {lq_tmp_x_269 : [a_aMf] | [(lq_tmp_x_269 = ds_dMJ);
                                                 (len([lq_tmp_x_269]) >= 0);
                                                 (len([lq_tmp_x_269]) = (1 + len([xs#aLX])));
                                                 ((? null([lq_tmp_x_269])) <=> false);
                                                 (xsListSelector([lq_tmp_x_269]) = xs#aLX);
                                                 (xListSelector([lq_tmp_x_269]) = x#aLW);
                                                 (lllen([lq_tmp_x_269]) = (1 + lllen([xs#aLX])));
                                                 (lq_tmp_x_269 = fix#GHC.Types.#58##35#64([x#aLW;
                                                                                           xs#aLX]));
                                                 (len([lq_tmp_x_269]) = (1 + len([xs#aLX])));
                                                 ((? null([lq_tmp_x_269])) <=> false);
                                                 (xsListSelector([lq_tmp_x_269]) = xs#aLX);
                                                 (xListSelector([lq_tmp_x_269]) = x#aLW);
                                                 (lllen([lq_tmp_x_269]) = (1 + lllen([xs#aLX])));
                                                 (len([lq_tmp_x_269]) >= 0)]}
bind 28 lq_anf__dMO : {lq_tmp_x_289 : int | [(lq_tmp_x_289 = (1  :  int))]}
bind 29 lq_anf__dMP : {v : int | [(lllen([xs#aLX]) = v)]}
bind 30 VV#318 : {VV#318 : int | [(VV#318 = (lq_anf__dMO + lq_anf__dMP))]}
bind 31 VV#318 : {VV#318 : int | [(VV#318 = (lq_anf__dMO + lq_anf__dMP))]}
bind 32 VV#321 : {VV#321 : int | [(VV#321 = lq_anf__dMP)]}
bind 33 VV#321 : {VV#321 : int | [(VV#321 = lq_anf__dMP)]}
bind 34 VV#324 : {VV#324 : int | [(VV#324 = lq_anf__dMO)]}
bind 35 VV#324 : {VV#324 : int | [(VV#324 = lq_anf__dMO)]}
bind 36 VV#327 : {VV#327 : [a_aMf] | [(VV#327 = xs#aLX);
                                      (len([VV#327]) >= 0)]}
bind 37 VV#327 : {VV#327 : [a_aMf] | [(VV#327 = xs#aLX);
                                      (len([VV#327]) >= 0)]}
bind 38 VV : {VV : a_aMf | []}
bind 39 fldList : {VV : a_aMf | []}
bind 40 VV : {VV : a_aMf | []}
bind 41 VV#333 : {VV#333 : int | [(VV#333 = 1)]}
bind 42 VV#333 : {VV#333 : int | [(VV#333 = 1)]}
bind 43 VV#336 : {VV#336 : int | [(VV#336 = (0  :  int))]}
bind 44 VV#336 : {VV#336 : int | [(VV#336 = (0  :  int))]}
bind 45 VV#339 : {VV#339 : int | [(VV#339 = 0)]}
bind 46 VV#339 : {VV#339 : int | [(VV#339 = 0)]}
bind 47 VV#343 : {VV#343 : [a_aMs] | [(len([VV#343]) >= 0)]}
bind 48 VV#343 : {VV#343 : [a_aMs] | [(len([VV#343]) >= 0)]}
bind 49 VV : {VV : a_aMs | []}
bind 50 lq_tmp_x_239 : {VV : a_aMs | []}
bind 51 VV : {VV : a_aMs | []}
bind 52 lq_tmp_x_238 : {VV#349 : [a_aMs] | [(len([VV#349]) >= 0)]}
bind 53 VV#350 : {VV#350 : int | [(VV#350 = lllen([lq_tmp_x_238]))]}
bind 54 VV#350 : {VV#350 : int | [(VV#350 = lllen([lq_tmp_x_238]))]}
bind 55 VV#353 : {VV#353 : int | [(VV#353 = (lq_anf__dML + lq_anf__dMM))]}
bind 56 VV#353 : {VV#353 : int | [(VV#353 = (lq_anf__dML + lq_anf__dMM))]}
bind 57 VV#356 : {VV#356 : int | [(VV#356 = lq_anf__dMM)]}
bind 58 VV#356 : {VV#356 : int | [(VV#356 = lq_anf__dMM)]}
bind 59 VV#359 : {VV#359 : int | [(VV#359 = lq_anf__dML)]}
bind 60 VV#359 : {VV#359 : int | [(VV#359 = lq_anf__dML)]}
bind 61 VV#362 : {VV#362 : [a_aM7] | [(VV#362 = xs#aLZ);
                                      (len([VV#362]) >= 0)]}
bind 62 VV#362 : {VV#362 : [a_aM7] | [(VV#362 = xs#aLZ);
                                      (len([VV#362]) >= 0)]}
bind 63 VV : {VV : a_aM7 | []}
bind 64 fldList : {VV : a_aM7 | []}
bind 65 VV : {VV : a_aM7 | []}
bind 66 VV#368 : {VV#368 : int | [(VV#368 = 1)]}
bind 67 VV#368 : {VV#368 : int | [(VV#368 = 1)]}
bind 68 VV#371 : {VV#371 : int | [(VV#371 = (0  :  int))]}
bind 69 VV#371 : {VV#371 : int | [(VV#371 = (0  :  int))]}
bind 70 VV#374 : {VV#374 : int | [(VV#374 = 0)]}
bind 71 VV#374 : {VV#374 : int | [(VV#374 = 0)]}




constraint:
  env [0;
       1;
       2;
       3;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       24;
       9;
       25;
       26;
       27;
       28;
       29;
       30]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = (lq_anf__dMO + lq_anf__dMP))]}
  rhs {VV#F1 : int | [(lllen([ds_dMJ]) = VV#F1)]}
  id 1 tag [3]
  // META constraint id 1 : HaskellMeasure.hs:6:15-25


constraint:
  env [0; 1; 2; 3; 4; 20; 36; 5; 21; 6; 7; 8; 24; 9; 25; 26; 27; 28]
  grd true
  lhs {VV#F2 : [a_aMf] | [(VV#F2 = xs#aLX); (len([VV#F2]) >= 0)]}
  rhs {VV#F2 : [a_aMf] | [(len([VV#F2]) < len([ds_dMJ]))]}
  id 2 tag [3]
  // META constraint id 2 : HaskellMeasure.hs:6:24-25


constraint:
  env [0; 1; 2; 3; 4; 20; 36; 5; 21; 6; 7; 8; 24; 9; 25; 26; 27; 28]
  grd true
  lhs {VV#F3 : [a_aMf] | [(VV#F3 = xs#aLX); (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [a_aMf] | [(len([VV#F3]) >= 0)]}
  id 3 tag [3]
  // META constraint id 3 : HaskellMeasure.hs:6:24-25


constraint:
  env [0;
       1;
       2;
       3;
       4;
       20;
       5;
       21;
       37;
       6;
       38;
       7;
       8;
       24;
       9;
       25;
       26;
       27;
       28]
  grd true
  lhs {VV#F4 : a_aMf | []}
  rhs {VV#F4 : a_aMf | [$k__300[VV:=VV#327][VV#299:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : HaskellMeasure.hs:6:24-25


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 22; 7; 23; 8; 9; 43]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = (0  :  int))]}
  rhs {VV#F5 : int | [(lllen([ds_dMJ]) = VV#F5)]}
  id 5 tag [3]
  // META constraint id 5 : HaskellMeasure.hs:5:11


constraint:
  env [0; 48; 1; 49; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F6 : a_aMs | []}
  rhs {VV#F6 : a_aMs | [$k__245[lq_tmp_x_240:=VV#343][VV#244:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : HaskellMeasure.hs:16:10-14


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 53; 6; 7; 8; 9]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = lllen([lq_tmp_x_238]))]}
  rhs {VV#F7 : int | [(lllen([lq_tmp_x_238]) = VV#F7)]}
  id 7 tag [2]
  // META constraint id 7 : HaskellMeasure.hs:16:10-14


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       55;
       8;
       9;
       10;
       11;
       14;
       15]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = (lq_anf__dML + lq_anf__dMM))]}
  rhs {VV#F8 : int | [(VV#F8 = lllen([ds_dMI]))]}
  id 8 tag [1]
  // META constraint id 8 : HaskellMeasure.hs:13:16-27


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 10; 11; 61; 14; 15]
  grd true
  lhs {VV#F9 : [a_aM7] | [(VV#F9 = xs#aLZ); (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [a_aM7] | [(len([VV#F9]) < len([ds_dMI]))]}
  id 9 tag [1]
  // META constraint id 9 : HaskellMeasure.hs:13:26-27


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 10; 11; 61; 14; 15]
  grd true
  lhs {VV#F10 : [a_aM7] | [(VV#F10 = xs#aLZ); (len([VV#F10]) >= 0)]}
  rhs {VV#F10 : [a_aM7] | [(len([VV#F10]) >= 0)]}
  id 10 tag [1]
  // META constraint id 10 : HaskellMeasure.hs:13:26-27


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       14;
       62;
       15;
       63]
  grd true
  lhs {VV#F11 : a_aM7 | []}
  rhs {VV#F11 : a_aM7 | [$k__220[VV:=VV#362][VV#219:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : HaskellMeasure.hs:13:26-27


constraint:
  env [0; 1; 2; 3; 4; 68; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = (0  :  int))]}
  rhs {VV#F12 : int | [(VV#F12 = lllen([ds_dMI]))]}
  id 12 tag [1]
  // META constraint id 12 : HaskellMeasure.hs:12:12




wf:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 7; 8; 24; 9; 25; 26; 27; 28]
  reft {VV#299 : a_aMf | [$k__300]}
  
  // META wf  : HaskellMeasure.hs:6:19-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#244 : a_aMs | [$k__245]}
  
  // META wf  : HaskellMeasure.hs:16:10-14


wf:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 10; 11; 14; 15]
  reft {VV#219 : a_aM7 | [$k__220]}
  
  // META wf  : HaskellMeasure.hs:13:20-24







