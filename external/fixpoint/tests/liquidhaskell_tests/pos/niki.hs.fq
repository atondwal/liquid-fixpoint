qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : b_a12n, fix##126#A0 : a_a12m): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "niki.hs" (line 6, column 17)
qualif Auto(vv : a_a12m, fix##126#A0 : a_a12m): (vv = fix##126#A0) // "niki.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12m  b_a12n), fix##126#A0 : b_a12n): (y([VV]) = fix##126#A0) // "niki.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12m  b_a12n), fix##126#A0 : a_a12m): (x([VV]) = fix##126#A0) // "niki.hs" (line 6, column 17)
qualif Auto(v : b_a12n, fix##126#P : (Pred  b_a12n  a_a12m), fix##126#A0 : a_a12m): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "niki.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : b_a12n, fix##126#A0 : a_a12m): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "niki.hs" (line 6, column 17)
qualif Auto(vv : a_a12m, fix##126#A0 : a_a12m): (vv = fix##126#A0) // "niki.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12m  b_a12n), fix##126#A0 : b_a12n): (y([VV]) = fix##126#A0) // "niki.hs" (line 6, column 17)
qualif Auto(VV : (Niki.Pair  a_a12m  b_a12n), fix##126#A0 : a_a12m): (x([VV]) = fix##126#A0) // "niki.hs" (line 6, column 17)
qualif Auto(v : b_a12n, fix##126#P : (Pred  b_a12n  a_a12m), fix##126#A0 : a_a12m): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "niki.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant y : (func(2, [(Niki.Pair  @(0)  @(1)); @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant Niki.P#r12h : (func(2, [@(0);
                                 @(1);
                                 (Niki.Pair  @(0)  @(1))]))
constant x : (func(2, [(Niki.Pair  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant Niki.P#r12h : (func(2, [@(0);
                                 @(1);
                                 (Niki.Pair  @(0)  @(1))]))


bind 0 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#165 : (GHC.Classes.Ord  int) | []}
bind 1 GHC.Types.EQ#6U : {VV#168 : GHC.Types.Ordering | [(VV#168 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#169 : GHC.Types.Ordering | [(VV#169 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#170 : GHC.Types.Ordering | [(VV#170 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#211 : GHC.Types.Ordering | [(cmp([VV#211]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#212 : GHC.Types.Ordering | [(cmp([VV#212]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#213 : GHC.Types.Ordering | [(cmp([VV#213]) = GHC.Types.GT#6W)]}
bind 9 fix##36#dOrd_a16q : {VV#218 : (GHC.Classes.Ord  a_a16p) | []}
bind 10 ds_d16R : {VV#229 : (Niki.Pair  a_a16p  a_a16p) | [$k__230]}
bind 11 lq_anf__d16S : {lq_tmp_x_237 : (Niki.Pair  a_a16p  a_a16p) | [(lq_tmp_x_237 = ds_d16R)]}
bind 12 lq_anf__d16S : {lq_tmp_x_240 : (Niki.Pair  a_a16p  a_a16p) | [(lq_tmp_x_240 = ds_d16R)]}
bind 13 x#a15Y : {VV#219 : a_a16p | [$k__220[VV#229:=lq_anf__d16S][lq_tmp_x_237:=lq_anf__d16S][lq_tmp_x_240:=lq_anf__d16S]]}
bind 14 y#a15Z : {VV#222 : a_a16p | [$k__223[VV#229:=lq_anf__d16S][lq_tmp_x_237:=lq_anf__d16S][lq_tmp_x_240:=lq_anf__d16S][lq_tmp_x_245:=x#a15Y];
                                     $k__227[lq_tmp_x_225:=x#a15Y][lq_tmp_x_236:=x#a15Y][lq_tmp_x_239:=x#a15Y][VV#226:=VV#222][lq_tmp_x_245:=x#a15Y]]}
bind 15 lq_anf__d16S : {lq_tmp_x_240 : (Niki.Pair  a_a16p  a_a16p) | [(lq_tmp_x_240 = ds_d16R);
                                                                      (y([lq_tmp_x_240]) = y#a15Z);
                                                                      (x([lq_tmp_x_240]) = x#a15Y);
                                                                      (lq_tmp_x_240 = Niki.P#r12h([x#a15Y;
                                                                                                   y#a15Z]));
                                                                      (y([lq_tmp_x_240]) = y#a15Z);
                                                                      (x([lq_tmp_x_240]) = x#a15Y)]}
bind 16 lq_anf__d16T : {lq_tmp_x_256 : GHC.Types.Bool | [((? Prop([lq_tmp_x_256])) <=> (x#a15Y <= y#a15Z))]}
bind 17 lq_anf__d16U : {lq_tmp_x_288 : int | [(lq_tmp_x_288 = (0  :  int))]}
bind 18 lq_anf__d16V : {lq_tmp_x_294 : int | [(lq_tmp_x_294 = (1  :  int))]}
bind 19 lq_tmp_x_316 : {VV#317 : int | []}
bind 20 Niki.bar#r12i : {VV#284 : (Niki.Pair  int  int) | [$k__285]}
bind 21 Niki.foo#r12j : {lq_tmp_x_324 : GHC.Types.Bool | [$k__234[VV#233:=lq_tmp_x_324][fix##36#dOrd_a16q:=fix#GHC.Classes.#36#fOrdInt#35#rhx][ds_d16R:=Niki.bar#r12i][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_328:=Niki.bar#r12i]]}
bind 22 VV#341 : {VV#341 : (Niki.Pair  int  int) | [(VV#341 = Niki.bar#r12i)]}
bind 23 VV#341 : {VV#341 : (Niki.Pair  int  int) | [(VV#341 = Niki.bar#r12i)]}
bind 24 VV#344 : {VV#344 : int | [$k__275[VV#274:=VV#344][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_335:=VV#344]]}
bind 25 VV#344 : {VV#344 : int | [$k__275[VV#274:=VV#344][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_335:=VV#344]]}
bind 26 VV#347 : {VV#347 : int | [$k__278[VV#277:=VV#347][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_336:=VV#347]]}
bind 27 VV#347 : {VV#347 : int | [$k__278[VV#277:=VV#347][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_336:=VV#347]]}
bind 28 lq_tmp_x_322 : {VV#350 : int | []}
bind 29 VV#351 : {VV#351 : int | [$k__282[VV#281:=VV#351][lq_tmp_x_280:=lq_tmp_x_322][lq_tmp_x_337:=lq_tmp_x_322][lq_tmp_x_338:=VV#351]]}
bind 30 VV#351 : {VV#351 : int | [$k__282[VV#281:=VV#351][lq_tmp_x_280:=lq_tmp_x_322][lq_tmp_x_337:=lq_tmp_x_322][lq_tmp_x_338:=VV#351]]}
bind 31 VV#354 : {VV#354 : (Niki.Pair  int  int) | [(y([VV#354]) = lq_anf__d16V);
                                                    (x([VV#354]) = lq_anf__d16U)]}
bind 32 VV#354 : {VV#354 : (Niki.Pair  int  int) | [(y([VV#354]) = lq_anf__d16V);
                                                    (x([VV#354]) = lq_anf__d16U)]}
bind 33 VV#357 : {VV#357 : int | [$k__306[VV#305:=VV#357][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_300:=VV#354][lq_tmp_x_308:=VV#357]]}
bind 34 VV#357 : {VV#357 : int | [$k__306[VV#305:=VV#357][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_300:=VV#354][lq_tmp_x_308:=VV#357]]}
bind 35 VV#360 : {VV#360 : int | [$k__310[VV#309:=VV#360][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_300:=VV#354][lq_tmp_x_312:=VV#360]]}
bind 36 VV#360 : {VV#360 : int | [$k__310[VV#309:=VV#360][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_300:=VV#354][lq_tmp_x_312:=VV#360]]}
bind 37 lq_tmp_x_280 : {VV#363 : int | []}
bind 38 VV#364 : {VV#364 : int | [$k__314[lq_tmp_x_316:=lq_tmp_x_280][VV#313:=VV#364][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_299:=lq_tmp_x_280][lq_tmp_x_312:=VV#364]]}
bind 39 VV#364 : {VV#364 : int | [$k__314[lq_tmp_x_316:=lq_tmp_x_280][VV#313:=VV#364][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_299:=lq_tmp_x_280][lq_tmp_x_312:=VV#364]]}
bind 40 VV#367 : {VV#367 : int | [(VV#367 = lq_anf__d16V)]}
bind 41 VV#367 : {VV#367 : int | [(VV#367 = lq_anf__d16V)]}
bind 42 VV#370 : {VV#370 : int | [(VV#370 = lq_anf__d16U)]}
bind 43 VV#370 : {VV#370 : int | [(VV#370 = lq_anf__d16U)]}
bind 44 VV#373 : {VV#373 : int | [(VV#373 = 1)]}
bind 45 VV#373 : {VV#373 : int | [(VV#373 = 1)]}
bind 46 VV#376 : {VV#376 : int | [(VV#376 = 0)]}
bind 47 VV#376 : {VV#376 : int | [(VV#376 = 0)]}
bind 48 VV#379 : {VV#379 : GHC.Types.Bool | [(? Prop([VV#379]))]}
bind 49 VV#379 : {VV#379 : GHC.Types.Bool | [(? Prop([VV#379]))]}
bind 50 VV#382 : {VV#382 : GHC.Types.Bool | [(VV#382 = lq_anf__d16T)]}
bind 51 VV#382 : {VV#382 : GHC.Types.Bool | [(VV#382 = lq_anf__d16T)]}
bind 52 VV#222 : {VV#222 : a_a16p | [(VV#222 = y#a15Z)]}
bind 53 VV#219 : {VV#219 : a_a16p | [(VV#219 = x#a15Y)]}
bind 54 VV#329 : {VV#329 : int | [$k__330]}
bind 55 VV#313 : {VV#313 : int | [$k__314]}
bind 56 VV#309 : {VV#309 : int | [$k__310]}
bind 57 VV#305 : {VV#305 : int | [$k__306]}
bind 58 VV#284 : {VV#284 : (Niki.Pair  int  int) | [$k__285]}
bind 59 VV#274 : {VV#274 : int | [$k__275]}
bind 60 VV#277 : {VV#277 : int | [$k__278]}
bind 61 lq_tmp_x_280 : {VV#394 : int | []}
bind 62 VV#281 : {VV#281 : int | [$k__282]}
bind 63 VV#229 : {VV#229 : (Niki.Pair  a_a16p  a_a16p) | [$k__230]}
bind 64 lq_tmp_x_225 : {VV : a_a16p | []}
bind 65 VV#233 : {VV#233 : GHC.Types.Bool | [$k__234]}




constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F16 : a_a16p | [(VV#F16 = y#a15Z)]}
  rhs {VV#F16 : a_a16p | [$k__264[lq_tmp_x_260:=fix##36#dOrd_a16q][lq_tmp_x_261:=x#a15Y][VV#263:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]
  // META constraint id 16 : niki.hs:11:35


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 22; 7; 8]
  grd true
  lhs {VV#F1 : (Niki.Pair  int  int) | [(VV#F1 = Niki.bar#r12i)]}
  rhs {VV#F1 : (Niki.Pair  int  int) | [$k__230[VV#229:=VV#F1][fix##36#dOrd_a16q:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_323:=VV#F1][VV#341:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [3]
  // META constraint id 1 : niki.hs:9:11-13


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F17 : a_a16p | [(VV#F17 = x#a15Y)]}
  rhs {VV#F17 : a_a16p | [$k__264[lq_tmp_x_260:=fix##36#dOrd_a16q][VV#263:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [1]
  // META constraint id 17 : niki.hs:11:30


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 23; 8; 24]
  grd true
  lhs {VV#F2 : int | [$k__275[VV#274:=VV#F2][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_335:=VV#F2][VV#344:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [$k__330[VV#329:=VV#F2][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_323:=VV#341][lq_tmp_x_332:=VV#F2][VV#344:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : niki.hs:9:11-13


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 23; 8; 24]
  grd true
  lhs {VV#F3 : int | [$k__275[VV#274:=VV#F3][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_335:=VV#F3][VV#344:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__220[VV#229:=VV#341][fix##36#dOrd_a16q:=fix#GHC.Classes.#36#fOrdInt#35#rhx][VV#219:=VV#F3][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_323:=VV#341][lq_tmp_x_332:=VV#F3][VV#344:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : niki.hs:9:11-13


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 23; 8; 26]
  grd true
  lhs {VV#F4 : int | [$k__278[VV#277:=VV#F4][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_336:=VV#F4][VV#347:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__330[VV#329:=VV#F4][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_323:=VV#341][lq_tmp_x_332:=VV#F4][VV#347:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : niki.hs:9:11-13


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 23; 8; 26]
  grd true
  lhs {VV#F5 : int | [$k__278[VV#277:=VV#F5][VV#284:=VV#341][lq_tmp_x_339:=VV#341][lq_tmp_x_336:=VV#F5][VV#347:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__223[VV#229:=VV#341][fix##36#dOrd_a16q:=fix#GHC.Classes.#36#fOrdInt#35#rhx][VV#222:=VV#F5][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_323:=VV#341][lq_tmp_x_332:=VV#F5][VV#347:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : niki.hs:9:11-13


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 23; 8; 28; 29]
  grd true
  lhs {VV#F6 : int | [$k__282[VV#281:=VV#F6][lq_tmp_x_280:=lq_tmp_x_322][lq_tmp_x_337:=lq_tmp_x_322][lq_tmp_x_338:=VV#F6][VV#351:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__227[lq_tmp_x_225:=lq_tmp_x_322][fix##36#dOrd_a16q:=fix#GHC.Classes.#36#fOrdInt#35#rhx][VV#226:=VV#F6][lq_tmp_x_327:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_332:=VV#F6][VV#351:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : niki.hs:9:11-13


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 31]
  grd true
  lhs {VV#F7 : (Niki.Pair  int  int) | [(y([VV#F7]) = lq_anf__d16V);
                                        (x([VV#F7]) = lq_anf__d16U)]}
  rhs {VV#F7 : (Niki.Pair  int  int) | [$k__285[VV#284:=VV#F7][VV#354:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : niki.hs:8:7-25


constraint:
  env [0; 32; 1; 17; 33; 2; 18; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F8 : int | [$k__306[VV#305:=VV#F8][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_300:=VV#354][lq_tmp_x_308:=VV#F8][VV#357:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__275[VV#284:=VV#354][VV#274:=VV#F8][VV#357:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : niki.hs:8:7-25


constraint:
  env [0; 32; 1; 17; 2; 18; 3; 35; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F9 : int | [$k__310[VV#309:=VV#F9][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_300:=VV#354][lq_tmp_x_312:=VV#F9][VV#360:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__278[VV#284:=VV#354][VV#277:=VV#F9][VV#360:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]
  // META constraint id 9 : niki.hs:8:7-25


constraint:
  env [0; 32; 1; 17; 2; 18; 3; 4; 5; 37; 6; 38; 7; 8]
  grd true
  lhs {VV#F10 : int | [$k__314[lq_tmp_x_316:=lq_tmp_x_280][VV#313:=VV#F10][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_304:=lq_anf__d16V][lq_tmp_x_299:=lq_tmp_x_280][lq_tmp_x_312:=VV#F10][VV#364:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : int | [$k__282[VV#281:=VV#F10][VV#364:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : niki.hs:8:7-25


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 40]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = lq_anf__d16V)]}
  rhs {VV#F11 : int | [$k__310[VV#309:=VV#F11][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_312:=VV#F11][VV#367:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : niki.hs:8:19


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 40]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = lq_anf__d16V)]}
  rhs {VV#F12 : int | [$k__314[lq_tmp_x_316:=lq_anf__d16U][VV#313:=VV#F12][lq_tmp_x_303:=lq_anf__d16U][lq_tmp_x_312:=VV#F12][VV#367:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : niki.hs:8:19


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 42]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__d16U)]}
  rhs {VV#F13 : int | [$k__306[VV#305:=VV#F13][lq_tmp_x_308:=VV#F13][VV#370:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [2]
  // META constraint id 13 : niki.hs:8:10


constraint:
  env [0; 16; 48; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F14 : GHC.Types.Bool | [(? Prop([VV#F14]))]}
  rhs {VV#F14 : GHC.Types.Bool | [$k__234[VV#233:=VV#F14][VV#379:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : niki.hs:11:15-36


constraint:
  env [0; 16; 1; 2; 50; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F15 : GHC.Types.Bool | [(VV#F15 = lq_anf__d16T)]}
  rhs {VV#F15 : GHC.Types.Bool | [(? Prop([VV#F15]))]}
  id 15 tag [1]
  // META constraint id 15 : niki.hs:11:30-35




wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 8]
  reft {VV#329 : int | [$k__330]}
  
  // META wf  : niki.hs:9:7-9


wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8]
  reft {VV#313 : int | [$k__314]}
  
  // META wf  : niki.hs:8:7


wf:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8]
  reft {VV#309 : int | [$k__310]}
  
  // META wf  : niki.hs:8:7


wf:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8]
  reft {VV#305 : int | [$k__306]}
  
  // META wf  : niki.hs:8:7


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#284 : (Niki.Pair  int  int) | [$k__285]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 58]
  reft {VV#274 : int | [$k__275]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 58]
  reft {VV#277 : int | [$k__278]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 61]
  reft {VV#281 : int | [$k__282]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#229 : (Niki.Pair  a_a16p  a_a16p) | [$k__230]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 63]
  reft {VV#219 : a_a16p | [$k__220]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 63]
  reft {VV#222 : a_a16p | [$k__223]}
  
  // META wf  : <no location info>


wf:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#226 : a_a16p | [$k__227]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#263 : a_a16p | [$k__264]}
  
  // META wf  : niki.hs:11:32-33


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#233 : GHC.Types.Bool | [$k__234]}
  
  // META wf  : <no location info>







