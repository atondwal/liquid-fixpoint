qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Classes.#36#fEqInt#35#rse : {VV#179 : (GHC.Classes.Eq  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#180 : GHC.Types.Ordering | [(VV#180 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#181 : GHC.Types.Ordering | [(VV#181 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#182 : GHC.Types.Ordering | [(VV#182 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#223 : GHC.Types.Ordering | [(cmp([VV#223]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#224 : GHC.Types.Ordering | [(cmp([VV#224]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#225 : GHC.Types.Ordering | [(cmp([VV#225]) = GHC.Types.GT#6W)]}
bind 10 ds_d27c : {VV#236 : [a_a26E] | [$k__237;
                                        (len([VV#236]) >= 0)]}
bind 11 lq_anf__d27e : {lq_tmp_x_244 : [a_a26E] | [(lq_tmp_x_244 = ds_d27c);
                                                   (len([lq_tmp_x_244]) >= 0)]}
bind 12 lq_anf__d27e : {lq_tmp_x_247 : [a_a26E] | [(lq_tmp_x_247 = ds_d27c);
                                                   (len([lq_tmp_x_247]) >= 0);
                                                   (len([lq_tmp_x_247]) >= 0)]}
bind 13 lq_anf__d27e : {lq_tmp_x_247 : [a_a26E] | [(lq_tmp_x_247 = ds_d27c);
                                                   (len([lq_tmp_x_247]) >= 0);
                                                   (len([lq_tmp_x_247]) = 0);
                                                   ((? null([lq_tmp_x_247])) <=> true);
                                                   (lq_tmp_x_247 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (len([lq_tmp_x_247]) = 0);
                                                   ((? null([lq_tmp_x_247])) <=> true);
                                                   (len([lq_tmp_x_247]) >= 0)]}
bind 14 lq_anf__d27e : {lq_tmp_x_260 : [a_a26E] | [(lq_tmp_x_260 = ds_d27c);
                                                   (len([lq_tmp_x_260]) >= 0);
                                                   (len([lq_tmp_x_260]) >= 0)]}
bind 15 x#a26w : {VV#229 : a_a26E | [$k__230[VV#236:=lq_anf__d27e][lq_tmp_x_244:=lq_anf__d27e][lq_tmp_x_260:=lq_anf__d27e]]}
bind 16 ds_d27d : {lq_tmp_x_270 : [a_a26E] | [(len([lq_tmp_x_270]) >= 0)]}
bind 17 lq_anf__d27e : {lq_tmp_x_260 : [a_a26E] | [(lq_tmp_x_260 = ds_d27c);
                                                   (len([lq_tmp_x_260]) >= 0);
                                                   (len([lq_tmp_x_260]) = (1 + len([ds_d27d])));
                                                   ((? null([lq_tmp_x_260])) <=> false);
                                                   (xsListSelector([lq_tmp_x_260]) = ds_d27d);
                                                   (xListSelector([lq_tmp_x_260]) = x#a26w);
                                                   (lq_tmp_x_260 = fix#GHC.Types.#58##35#64([x#a26w;
                                                                                             ds_d27d]));
                                                   (len([lq_tmp_x_260]) = (1 + len([ds_d27d])));
                                                   ((? null([lq_tmp_x_260])) <=> false);
                                                   (xsListSelector([lq_tmp_x_260]) = ds_d27d);
                                                   (xListSelector([lq_tmp_x_260]) = x#a26w);
                                                   (len([lq_tmp_x_260]) >= 0)]}
bind 18 x#a26v : {VV#285 : t_a26N | [$k__286]}
bind 19 lq_tmp_x_307 : {VV : t_a26N | []}
bind 20 lq_anf__d27f : {lq_tmp_x_300 : [t_a26N] | [(len([lq_tmp_x_300]) = 0);
                                                   ((? null([lq_tmp_x_300])) <=> true);
                                                   (len([lq_tmp_x_300]) >= 0)]}
bind 21 lq_tmp_x_324 : {VV : t_a26N | []}
bind 22 lq_anf__d27g : {lq_tmp_x_340 : int | [(lq_tmp_x_340 = (0  :  int))]}
bind 23 lq_anf__d27h : {lq_tmp_x_346 : int | []}
bind 24 Range.xs#r25m : {VV#336 : [int] | [$k__337;
                                           (len([VV#336]) >= 0)]}
bind 25 lq_anf__d27i : {lq_tmp_x_365 : int | [(lq_tmp_x_365 = (1  :  int))]}
bind 26 lq_anf__d27j : {lq_tmp_x_372 : int | [$k__241[VV#240:=lq_tmp_x_372][ds_d27c:=Range.xs#r25m][lq_tmp_x_374:=Range.xs#r25m]]}
bind 27 lq_anf__d27k : {lq_tmp_x_385 : GHC.Types.Bool | [((? Prop([lq_tmp_x_385])) <=> (lq_anf__d27i = lq_anf__d27j))]}
bind 28 Range.prop2#r25o : {VV#361 : GHC.Types.Bool | [$k__362]}
bind 29 VV#407 : {VV#407 : GHC.Types.Bool | [(? Prop([VV#407]))]}
bind 30 VV#407 : {VV#407 : GHC.Types.Bool | [(? Prop([VV#407]))]}
bind 31 VV#410 : {VV#410 : GHC.Types.Bool | [(VV#410 = lq_anf__d27k)]}
bind 32 VV#410 : {VV#410 : GHC.Types.Bool | [(VV#410 = lq_anf__d27k)]}
bind 33 VV#413 : {VV#413 : int | [(VV#413 = lq_anf__d27j)]}
bind 34 VV#413 : {VV#413 : int | [(VV#413 = lq_anf__d27j)]}
bind 35 VV#416 : {VV#416 : int | [(VV#416 = lq_anf__d27i)]}
bind 36 VV#416 : {VV#416 : int | [(VV#416 = lq_anf__d27i)]}
bind 37 VV#419 : {VV#419 : [int] | [(VV#419 = Range.xs#r25m);
                                    (len([VV#419]) >= 0)]}
bind 38 VV#419 : {VV#419 : [int] | [(VV#419 = Range.xs#r25m);
                                    (len([VV#419]) >= 0)]}
bind 39 VV#422 : {VV#422 : int | [$k__330[VV#329:=VV#422][VV#336:=VV#419][lq_tmp_x_382:=VV#419][lq_tmp_x_379:=VV#422]]}
bind 40 VV#422 : {VV#422 : int | [$k__330[VV#329:=VV#422][VV#336:=VV#419][lq_tmp_x_382:=VV#419][lq_tmp_x_379:=VV#422]]}
bind 41 lq_tmp_x_370 : {VV#425 : int | []}
bind 42 VV#426 : {VV#426 : int | [$k__334[VV#333:=VV#426][lq_tmp_x_332:=lq_tmp_x_370][lq_tmp_x_380:=lq_tmp_x_370][lq_tmp_x_381:=VV#426]]}
bind 43 VV#426 : {VV#426 : int | [$k__334[VV#333:=VV#426][lq_tmp_x_332:=lq_tmp_x_370][lq_tmp_x_380:=lq_tmp_x_370][lq_tmp_x_381:=VV#426]]}
bind 44 VV#429 : {VV#429 : int | [(VV#429 = 1)]}
bind 45 VV#429 : {VV#429 : int | [(VV#429 = 1)]}
bind 46 VV#432 : {VV#432 : [int] | [$k__297[VV#296:=VV#432][x#a26v:=lq_anf__d27h][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432];
                                    (len([VV#432]) >= 0)]}
bind 47 VV#432 : {VV#432 : [int] | [$k__297[VV#296:=VV#432][x#a26v:=lq_anf__d27h][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432];
                                    (len([VV#432]) >= 0)]}
bind 48 VV#435 : {VV#435 : int | [$k__356[VV#355:=VV#435][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432][lq_tmp_x_358:=VV#435];
                                  $k__290[VV#296:=VV#432][x#a26v:=lq_anf__d27h][VV#289:=VV#435][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432][lq_tmp_x_358:=VV#435]]}
bind 49 VV#435 : {VV#435 : int | [$k__356[VV#355:=VV#435][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432][lq_tmp_x_358:=VV#435];
                                  $k__290[VV#296:=VV#432][x#a26v:=lq_anf__d27h][VV#289:=VV#435][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432][lq_tmp_x_358:=VV#435]]}
bind 50 lq_tmp_x_332 : {VV#438 : int | []}
bind 51 VV#439 : {VV#439 : int | [$k__294[lq_tmp_x_292:=lq_tmp_x_332][x#a26v:=lq_anf__d27h][VV#293:=VV#439][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_351:=lq_tmp_x_332][lq_tmp_x_358:=VV#439]]}
bind 52 VV#439 : {VV#439 : int | [$k__294[lq_tmp_x_292:=lq_tmp_x_332][x#a26v:=lq_anf__d27h][VV#293:=VV#439][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_351:=lq_tmp_x_332][lq_tmp_x_358:=VV#439]]}
bind 53 VV#442 : {VV#442 : int | [(VV#442 = lq_anf__d27h)]}
bind 54 VV#442 : {VV#442 : int | [(VV#442 = lq_anf__d27h)]}
bind 55 VV#445 : {VV#445 : int | [(VV#445 = lq_anf__d27g)]}
bind 56 VV#445 : {VV#445 : int | [(VV#445 = lq_anf__d27g)]}
bind 57 VV#448 : {VV#448 : int | [(VV#448 = 0)]}
bind 58 VV#448 : {VV#448 : int | [(VV#448 = 0)]}
bind 59 VV#451 : {VV#451 : [t_a26N] | [(len([VV#451]) = (1 + len([lq_anf__d27f])));
                                       ((? null([VV#451])) <=> false);
                                       (xsListSelector([VV#451]) = lq_anf__d27f);
                                       (xListSelector([VV#451]) = x#a26v);
                                       (len([VV#451]) >= 0)]}
bind 60 VV#451 : {VV#451 : [t_a26N] | [(len([VV#451]) = (1 + len([lq_anf__d27f])));
                                       ((? null([VV#451])) <=> false);
                                       (xsListSelector([VV#451]) = lq_anf__d27f);
                                       (xListSelector([VV#451]) = x#a26v);
                                       (len([VV#451]) >= 0)]}
bind 61 VV#318 : {VV#318 : t_a26N | [$k__319[lq_tmp_x_316:=x#a26v][lq_tmp_x_317:=lq_anf__d27f][lq_tmp_x_313:=VV#451]]}
bind 62 lq_tmp_x_292 : {VV : t_a26N | []}
bind 63 VV#318 : {VV#318 : t_a26N | [$k__322[lq_tmp_x_324:=lq_tmp_x_292][VV#321:=VV#318][lq_tmp_x_316:=x#a26v][lq_tmp_x_317:=lq_anf__d27f][lq_tmp_x_312:=lq_tmp_x_292]]}
bind 64 VV#457 : {VV#457 : [t_a26N] | [(VV#457 = lq_anf__d27f);
                                       (len([VV#457]) >= 0)]}
bind 65 VV#457 : {VV#457 : [t_a26N] | [(VV#457 = lq_anf__d27f);
                                       (len([VV#457]) >= 0)]}
bind 66 VV#301 : {VV#301 : t_a26N | [$k__302[lq_tmp_x_300:=VV#457][lq_tmp_x_327:=VV#457]]}
bind 67 lq_tmp_x_310 : {VV : t_a26N | []}
bind 68 VV#301 : {VV#301 : t_a26N | [$k__305[lq_tmp_x_307:=lq_tmp_x_310][VV#304:=VV#301][lq_tmp_x_299:=lq_tmp_x_310][lq_tmp_x_326:=lq_tmp_x_310]]}
bind 69 VV#285 : {VV#285 : t_a26N | [(VV#285 = x#a26v)]}
bind 70 VV#464 : {VV#464 : int | [(VV#464 = (1  :  int))]}
bind 71 VV#464 : {VV#464 : int | [(VV#464 = (1  :  int))]}
bind 72 VV#467 : {VV#467 : int | [(VV#467 = 1)]}
bind 73 VV#467 : {VV#467 : int | [(VV#467 = 1)]}
bind 74 VV#470 : {VV#470 : int | [(VV#470 = (0  :  int))]}
bind 75 VV#470 : {VV#470 : int | [(VV#470 = (0  :  int))]}
bind 76 VV#473 : {VV#473 : int | [(VV#473 = 0)]}
bind 77 VV#473 : {VV#473 : int | [(VV#473 = 0)]}
bind 78 VV#392 : {VV#392 : int | [$k__393]}
bind 79 VV#375 : {VV#375 : int | [$k__376]}
bind 80 VV#361 : {VV#361 : GHC.Types.Bool | [$k__362]}
bind 81 VV#355 : {VV#355 : int | [$k__356]}
bind 82 VV#336 : {VV#336 : [int] | [$k__337; (len([VV#336]) >= 0)]}
bind 83 VV#329 : {VV#329 : int | [$k__330]}
bind 84 lq_tmp_x_332 : {VV#482 : int | []}
bind 85 VV#333 : {VV#333 : int | [$k__334]}
bind 86 VV#296 : {VV#296 : [t_a26N] | [$k__297;
                                       (len([VV#296]) >= 0)]}
bind 87 lq_tmp_x_292 : {VV : t_a26N | []}
bind 88 VV#236 : {VV#236 : [a_a26E] | [$k__237;
                                       (len([VV#236]) >= 0)]}
bind 89 lq_tmp_x_232 : {VV : a_a26E | []}
bind 90 VV#240 : {VV#240 : int | [$k__241]}




constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 7; 8; 9; 60; 62; 63]
  grd true
  lhs {VV#F16 : t_a26N | [$k__322[lq_tmp_x_324:=lq_tmp_x_292][VV#321:=VV#F16][lq_tmp_x_316:=x#a26v][lq_tmp_x_317:=lq_anf__d27f][lq_tmp_x_312:=lq_tmp_x_292][VV#318:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : t_a26N | [$k__294[VV#293:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [2]
  // META constraint id 16 : meas1.hs:6:9-11


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 26; 27; 29]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__362[VV#361:=VV#F1][VV#407:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : meas1.hs:14:9-39


constraint:
  env [0; 1; 65; 2; 18; 66; 3; 4; 20; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F17 : t_a26N | [$k__302[lq_tmp_x_300:=VV#457][lq_tmp_x_327:=VV#457][VV#301:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : t_a26N | [$k__319[lq_tmp_x_316:=x#a26v][lq_tmp_x_311:=VV#457][VV#318:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [2]
  // META constraint id 17 : meas1.hs:6:9-11


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 26; 27; 31]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d27k)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [4]
  // META constraint id 2 : meas1.hs:14:24-38


constraint:
  env [0; 1; 65; 2; 18; 66; 3; 4; 20; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F18 : t_a26N | [$k__302[lq_tmp_x_300:=VV#457][lq_tmp_x_327:=VV#457][VV#301:=VV#F18][VV#F:=VV#F18]]}
  rhs {VV#F18 : t_a26N | [$k__322[lq_tmp_x_324:=x#a26v][VV#321:=VV#F18][lq_tmp_x_316:=x#a26v][lq_tmp_x_311:=VV#457][VV#318:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [2]
  // META constraint id 18 : meas1.hs:6:9-11


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 26]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = lq_anf__d27j)]}
  rhs {VV#F3 : int | [$k__393[VV#392:=VV#F3][lq_tmp_x_389:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_390:=lq_anf__d27i][lq_tmp_x_395:=VV#F3][VV#413:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : meas1.hs:14:29-38


constraint:
  env [0; 1; 65; 2; 18; 3; 67; 4; 20; 68; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F19 : t_a26N | [$k__305[lq_tmp_x_307:=lq_tmp_x_310][VV#304:=VV#F19][lq_tmp_x_299:=lq_tmp_x_310][lq_tmp_x_326:=lq_tmp_x_310][VV#301:=VV#F19][VV#F:=VV#F19]]}
  rhs {VV#F19 : t_a26N | [$k__322[lq_tmp_x_324:=lq_tmp_x_310][VV#321:=VV#F19][lq_tmp_x_316:=x#a26v][VV#318:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [2]
  // META constraint id 19 : meas1.hs:6:9-11


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 7; 8; 24; 9; 25; 26]
  grd true
  lhs {VV#F4 : int | [(VV#F4 = lq_anf__d27i)]}
  rhs {VV#F4 : int | [$k__393[VV#392:=VV#F4][lq_tmp_x_389:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_395:=VV#F4][VV#416:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : meas1.hs:14:24


constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 69; 6; 7; 8; 9]
  grd true
  lhs {VV#F20 : t_a26N | [(VV#F20 = x#a26v)]}
  rhs {VV#F20 : t_a26N | [$k__319[VV#318:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [2]
  // META constraint id 20 : meas1.hs:6:10


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 8; 24; 9; 25]
  grd true
  lhs {VV#F5 : [int] | [(VV#F5 = Range.xs#r25m);
                        (len([VV#F5]) >= 0)]}
  rhs {VV#F5 : [int] | [$k__237[VV#236:=VV#F5][lq_tmp_x_371:=VV#F5][VV#419:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : meas1.hs:14:37-38


constraint:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 70; 7; 8; 9; 10; 11; 14; 15]
  grd true
  lhs {VV#F21 : int | [(VV#F21 = (1  :  int))]}
  rhs {VV#F21 : int | [$k__241[VV#240:=VV#F21][VV#464:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [1]
  // META constraint id 21 : meas1.hs:12:17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 39; 8; 24; 9; 25]
  grd true
  lhs {VV#F6 : int | [$k__330[VV#329:=VV#F6][VV#336:=VV#419][lq_tmp_x_382:=VV#419][lq_tmp_x_379:=VV#F6][VV#422:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__376[VV#375:=VV#F6][lq_tmp_x_371:=VV#419][lq_tmp_x_378:=VV#F6][VV#422:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : meas1.hs:14:37-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 74; 11; 12; 13]
  grd true
  lhs {VV#F22 : int | [(VV#F22 = (0  :  int))]}
  rhs {VV#F22 : int | [$k__241[VV#240:=VV#F22][VV#470:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [1]
  // META constraint id 22 : meas1.hs:11:17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 39; 8; 24; 9; 25]
  grd true
  lhs {VV#F7 : int | [$k__330[VV#329:=VV#F7][VV#336:=VV#419][lq_tmp_x_382:=VV#419][lq_tmp_x_379:=VV#F7][VV#422:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : int | [$k__230[VV#236:=VV#419][VV#229:=VV#F7][lq_tmp_x_371:=VV#419][lq_tmp_x_378:=VV#F7][VV#422:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [4]
  // META constraint id 7 : meas1.hs:14:37-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 8; 24; 9; 25; 41; 42]
  grd true
  lhs {VV#F8 : int | [$k__334[VV#333:=VV#F8][lq_tmp_x_332:=lq_tmp_x_370][lq_tmp_x_380:=lq_tmp_x_370][lq_tmp_x_381:=VV#F8][VV#426:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__234[lq_tmp_x_232:=lq_tmp_x_370][VV#233:=VV#F8][lq_tmp_x_378:=VV#F8][VV#426:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [4]
  // META constraint id 8 : meas1.hs:14:37-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 9; 46]
  grd true
  lhs {VV#F9 : [int] | [$k__297[VV#296:=VV#F9][x#a26v:=lq_anf__d27h][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#F9][VV#432:=VV#F9][VV#F:=VV#F9];
                        (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [int] | [$k__337[VV#336:=VV#F9][VV#432:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : meas1.hs:8:6-19


constraint:
  env [0; 48; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 9; 47]
  grd true
  lhs {VV#F10 : int | [$k__356[VV#355:=VV#F10][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432][lq_tmp_x_358:=VV#F10][VV#435:=VV#F10][VV#F:=VV#F10];
                       $k__290[VV#296:=VV#432][x#a26v:=lq_anf__d27h][VV#289:=VV#F10][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_352:=VV#432][lq_tmp_x_358:=VV#F10][VV#435:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : int | [$k__330[VV#336:=VV#432][VV#329:=VV#F10][VV#435:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : meas1.hs:8:6-19


constraint:
  env [0; 1; 2; 50; 3; 51; 4; 5; 6; 22; 7; 23; 8; 9; 47]
  grd true
  lhs {VV#F11 : int | [$k__294[lq_tmp_x_292:=lq_tmp_x_332][x#a26v:=lq_anf__d27h][VV#293:=VV#F11][lq_tmp_x_354:=lq_anf__d27h][lq_tmp_x_351:=lq_tmp_x_332][lq_tmp_x_358:=VV#F11][VV#439:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__334[VV#333:=VV#F11][VV#439:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : meas1.hs:8:6-19


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 22; 7; 23; 8; 9]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = lq_anf__d27h)]}
  rhs {VV#F12 : int | [$k__356[VV#355:=VV#F12][lq_tmp_x_358:=VV#F12][VV#442:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : meas1.hs:8:11-18


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 22; 7; 23; 8; 9]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__d27h)]}
  rhs {VV#F13 : int | [$k__286[VV#285:=VV#F13][lq_tmp_x_358:=VV#F13][VV#442:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : meas1.hs:8:11-18


constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 7; 8; 9; 59]
  grd true
  lhs {VV#F14 : [t_a26N] | [(len([VV#F14]) = (1 + len([lq_anf__d27f])));
                            ((? null([VV#F14])) <=> false);
                            (xsListSelector([VV#F14]) = lq_anf__d27f);
                            (xListSelector([VV#F14]) = x#a26v);
                            (len([VV#F14]) >= 0)]}
  rhs {VV#F14 : [t_a26N] | [$k__297[VV#296:=VV#F14][VV#451:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [2]
  // META constraint id 14 : meas1.hs:6:9-11


constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 7; 8; 9; 60; 61]
  grd true
  lhs {VV#F15 : t_a26N | [$k__319[lq_tmp_x_316:=x#a26v][lq_tmp_x_317:=lq_anf__d27f][lq_tmp_x_313:=VV#451][VV#318:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : t_a26N | [$k__290[VV#296:=VV#451][VV#289:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [2]
  // META constraint id 15 : meas1.hs:6:9-11




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 26]
  reft {VV#392 : int | [$k__393]}
  
  // META wf  : meas1.hs:14:26-27


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25]
  reft {VV#375 : int | [$k__376]}
  
  // META wf  : meas1.hs:14:29-35


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9]
  reft {VV#361 : GHC.Types.Bool | [$k__362]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 9]
  reft {VV#355 : int | [$k__356]}
  
  // META wf  : meas1.hs:8:6-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#336 : [int] | [$k__337]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 82; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#329 : int | [$k__330]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 84; 5; 6; 7; 8; 9]
  reft {VV#333 : int | [$k__334]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#285 : t_a26N | [$k__286]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 20; 5; 21; 6; 7; 8; 9]
  reft {VV#321 : t_a26N | [$k__322]}
  
  // META wf  : meas1.hs:6:9-11


wf:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 7; 8; 9]
  reft {VV#318 : t_a26N | [$k__319]}
  
  // META wf  : meas1.hs:6:9-11


wf:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9]
  reft {VV#304 : t_a26N | [$k__305]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#301 : t_a26N | [$k__302]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#296 : [t_a26N] | [$k__297]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 86; 7; 8; 9]
  reft {VV#289 : t_a26N | [$k__290]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 87; 8; 9]
  reft {VV#293 : t_a26N | [$k__294]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#236 : [a_a26E] | [$k__237]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 88; 9]
  reft {VV#229 : a_a26E | [$k__230]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 89]
  reft {VV#233 : a_a26E | [$k__234]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#240 : int | [$k__241]}
  
  // META wf  : <no location info>







