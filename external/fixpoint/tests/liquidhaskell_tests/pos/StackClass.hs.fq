qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [(SClass.Foo  a_aMd)], fix##126#A0 : [(SClass.Foo  a_aMd)]): (eltss([v]) = eltss([fix##126#A0])) // "StackClass.hs" (line 11, column 1)
qualif Auto(VV : (SClass.Stack  a_aqv), fix##126#A0 : [a_aqv]): (elts([VV]) = listElts([fix##126#A0])) // "StackClass.hs" (line 5, column 16)
qualif Auto(VV : (SClass.Foo  a_aqu), fix##126#A0 : (SClass.Stack  a_aqu)): (elts([VV]) = elts([fix##126#A0])) // "StackClass.hs" (line 7, column 14)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [(SClass.Foo  a_aMd)], fix##126#A0 : [(SClass.Foo  a_aMd)]): (eltss([v]) = eltss([fix##126#A0])) // "StackClass.hs" (line 11, column 1)
qualif Auto(VV : (SClass.Stack  a_aqv), fix##126#A0 : [a_aqv]): (elts([VV]) = listElts([fix##126#A0])) // "StackClass.hs" (line 5, column 16)
qualif Auto(VV : (SClass.Foo  a_aqu), fix##126#A0 : (SClass.Stack  a_aqu)): (elts([VV]) = elts([fix##126#A0])) // "StackClass.hs" (line 7, column 14)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant Set_emp : (func(1, [(Set_Set  @(0)); bool]))
constant Set_empty : (func(1, [int; (Set_Set  @(0))]))
constant Set_cup : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant Set_sub : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             bool]))
constant autolen : (func(1, [@(0); int]))
constant SClass.F#rqn : (func(1, [(SClass.Stack  @(0));
                                  (SClass.Foo  @(0))]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant Set_dif : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant strLen : (func(0, [int; int]))
constant Set_cap : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant listElts : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_sng : (func(1, [@(0); (Set_Set  @(0))]))
constant Set_mem : (func(1, [@(0); (Set_Set  @(0)); bool]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant SClass.S#rqq : (func(1, [[@(0)]; (SClass.Stack  @(0))]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant eltss : (func(2, [[(@(0)  @(1))]; (Set_Set  @(1))]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant elts : (func(2, [(@(0)  @(1)); (Set_Set  @(1))]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant SClass.F#rqn : (func(1, [(SClass.Stack  @(0));
                                  (SClass.Foo  @(0))]))
constant SClass.S#rqq : (func(1, [[@(0)]; (SClass.Stack  @(0))]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 GHC.Types.EQ#6U : {VV#156 : GHC.Types.Ordering | [(VV#156 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#157 : GHC.Types.Ordering | [(VV#157 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#158 : GHC.Types.Ordering | [(VV#158 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#181 : GHC.Types.Ordering | [(cmp([VV#181]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#182 : GHC.Types.Ordering | [(cmp([VV#182]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#183 : GHC.Types.Ordering | [(cmp([VV#183]) = GHC.Types.GT#6W)]}
bind 9 lq_tmp_x_207 : {VV : a_aMd | []}
bind 10 lq_anf__dMy : {lq_tmp_x_200 : [a_aMd] | [(? Set_emp([listElts([lq_tmp_x_200])]));
                                                 (len([lq_tmp_x_200]) = 0);
                                                 ((? null([lq_tmp_x_200])) <=> true);
                                                 (len([lq_tmp_x_200]) >= 0)]}
bind 11 lq_anf__dMz : {lq_tmp_x_212 : (SClass.Stack  a_aMd) | [(elts([lq_tmp_x_212]) = listElts([lq_anf__dMy]))]}
bind 12 lq_anf__dMA : {lq_tmp_x_222 : (SClass.Foo  a_aMd) | [(elts([lq_tmp_x_222]) = elts([lq_anf__dMz]))]}
bind 13 lq_tmp_x_251 : {VV#252 : (SClass.Foo  a_aMd) | []}
bind 14 ds_dMw : {VV#256 : (SClass.Foo  a_aM2) | []}
bind 15 lq_anf__dMB : {lq_tmp_x_257 : (SClass.Foo  a_aM2) | [(lq_tmp_x_257 = ds_dMw)]}
bind 16 lq_anf__dMB : {lq_tmp_x_259 : (SClass.Foo  a_aM2) | [(lq_tmp_x_259 = ds_dMw)]}
bind 17 ds_dMx : {lq_tmp_x_264 : (SClass.Stack  a_aM2) | []}
bind 18 lq_anf__dMB : {lq_tmp_x_259 : (SClass.Foo  a_aM2) | [(lq_tmp_x_259 = ds_dMw);
                                                             (elts([lq_tmp_x_259]) = elts([ds_dMx]));
                                                             (lq_tmp_x_259 = SClass.F#rqn([ds_dMx]));
                                                             (elts([lq_tmp_x_259]) = elts([ds_dMx]))]}
bind 19 VV#272 : {VV#272 : (SClass.Stack  a_aM2) | [(VV#272 = ds_dMx)]}
bind 20 VV#272 : {VV#272 : (SClass.Stack  a_aM2) | [(VV#272 = ds_dMx)]}
bind 21 VV : {VV : a_aM2 | []}
bind 22 VV#277 : {VV#277 : [(SClass.Foo  a_aMd)] | [(len([VV#277]) >= 0)]}
bind 23 VV#277 : {VV#277 : [(SClass.Foo  a_aMd)] | [(len([VV#277]) >= 0)]}
bind 24 VV#280 : {VV#280 : (SClass.Foo  a_aMd) | []}
bind 25 VV#280 : {VV#280 : (SClass.Foo  a_aMd) | []}
bind 26 VV : {VV : a_aMd | []}
bind 27 lq_tmp_x_230 : {VV#284 : (SClass.Foo  a_aMd) | []}
bind 28 VV#285 : {VV#285 : (SClass.Foo  a_aMd) | []}
bind 29 VV#285 : {VV#285 : (SClass.Foo  a_aMd) | []}
bind 30 VV : {VV : a_aMd | []}
bind 31 lq_tmp_x_198 : {VV#289 : [(SClass.Foo  a_aMd)] | [(len([VV#289]) >= 0)]}
bind 32 VV#290 : {VV#290 : [(SClass.Foo  a_aMd)] | [(eltss([VV#290]) = Set_cup([elts([lq_anf__dMA]);
                                                                                eltss([lq_tmp_x_198])]));
                                                    (listElts([VV#290]) = Set_cup([Set_sng([lq_anf__dMA]);
                                                                                   listElts([lq_tmp_x_198])]));
                                                    (len([VV#290]) = (1 + len([lq_tmp_x_198])));
                                                    ((? null([VV#290])) <=> false);
                                                    (xsListSelector([VV#290]) = lq_tmp_x_198);
                                                    (xListSelector([VV#290]) = lq_anf__dMA);
                                                    (len([VV#290]) >= 0)]}
bind 33 VV#290 : {VV#290 : [(SClass.Foo  a_aMd)] | [(eltss([VV#290]) = Set_cup([elts([lq_anf__dMA]);
                                                                                eltss([lq_tmp_x_198])]));
                                                    (listElts([VV#290]) = Set_cup([Set_sng([lq_anf__dMA]);
                                                                                   listElts([lq_tmp_x_198])]));
                                                    (len([VV#290]) = (1 + len([lq_tmp_x_198])));
                                                    ((? null([VV#290])) <=> false);
                                                    (xsListSelector([VV#290]) = lq_tmp_x_198);
                                                    (xListSelector([VV#290]) = lq_anf__dMA);
                                                    (len([VV#290]) >= 0)]}
bind 34 VV#293 : {VV#293 : (SClass.Foo  a_aMd) | [$k__242[VV#241:=VV#293][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_237:=lq_tmp_x_198][lq_tmp_x_233:=VV#290][lq_tmp_x_244:=VV#293]]}
bind 35 VV#293 : {VV#293 : (SClass.Foo  a_aMd) | [$k__242[VV#241:=VV#293][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_237:=lq_tmp_x_198][lq_tmp_x_233:=VV#290][lq_tmp_x_244:=VV#293]]}
bind 36 VV#238 : {VV#238 : a_aMd | [$k__239[VV#241:=VV#293][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_237:=lq_tmp_x_198][lq_tmp_x_233:=VV#290][lq_tmp_x_244:=VV#293]]}
bind 37 fldList : {VV#297 : (SClass.Foo  a_aMd) | []}
bind 38 VV#298 : {VV#298 : (SClass.Foo  a_aMd) | [$k__249[lq_tmp_x_251:=fldList][VV#248:=VV#298][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_237:=lq_tmp_x_198][lq_tmp_x_232:=fldList][lq_tmp_x_244:=VV#298]]}
bind 39 VV#298 : {VV#298 : (SClass.Foo  a_aMd) | [$k__249[lq_tmp_x_251:=fldList][VV#248:=VV#298][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_237:=lq_tmp_x_198][lq_tmp_x_232:=fldList][lq_tmp_x_244:=VV#298]]}
bind 40 VV#238 : {VV#238 : a_aMd | [$k__246[lq_tmp_x_251:=fldList][VV#245:=VV#238][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_237:=lq_tmp_x_198][lq_tmp_x_232:=fldList][lq_tmp_x_244:=VV#298]]}
bind 41 VV#302 : {VV#302 : (SClass.Foo  a_aMd) | [(VV#302 = lq_anf__dMA)]}
bind 42 VV#302 : {VV#302 : (SClass.Foo  a_aMd) | [(VV#302 = lq_anf__dMA)]}
bind 43 VV#225 : {VV#225 : a_aMd | [$k__226[lq_tmp_x_224:=lq_anf__dMz][lq_tmp_x_222:=VV#302][lq_tmp_x_253:=VV#302]]}
bind 44 VV#306 : {VV#306 : (SClass.Stack  a_aMd) | [(VV#306 = lq_anf__dMz)]}
bind 45 VV#306 : {VV#306 : (SClass.Stack  a_aMd) | [(VV#306 = lq_anf__dMz)]}
bind 46 VV#215 : {VV#215 : a_aMd | [$k__216[lq_tmp_x_214:=lq_anf__dMy][lq_tmp_x_212:=VV#306][lq_tmp_x_228:=VV#306]]}
bind 47 VV#310 : {VV#310 : [a_aMd] | [(VV#310 = lq_anf__dMy);
                                      (len([VV#310]) >= 0)]}
bind 48 VV#310 : {VV#310 : [a_aMd] | [(VV#310 = lq_anf__dMy);
                                      (len([VV#310]) >= 0)]}
bind 49 VV#201 : {VV#201 : a_aMd | [$k__202[lq_tmp_x_200:=VV#310][lq_tmp_x_219:=VV#310]]}
bind 50 lq_tmp_x_210 : {VV : a_aMd | []}
bind 51 VV#201 : {VV#201 : a_aMd | [$k__205[lq_tmp_x_207:=lq_tmp_x_210][VV#204:=VV#201][lq_tmp_x_199:=lq_tmp_x_210][lq_tmp_x_218:=lq_tmp_x_210]]}
bind 52 VV#317 : {VV#317 : (SClass.Stack  a_aMj) | []}
bind 53 VV#317 : {VV#317 : (SClass.Stack  a_aMj) | []}
bind 54 VV : {VV : a_aMj | []}
bind 55 lq_tmp_x_189 : {VV#321 : (SClass.Stack  a_aMj) | []}
bind 56 VV#322 : {VV#322 : (SClass.Foo  a_aMj) | [(elts([VV#322]) = elts([lq_tmp_x_189]))]}
bind 57 VV#322 : {VV#322 : (SClass.Foo  a_aMj) | [(elts([VV#322]) = elts([lq_tmp_x_189]))]}
bind 58 VV#194 : {VV#194 : a_aMj | [$k__195[lq_tmp_x_193:=lq_tmp_x_189][lq_tmp_x_191:=VV#322]]}
bind 59 VV#248 : {VV#248 : (SClass.Foo  a_aMd) | [$k__249]}
bind 60 VV#241 : {VV#241 : (SClass.Foo  a_aMd) | [$k__242]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 10; 11; 12]
  grd true
  lhs {VV#F1 : (SClass.Foo  a_aMd) | []}
  rhs {VV#F1 : (SClass.Foo  a_aMd) | [$k__242[VV#241:=VV#F1][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_231:=VV#277][lq_tmp_x_244:=VV#F1][VV#280:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : StackClass.hs:11:8-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 10; 11; 12]
  grd true
  lhs {VV#F2 : (SClass.Foo  a_aMd) | []}
  rhs {VV#F2 : (SClass.Foo  a_aMd) | [$k__249[lq_tmp_x_251:=lq_anf__dMA][VV#248:=VV#F2][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_231:=VV#277][lq_tmp_x_244:=VV#F2][VV#280:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : StackClass.hs:11:8-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 25; 10; 26; 11; 12]
  grd true
  lhs {VV#F3 : a_aMd | []}
  rhs {VV#F3 : a_aMd | [$k__239[VV#241:=VV#280][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_231:=VV#277][lq_tmp_x_244:=VV#280][VV#238:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : StackClass.hs:11:8-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 25; 10; 26; 11; 12]
  grd true
  lhs {VV#F4 : a_aMd | []}
  rhs {VV#F4 : a_aMd | [$k__246[lq_tmp_x_251:=lq_anf__dMA][VV#245:=VV#F4][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_231:=VV#277][lq_tmp_x_244:=VV#280][VV#238:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : StackClass.hs:11:8-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 10; 11; 27; 12; 28]
  grd true
  lhs {VV#F5 : (SClass.Foo  a_aMd) | []}
  rhs {VV#F5 : (SClass.Foo  a_aMd) | [$k__249[lq_tmp_x_251:=lq_tmp_x_230][VV#248:=VV#F5][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_244:=VV#F5][VV#285:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : StackClass.hs:11:8-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 10; 11; 27; 12; 29; 30]
  grd true
  lhs {VV#F6 : a_aMd | []}
  rhs {VV#F6 : a_aMd | [$k__246[lq_tmp_x_251:=lq_tmp_x_230][VV#245:=VV#F6][lq_tmp_x_236:=lq_anf__dMA][lq_tmp_x_244:=VV#285][VV#238:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : StackClass.hs:11:8-16


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11; 12; 31]
  grd true
  lhs {VV#F7 : [(SClass.Foo  a_aMd)] | [(eltss([VV#F7]) = Set_cup([elts([lq_anf__dMA]);
                                                                   eltss([lq_tmp_x_198])]));
                                        (listElts([VV#F7]) = Set_cup([Set_sng([lq_anf__dMA]);
                                                                      listElts([lq_tmp_x_198])]));
                                        (len([VV#F7]) = (1 + len([lq_tmp_x_198])));
                                        ((? null([VV#F7])) <=> false);
                                        (xsListSelector([VV#F7]) = lq_tmp_x_198);
                                        (xListSelector([VV#F7]) = lq_anf__dMA);
                                        (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [(SClass.Foo  a_aMd)] | [(eltss([VV#F7]) = eltss([lq_tmp_x_198]))]}
  id 7 tag [2]
  // META constraint id 7 : StackClass.hs:11:8-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 41; 10; 11; 12]
  grd true
  lhs {VV#F8 : (SClass.Foo  a_aMd) | [(VV#F8 = lq_anf__dMA)]}
  rhs {VV#F8 : (SClass.Foo  a_aMd) | [$k__242[VV#241:=VV#F8][lq_tmp_x_244:=VV#F8][VV#302:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : StackClass.hs:11:8-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 42; 11; 43; 12]
  grd true
  lhs {VV#F9 : a_aMd | [$k__226[lq_tmp_x_224:=lq_anf__dMz][lq_tmp_x_222:=VV#302][lq_tmp_x_253:=VV#302][VV#225:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : a_aMd | [$k__239[VV#241:=VV#302][lq_tmp_x_244:=VV#302][VV#238:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]
  // META constraint id 9 : StackClass.hs:11:8-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11; 45; 46]
  grd true
  lhs {VV#F10 : a_aMd | [$k__216[lq_tmp_x_214:=lq_anf__dMy][lq_tmp_x_212:=VV#306][lq_tmp_x_228:=VV#306][VV#215:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : a_aMd | [$k__226[lq_tmp_x_221:=VV#306][VV#225:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : StackClass.hs:11:11-14


constraint:
  env [0; 48; 1; 49; 2; 3; 4; 5; 6; 7; 8; 10]
  grd true
  lhs {VV#F11 : a_aMd | [$k__202[lq_tmp_x_200:=VV#310][lq_tmp_x_219:=VV#310][VV#201:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : a_aMd | [$k__216[lq_tmp_x_211:=VV#310][VV#215:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : StackClass.hs:11:13-14


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 54; 7; 8]
  grd true
  lhs {VV#F12 : a_aMj | []}
  rhs {VV#F12 : a_aMj | [$k__195[lq_tmp_x_190:=VV#317][VV#194:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : StackClass.hs:13:7




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11; 12; 13]
  reft {VV#248 : (SClass.Foo  a_aMd) | [$k__249]}
  
  // META wf  : StackClass.hs:11:16


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11; 59; 12; 13]
  reft {VV#245 : a_aMd | [$k__246]}
  
  // META wf  : StackClass.hs:11:16


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11; 12]
  reft {VV#241 : (SClass.Foo  a_aMd) | [$k__242]}
  
  // META wf  : StackClass.hs:11:16


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11; 12; 60]
  reft {VV#238 : a_aMd | [$k__239]}
  
  // META wf  : StackClass.hs:11:16


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11]
  reft {VV#225 : a_aMd | [$k__226]}
  
  // META wf  : StackClass.hs:11:8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 10]
  reft {VV#215 : a_aMd | [$k__216]}
  
  // META wf  : StackClass.hs:11:11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#204 : a_aMd | [$k__205]}
  
  // META wf  : StackClass.hs:11:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#201 : a_aMd | [$k__202]}
  
  // META wf  : StackClass.hs:11:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#194 : a_aMj | [$k__195]}
  
  // META wf  : StackClass.hs:13:7







