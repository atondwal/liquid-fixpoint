qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int, fix##126#A0 : int): (v > fix##126#A0) // "Loo.hs" (line 9, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int, fix##126#A0 : int): (v > fix##126#A0) // "Loo.hs" (line 9, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Types.EQ#6U : {VV#152 : GHC.Types.Ordering | [(VV#152 = GHC.Types.EQ#6U)]}
bind 1 GHC.Types.LT#6S : {VV#153 : GHC.Types.Ordering | [(VV#153 = GHC.Types.LT#6S)]}
bind 2 GHC.Types.GT#6W : {VV#154 : GHC.Types.Ordering | [(VV#154 = GHC.Types.GT#6W)]}
bind 3 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 4 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 5 GHC.Types.EQ#6U : {VV#179 : GHC.Types.Ordering | [(cmp([VV#179]) = GHC.Types.EQ#6U)]}
bind 6 GHC.Types.LT#6S : {VV#180 : GHC.Types.Ordering | [(cmp([VV#180]) = GHC.Types.LT#6S)]}
bind 7 GHC.Types.GT#6W : {VV#181 : GHC.Types.Ordering | [(cmp([VV#181]) = GHC.Types.GT#6W)]}
bind 8 fix##36#dNum_aMy : {VV#187 : (GHC.Num.Num  a_aMx) | []}
bind 9 a_aMx : {VV : num | []}
bind 10 x#aMj : {VV : a_aMx | []}
bind 11 lq_anf__dN3 : {lq_tmp_x_189 : int | [(lq_tmp_x_189 = 1)]}
bind 12 lq_anf__dN4 : {VV : a_aMx | [(VV = lq_anf__dN3)]}
bind 13 x#aMi : {VV#212 : int | []}
bind 14 lq_anf__dN5 : {lq_tmp_x_214 : int | [(lq_tmp_x_214 > x#aMi)]}
bind 15 lq_tmp_x_241 : {VV#242 : int | []}
bind 16 lq_tmp_x_246 : {VV#247 : int | []}
bind 17 lq_tmp_x_251 : {VV#252 : int | []}
bind 18 xcmp : {lq_tmp_x_237 : int | [$k__235[VV#234:=lq_tmp_x_237]]}
bind 19 wcmp : {lq_tmp_x_229 : int | [$k__227[VV#226:=lq_tmp_x_229];
                                      $k__244[lq_tmp_x_246:=xcmp][VV#243:=lq_tmp_x_229]]}
bind 20 lq_tmp_x_280 : {VV#281 : int | []}
bind 21 lq_tmp_x_285 : {VV#286 : int | []}
bind 22 lq_tmp_x_290 : {VV#291 : int | []}
bind 23 xcmp : {lq_tmp_x_276 : int | [$k__274[VV#273:=lq_tmp_x_276]]}
bind 24 wcmp : {lq_tmp_x_268 : int | [$k__266[VV#265:=lq_tmp_x_268];
                                      $k__283[lq_tmp_x_285:=xcmp][VV#282:=lq_tmp_x_268]]}
bind 25 VV#304 : {VV#304 : int | []}
bind 26 VV#304 : {VV#304 : int | []}
bind 27 lq_tmp_x_264 : {VV#307 : int | []}
bind 28 VV#308 : {VV#308 : int | [$k__270[VV#269:=VV#308][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_264][lq_tmp_x_272:=VV#308];
                                  $k__278[lq_tmp_x_280:=lq_tmp_x_264][VV#277:=VV#308][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_264][lq_tmp_x_272:=VV#308]]}
bind 29 VV#308 : {VV#308 : int | [$k__270[VV#269:=VV#308][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_264][lq_tmp_x_272:=VV#308];
                                  $k__278[lq_tmp_x_280:=lq_tmp_x_264][VV#277:=VV#308][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_264][lq_tmp_x_272:=VV#308]]}
bind 30 VV#312 : {VV#312 : int | [$k__274[VV#273:=VV#312][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_x_276:=VV#312]]}
bind 31 VV#312 : {VV#312 : int | [$k__274[VV#273:=VV#312][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_x_276:=VV#312]]}
bind 32 zcmp : {lq_tmp_x_276 : int | [$k__274[VV#273:=lq_tmp_x_276][lq_tmp_db_6:=Moo.plusOne#rou]]}
bind 33 VV#316 : {VV#316 : int | []}
bind 34 VV#316 : {VV#316 : int | []}
bind 35 VV#320 : {VV#320 : int | [$k__266[VV#265:=VV#320][lq_tmp_x_268:=VV#320]]}
bind 36 VV#320 : {VV#320 : int | [$k__266[VV#265:=VV#320][lq_tmp_x_268:=VV#320]]}
bind 37 ycmp : {lq_tmp_x_268 : int | [$k__266[VV#265:=lq_tmp_x_268]]}
bind 38 VV#324 : {VV#324 : int | [(VV#324 > ycmp)]}
bind 39 VV#324 : {VV#324 : int | [(VV#324 > ycmp)]}
bind 40 VV#327 : {VV#327 : int | [$k__270[VV#269:=VV#327][lq_tmp_x_272:=VV#327];
                                  $k__288[lq_tmp_x_290:=wcmp][VV#287:=VV#327][lq_tmp_x_272:=VV#327]]}
bind 41 VV#327 : {VV#327 : int | [$k__270[VV#269:=VV#327][lq_tmp_x_272:=VV#327];
                                  $k__288[lq_tmp_x_290:=wcmp][VV#287:=VV#327][lq_tmp_x_272:=VV#327]]}
bind 42 VV#331 : {VV#331 : int | []}
bind 43 VV#331 : {VV#331 : int | []}
bind 44 lq_tmp_x_225 : {VV#334 : int | []}
bind 45 VV#335 : {VV#335 : int | [$k__231[VV#230:=VV#335][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_225][lq_tmp_x_233:=VV#335];
                                  $k__239[lq_tmp_x_241:=lq_tmp_x_225][VV#238:=VV#335][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_225][lq_tmp_x_233:=VV#335]]}
bind 46 VV#335 : {VV#335 : int | [$k__231[VV#230:=VV#335][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_225][lq_tmp_x_233:=VV#335];
                                  $k__239[lq_tmp_x_241:=lq_tmp_x_225][VV#238:=VV#335][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_db_7:=Goo.plusTwo#rKI][xcmp:=lq_tmp_x_225][lq_tmp_x_233:=VV#335]]}
bind 47 VV#339 : {VV#339 : int | [$k__235[VV#234:=VV#339][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_x_237:=VV#339]]}
bind 48 VV#339 : {VV#339 : int | [$k__235[VV#234:=VV#339][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_x_237:=VV#339]]}
bind 49 zcmp : {lq_tmp_x_237 : int | [$k__235[VV#234:=lq_tmp_x_237][lq_tmp_db_6:=Goo.plusTwo#rKI]]}
bind 50 VV#343 : {VV#343 : int | []}
bind 51 VV#343 : {VV#343 : int | []}
bind 52 VV#347 : {VV#347 : int | [$k__227[VV#226:=VV#347][lq_tmp_x_229:=VV#347]]}
bind 53 VV#347 : {VV#347 : int | [$k__227[VV#226:=VV#347][lq_tmp_x_229:=VV#347]]}
bind 54 ycmp : {lq_tmp_x_229 : int | [$k__227[VV#226:=lq_tmp_x_229]]}
bind 55 VV#351 : {VV#351 : int | []}
bind 56 VV#351 : {VV#351 : int | []}
bind 57 VV#354 : {VV#354 : int | [$k__231[VV#230:=VV#354][lq_tmp_x_233:=VV#354];
                                  $k__249[lq_tmp_x_251:=wcmp][VV#248:=VV#354][lq_tmp_x_233:=VV#354]]}
bind 58 VV#354 : {VV#354 : int | [$k__231[VV#230:=VV#354][lq_tmp_x_233:=VV#354];
                                  $k__249[lq_tmp_x_251:=wcmp][VV#248:=VV#354][lq_tmp_x_233:=VV#354]]}
bind 59 VV#357 : {VV#357 : int | [(VV#357 > lq_anf__dN5)]}
bind 60 VV#357 : {VV#357 : int | [(VV#357 > lq_anf__dN5)]}
bind 61 VV#360 : {VV#360 : int | [(VV#360 = lq_anf__dN5)]}
bind 62 VV#360 : {VV#360 : int | [(VV#360 = lq_anf__dN5)]}
bind 63 VV#363 : {VV#363 : int | [(VV#363 = x#aMi)]}
bind 64 VV#363 : {VV#363 : int | [(VV#363 = x#aMi)]}
bind 65 VV : {VV : a_aMx | [(VV = (x#aMj + lq_anf__dN4))]}
bind 66 VV : {VV : a_aMx | [(VV = lq_anf__dN4)]}
bind 67 VV : {VV : a_aMx | [(VV = x#aMj)]}
bind 68 VV#369 : {VV#369 : int | [(VV#369 = lq_anf__dN3)]}
bind 69 VV#369 : {VV#369 : int | [(VV#369 = lq_anf__dN3)]}
bind 70 VV#287 : {VV#287 : int | [$k__288]}
bind 71 VV#282 : {VV#282 : int | [$k__283]}
bind 72 VV#277 : {VV#277 : int | [$k__278]}
bind 73 VV#273 : {VV#273 : int | [$k__274]}
bind 74 VV#269 : {VV#269 : int | [$k__270]}
bind 75 VV#265 : {VV#265 : int | [$k__266]}
bind 76 VV#248 : {VV#248 : int | [$k__249]}
bind 77 VV#243 : {VV#243 : int | [$k__244]}
bind 78 VV#238 : {VV#238 : int | [$k__239]}
bind 79 VV#234 : {VV#234 : int | [$k__235]}
bind 80 VV#230 : {VV#230 : int | [$k__231]}
bind 81 VV#226 : {VV#226 : int | [$k__227]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 25]
  grd true
  lhs {VV#F1 : int | []}
  rhs {VV#F1 : int | [$k__274[VV#273:=VV#F1][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_db_7:=Goo.plusTwo#rKI][lq_tmp_x_276:=VV#F1][VV#304:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : Loo.hs:5:13-33


constraint:
  env [0; 32; 1; 33; 2; 3; 4; 5; 6; 7]
  grd true
  lhs {VV#F2 : int | []}
  rhs {VV#F2 : int | [$k__266[VV#265:=VV#F2][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_x_268:=VV#F2][VV#316:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [4]
  // META constraint id 2 : Loo.hs:5:25-33


constraint:
  env [0; 32; 1; 33; 2; 3; 4; 5; 6; 7]
  grd true
  lhs {VV#F3 : int | []}
  rhs {VV#F3 : int | [$k__283[lq_tmp_x_285:=zcmp][VV#282:=VV#F3][lq_tmp_db_6:=Moo.plusOne#rou][lq_tmp_x_268:=VV#F3][VV#316:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : Loo.hs:5:25-33


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 38; 7]
  grd true
  lhs {VV#F4 : int | [(VV#F4 > ycmp)]}
  rhs {VV#F4 : int | [$k__270[VV#269:=VV#F4][lq_tmp_x_272:=VV#F4][VV#324:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : Loo.hs:5:13-21


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 38; 7]
  grd true
  lhs {VV#F5 : int | [(VV#F5 > ycmp)]}
  rhs {VV#F5 : int | [$k__288[lq_tmp_x_290:=ycmp][VV#287:=VV#F5][lq_tmp_x_272:=VV#F5][VV#324:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : Loo.hs:5:13-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 24; 40]
  grd true
  lhs {VV#F6 : int | [$k__270[VV#269:=VV#F6][lq_tmp_x_272:=VV#F6][VV#327:=VV#F6][VV#F:=VV#F6];
                      $k__288[lq_tmp_x_290:=wcmp][VV#287:=VV#F6][lq_tmp_x_272:=VV#F6][VV#327:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__270[VV#269:=VV#F6][lq_tmp_x_272:=VV#F6][VV#327:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : Loo.hs:5:13-33


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 24; 40]
  grd true
  lhs {VV#F7 : int | [$k__270[VV#269:=VV#F7][lq_tmp_x_272:=VV#F7][VV#327:=VV#F7][VV#F:=VV#F7];
                      $k__288[lq_tmp_x_290:=wcmp][VV#287:=VV#F7][lq_tmp_x_272:=VV#F7][VV#327:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : int | [$k__278[lq_tmp_x_280:=xcmp][VV#277:=VV#F7][lq_tmp_x_272:=VV#F7][VV#327:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [4]
  // META constraint id 7 : Loo.hs:5:13-33


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 42]
  grd true
  lhs {VV#F8 : int | []}
  rhs {VV#F8 : int | [$k__235[VV#234:=VV#F8][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_db_7:=Goo.plusTwo#rKI][lq_tmp_x_237:=VV#F8][VV#331:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : Loo.hs:6:13-33


constraint:
  env [0; 1; 49; 2; 50; 3; 4; 5; 6; 7]
  grd true
  lhs {VV#F9 : int | []}
  rhs {VV#F9 : int | [$k__227[VV#226:=VV#F9][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_x_229:=VV#F9][VV#343:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : Loo.hs:6:25-33


constraint:
  env [0; 1; 49; 2; 50; 3; 4; 5; 6; 7]
  grd true
  lhs {VV#F10 : int | []}
  rhs {VV#F10 : int | [$k__244[lq_tmp_x_246:=zcmp][VV#243:=VV#F10][lq_tmp_db_6:=Goo.plusTwo#rKI][lq_tmp_x_229:=VV#F10][VV#343:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : Loo.hs:6:25-33


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 54; 7; 55]
  grd true
  lhs {VV#F11 : int | []}
  rhs {VV#F11 : int | [$k__231[VV#230:=VV#F11][lq_tmp_x_233:=VV#F11][VV#351:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : Loo.hs:6:13-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 54; 7; 55]
  grd true
  lhs {VV#F12 : int | []}
  rhs {VV#F12 : int | [$k__249[lq_tmp_x_251:=ycmp][VV#248:=VV#F12][lq_tmp_x_233:=VV#F12][VV#351:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : Loo.hs:6:13-21


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 57]
  grd true
  lhs {VV#F13 : int | [$k__231[VV#230:=VV#F13][lq_tmp_x_233:=VV#F13][VV#354:=VV#F13][VV#F:=VV#F13];
                       $k__249[lq_tmp_x_251:=wcmp][VV#248:=VV#F13][lq_tmp_x_233:=VV#F13][VV#354:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : int | [$k__231[VV#230:=VV#F13][lq_tmp_x_233:=VV#F13][VV#354:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : Loo.hs:6:13-33


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 57]
  grd true
  lhs {VV#F14 : int | [$k__231[VV#230:=VV#F14][lq_tmp_x_233:=VV#F14][VV#354:=VV#F14][VV#F:=VV#F14];
                       $k__249[lq_tmp_x_251:=wcmp][VV#248:=VV#F14][lq_tmp_x_233:=VV#F14][VV#354:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : int | [$k__239[lq_tmp_x_241:=xcmp][VV#238:=VV#F14][lq_tmp_x_233:=VV#F14][VV#354:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [3]
  // META constraint id 14 : Loo.hs:6:13-33


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 59; 13; 14]
  grd true
  lhs {VV#F15 : int | [(VV#F15 > lq_anf__dN5)]}
  rhs {VV#F15 : int | [(VV#F15 > x#aMi)]}
  id 15 tag [2]
  // META constraint id 15 : Loo.hs:9:13-35




wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7]
  reft {VV#287 : int | [$k__288]}
  
  // META wf  : Loo.hs:5:23


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7]
  reft {VV#282 : int | [$k__283]}
  
  // META wf  : Loo.hs:5:23


wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7]
  reft {VV#277 : int | [$k__278]}
  
  // META wf  : Loo.hs:5:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#273 : int | [$k__274]}
  
  // META wf  : Loo.hs:5:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#269 : int | [$k__270]}
  
  // META wf  : Loo.hs:5:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#265 : int | [$k__266]}
  
  // META wf  : Loo.hs:5:23


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7]
  reft {VV#248 : int | [$k__249]}
  
  // META wf  : Loo.hs:6:23


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#243 : int | [$k__244]}
  
  // META wf  : Loo.hs:6:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 15]
  reft {VV#238 : int | [$k__239]}
  
  // META wf  : Loo.hs:6:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#234 : int | [$k__235]}
  
  // META wf  : Loo.hs:6:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#230 : int | [$k__231]}
  
  // META wf  : Loo.hs:6:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#226 : int | [$k__227]}
  
  // META wf  : Loo.hs:6:23







