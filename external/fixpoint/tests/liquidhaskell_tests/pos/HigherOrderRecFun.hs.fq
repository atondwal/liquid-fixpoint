qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)


cut $k__148
cut $k__155
cut $k__152
cut $k__169
cut $k__159
cut $k__162
cut $k__166


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 GHC.Types.EQ#6U : {VV#116 : GHC.Types.Ordering | [(VV#116 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#117 : GHC.Types.Ordering | [(VV#117 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#118 : GHC.Types.Ordering | [(VV#118 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#141 : GHC.Types.Ordering | [(cmp([VV#141]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#142 : GHC.Types.Ordering | [(cmp([VV#142]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#143 : GHC.Types.Ordering | [(cmp([VV#143]) = GHC.Types.GT#6W)]}
bind 9 ds_dKG : {VV#154 : [a_aKx] | [$k__155;
                                     (len([VV#154]) >= 0)]}
bind 10 lq_anf__dKH : {lq_tmp_x_183 : [a_aKx] | [(lq_tmp_x_183 = ds_dKG);
                                                 (len([lq_tmp_x_183]) >= 0)]}
bind 11 lq_anf__dKH : {lq_tmp_x_186 : [a_aKx] | [(lq_tmp_x_186 = ds_dKG);
                                                 (len([lq_tmp_x_186]) >= 0);
                                                 (len([lq_tmp_x_186]) >= 0)]}
bind 12 lq_anf__dKH : {lq_tmp_x_186 : [a_aKx] | [(lq_tmp_x_186 = ds_dKG);
                                                 (len([lq_tmp_x_186]) >= 0);
                                                 (len([lq_tmp_x_186]) = 0);
                                                 ((? null([lq_tmp_x_186])) <=> true);
                                                 (lq_tmp_x_186 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (len([lq_tmp_x_186]) = 0);
                                                 ((? null([lq_tmp_x_186])) <=> true);
                                                 (len([lq_tmp_x_186]) >= 0)]}
bind 13 lq_anf__dKH : {lq_tmp_x_196 : [a_aKx] | [(lq_tmp_x_196 = ds_dKG);
                                                 (len([lq_tmp_x_196]) >= 0);
                                                 (len([lq_tmp_x_196]) >= 0)]}
bind 14 x#aKh : {VV : a_aKx | [$k__148[VV#147:=VV][VV#154:=lq_anf__dKH][lq_tmp_x_183:=lq_anf__dKH][lq_tmp_x_196:=lq_anf__dKH]]}
bind 15 xs#aKi : {lq_tmp_x_206 : [a_aKx] | [(len([lq_tmp_x_206]) >= 0)]}
bind 16 lq_anf__dKH : {lq_tmp_x_196 : [a_aKx] | [(lq_tmp_x_196 = ds_dKG);
                                                 (len([lq_tmp_x_196]) >= 0);
                                                 (len([lq_tmp_x_196]) = (1 + len([xs#aKi])));
                                                 ((? null([lq_tmp_x_196])) <=> false);
                                                 (xsListSelector([lq_tmp_x_196]) = xs#aKi);
                                                 (xListSelector([lq_tmp_x_196]) = x#aKh);
                                                 (lq_tmp_x_196 = fix#GHC.Types.#58##35#64([x#aKh;
                                                                                           xs#aKi]));
                                                 (len([lq_tmp_x_196]) = (1 + len([xs#aKi])));
                                                 ((? null([lq_tmp_x_196])) <=> false);
                                                 (xsListSelector([lq_tmp_x_196]) = xs#aKi);
                                                 (xListSelector([lq_tmp_x_196]) = x#aKh);
                                                 (len([lq_tmp_x_196]) >= 0)]}
bind 17 VV : {VV : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg]]}
bind 18 lq_tmp_x_178 : {VV : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg]]}
bind 19 VV#231 : {VV#231 : c_aKz | [$k__232[lq_tmp_x_176:=xs#aKi][lq_tmp_x_177:=f#aKg][lq_tmp_x_178:=lq_tmp_x_178];
                                    $k__169[ds_dKG:=xs#aKi][f#aKg:=f#aKg][lq_tmp_x_164:=lq_tmp_x_178][lq_tmp_x_172:=xs#aKi][lq_tmp_x_173:=f#aKg][lq_tmp_x_174:=lq_tmp_x_178][VV#168:=VV#231][lq_tmp_x_176:=xs#aKi][lq_tmp_x_177:=f#aKg][lq_tmp_x_178:=lq_tmp_x_178]]}
bind 20 VV#228 : {VV#228 : b_aKy | [$k__229[lq_tmp_x_176:=xs#aKi];
                                    $k__159[ds_dKG:=xs#aKi][lq_tmp_x_172:=xs#aKi][VV#158:=VV#228][lq_tmp_x_176:=xs#aKi]]}
bind 21 lq_tmp_x_175 : {VV#228 : b_aKy | [$k__229[lq_tmp_x_176:=xs#aKi];
                                          $k__159[ds_dKG:=xs#aKi][lq_tmp_x_172:=xs#aKi][VV#158:=VV#228][lq_tmp_x_176:=xs#aKi]]}
bind 22 VV : {VV : c_aKz | [$k__162[lq_tmp_x_157:=lq_tmp_x_175][ds_dKG:=ds_dKG][lq_tmp_x_171:=lq_tmp_x_175][lq_tmp_x_172:=ds_dKG][VV#161:=VV][lq_tmp_x_176:=ds_dKG][lq_tmp_x_175:=lq_tmp_x_175][lq_tmp_x_237:=lq_tmp_x_175]]}
bind 23 VV#246 : {VV#246 : [a_aKx] | [(VV#246 = xs#aKi);
                                      (len([VV#246]) >= 0)]}
bind 24 VV#246 : {VV#246 : [a_aKx] | [(VV#246 = xs#aKi);
                                      (len([VV#246]) >= 0)]}
bind 25 VV : {VV : a_aKx | [$k__148[VV#147:=VV][VV#154:=lq_anf__dKH][lq_tmp_x_183:=lq_anf__dKH][lq_tmp_x_196:=lq_anf__dKH][lq_tmp_x_203:=x#aKh][lq_tmp_x_206:=VV#246][lq_tmp_x_235:=VV#246];
                            $k__152[VV#151:=VV][lq_tmp_x_150:=x#aKh][lq_tmp_x_182:=x#aKh][lq_tmp_x_195:=x#aKh][lq_tmp_x_203:=x#aKh][lq_tmp_x_206:=VV#246][lq_tmp_x_235:=VV#246]]}
bind 26 lq_tmp_x_150 : {VV : a_aKx | []}
bind 27 VV : {VV : a_aKx | [$k__152[VV#151:=VV][lq_tmp_x_150:=lq_tmp_x_150][lq_tmp_x_182:=lq_tmp_x_150][lq_tmp_x_195:=lq_tmp_x_150][lq_tmp_x_203:=x#aKh][lq_tmp_x_205:=lq_tmp_x_150][lq_tmp_x_234:=lq_tmp_x_150]]}
bind 28 VV : {VV : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg]]}
bind 29 lq_tmp_x_178 : {VV : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg]]}
bind 30 VV : {VV : c_aKz | [$k__162[lq_tmp_x_157:=lq_tmp_x_178][ds_dKG:=ds_dKG][lq_tmp_x_171:=lq_tmp_x_178][lq_tmp_x_172:=ds_dKG][VV#161:=VV][lq_tmp_x_176:=ds_dKG][lq_tmp_x_175:=lq_tmp_x_178][lq_tmp_x_194:=lq_tmp_x_178]]}
bind 31 VV#154 : {VV#154 : [a_aKx] | [$k__155;
                                      (len([VV#154]) >= 0)]}
bind 32 lq_tmp_x_150 : {VV : a_aKx | []}
bind 33 ds_dKG : {VV#154 : [a_aKx] | [$k__155;
                                      (len([VV#154]) >= 0)]}
bind 34 lq_tmp_x_157 : {VV#158 : b_aKy | [$k__159]}
bind 35 lq_tmp_x_164 : {VV#165 : b_aKy | [$k__166]}




constraint:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F1 : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV#F1][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg][VV:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : b_aKy | [$k__229[lq_tmp_x_176:=xs#aKi][lq_tmp_x_177:=f#aKg][VV#228:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]
  // META constraint id 1 : HigherOrderRecFun.hs:5:16-23


constraint:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F2 : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV#F2][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg][VV:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : b_aKy | [$k__166[ds_dKG:=xs#aKi][f#aKg:=f#aKg][lq_tmp_x_172:=xs#aKi][lq_tmp_x_173:=f#aKg][VV#165:=VV#F2][lq_tmp_x_176:=xs#aKi][lq_tmp_x_177:=f#aKg][VV#228:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [1]
  // META constraint id 2 : HigherOrderRecFun.hs:5:16-23


constraint:
  env [0; 16; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F3 : c_aKz | [$k__232[lq_tmp_x_176:=xs#aKi][lq_tmp_x_177:=f#aKg][lq_tmp_x_178:=lq_tmp_x_178][VV#231:=VV#F3][VV#F:=VV#F3];
                        $k__169[ds_dKG:=xs#aKi][f#aKg:=f#aKg][lq_tmp_x_164:=lq_tmp_x_178][lq_tmp_x_172:=xs#aKi][lq_tmp_x_173:=f#aKg][lq_tmp_x_174:=lq_tmp_x_178][VV#168:=VV#F3][lq_tmp_x_176:=xs#aKi][lq_tmp_x_177:=f#aKg][lq_tmp_x_178:=lq_tmp_x_178][VV#231:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : c_aKz | [$k__169[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_164:=lq_tmp_x_178][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][lq_tmp_x_174:=lq_tmp_x_178][VV#168:=VV#F3][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg][VV:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : HigherOrderRecFun.hs:5:16-23


constraint:
  env [0; 16; 1; 2; 3; 4; 20; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F4 : b_aKy | [$k__229[lq_tmp_x_176:=xs#aKi][VV#228:=VV#F4][VV#F:=VV#F4];
                        $k__159[ds_dKG:=xs#aKi][lq_tmp_x_172:=xs#aKi][VV#158:=VV#F4][lq_tmp_x_176:=xs#aKi][VV#228:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : b_aKy | [$k__159[ds_dKG:=ds_dKG][lq_tmp_x_172:=ds_dKG][VV#158:=VV#F4][lq_tmp_x_176:=ds_dKG][VV:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : HigherOrderRecFun.hs:5:23


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F5 : c_aKz | [$k__162[lq_tmp_x_157:=lq_tmp_x_175][ds_dKG:=ds_dKG][lq_tmp_x_171:=lq_tmp_x_175][lq_tmp_x_172:=ds_dKG][VV#161:=VV#F5][lq_tmp_x_176:=ds_dKG][lq_tmp_x_175:=lq_tmp_x_175][lq_tmp_x_237:=lq_tmp_x_175][VV:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : c_aKz | [$k__232[lq_tmp_x_176:=xs#aKi][VV#231:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]
  // META constraint id 5 : HigherOrderRecFun.hs:5:23


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F6 : c_aKz | [$k__162[lq_tmp_x_157:=lq_tmp_x_175][ds_dKG:=ds_dKG][lq_tmp_x_171:=lq_tmp_x_175][lq_tmp_x_172:=ds_dKG][VV#161:=VV#F6][lq_tmp_x_176:=ds_dKG][lq_tmp_x_175:=lq_tmp_x_175][lq_tmp_x_237:=lq_tmp_x_175][VV:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : c_aKz | [$k__162[lq_tmp_x_157:=lq_tmp_x_175][ds_dKG:=xs#aKi][lq_tmp_x_171:=lq_tmp_x_175][lq_tmp_x_172:=xs#aKi][VV#161:=VV#F6][lq_tmp_x_176:=xs#aKi][VV#231:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : HigherOrderRecFun.hs:5:23


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F7 : [a_aKx] | [(VV#F7 = xs#aKi); (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [a_aKx] | [$k__155[VV#154:=VV#F7][VV#246:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : HigherOrderRecFun.hs:5:20-21


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F8 : [a_aKx] | [(VV#F8 = xs#aKi); (len([VV#F8]) >= 0)]}
  rhs {VV#F8 : [a_aKx] | [(len([VV#F8]) < len([ds_dKG]))]}
  id 8 tag [1]
  // META constraint id 8 : HigherOrderRecFun.hs:5:20-21


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 10; 13; 14; 15]
  grd true
  lhs {VV#F9 : [a_aKx] | [(VV#F9 = xs#aKi); (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [a_aKx] | [(len([VV#F9]) >= 0)]}
  id 9 tag [1]
  // META constraint id 9 : HigherOrderRecFun.hs:5:20-21


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 10; 13; 14; 15]
  grd true
  lhs {VV#F10 : a_aKx | [$k__148[VV#147:=VV#F10][VV#154:=lq_anf__dKH][lq_tmp_x_183:=lq_anf__dKH][lq_tmp_x_196:=lq_anf__dKH][lq_tmp_x_203:=x#aKh][lq_tmp_x_206:=VV#246][lq_tmp_x_235:=VV#246][VV:=VV#F10][VV#F:=VV#F10];
                         $k__152[VV#151:=VV#F10][lq_tmp_x_150:=x#aKh][lq_tmp_x_182:=x#aKh][lq_tmp_x_195:=x#aKh][lq_tmp_x_203:=x#aKh][lq_tmp_x_206:=VV#246][lq_tmp_x_235:=VV#246][VV:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : a_aKx | [$k__226[VV#154:=VV#246][VV#225:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : HigherOrderRecFun.hs:5:20-21


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 10; 13; 14; 15]
  grd true
  lhs {VV#F11 : a_aKx | [$k__148[VV#147:=VV#F11][VV#154:=lq_anf__dKH][lq_tmp_x_183:=lq_anf__dKH][lq_tmp_x_196:=lq_anf__dKH][lq_tmp_x_203:=x#aKh][lq_tmp_x_206:=VV#246][lq_tmp_x_235:=VV#246][VV:=VV#F11][VV#F:=VV#F11];
                         $k__152[VV#151:=VV#F11][lq_tmp_x_150:=x#aKh][lq_tmp_x_182:=x#aKh][lq_tmp_x_195:=x#aKh][lq_tmp_x_203:=x#aKh][lq_tmp_x_206:=VV#246][lq_tmp_x_235:=VV#246][VV:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : a_aKx | [$k__148[VV#147:=VV#F11][VV#154:=VV#246][VV#225:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : HigherOrderRecFun.hs:5:20-21


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26; 27; 13; 14; 15]
  grd true
  lhs {VV#F12 : a_aKx | [$k__152[VV#151:=VV#F12][lq_tmp_x_150:=lq_tmp_x_150][lq_tmp_x_182:=lq_tmp_x_150][lq_tmp_x_195:=lq_tmp_x_150][lq_tmp_x_203:=x#aKh][lq_tmp_x_205:=lq_tmp_x_150][lq_tmp_x_234:=lq_tmp_x_150][VV:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : a_aKx | [$k__152[VV#151:=VV#F12][VV#225:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : HigherOrderRecFun.hs:5:20-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28]
  grd true
  lhs {VV#F13 : b_aKy | [$k__166[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][VV#165:=VV#F13][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg][VV:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : b_aKy | [$k__159[ds_dKG:=ds_dKG][lq_tmp_x_172:=ds_dKG][VV#158:=VV#F13][lq_tmp_x_176:=ds_dKG][VV:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : HigherOrderRecFun.hs:4:16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 29; 30]
  grd true
  lhs {VV#F14 : c_aKz | [$k__162[lq_tmp_x_157:=lq_tmp_x_178][ds_dKG:=ds_dKG][lq_tmp_x_171:=lq_tmp_x_178][lq_tmp_x_172:=ds_dKG][VV#161:=VV#F14][lq_tmp_x_176:=ds_dKG][lq_tmp_x_175:=lq_tmp_x_178][lq_tmp_x_194:=lq_tmp_x_178][VV:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : c_aKz | [$k__169[ds_dKG:=ds_dKG][f#aKg:=f#aKg][lq_tmp_x_164:=lq_tmp_x_178][lq_tmp_x_172:=ds_dKG][lq_tmp_x_173:=f#aKg][lq_tmp_x_174:=lq_tmp_x_178][VV#168:=VV#F14][lq_tmp_x_176:=ds_dKG][lq_tmp_x_177:=f#aKg][VV:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : HigherOrderRecFun.hs:4:16




wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  reft {VV#231 : c_aKz | [$k__232]}
  
  // META wf  : HigherOrderRecFun.hs:5:16-18


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  reft {VV#228 : b_aKy | [$k__229]}
  
  // META wf  : HigherOrderRecFun.hs:5:16-18


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  reft {VV#225 : a_aKx | [$k__226]}
  
  // META wf  : HigherOrderRecFun.hs:5:16-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#154 : [a_aKx] | [$k__155]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 31]
  reft {VV#147 : a_aKx | [$k__148]}
  
  // META wf  : <no location info>


wf:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#151 : a_aKx | [$k__152]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#158 : b_aKy | [$k__159]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 33; 2; 34; 3; 4; 5; 6; 7; 8]
  reft {VV#161 : c_aKz | [$k__162]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#165 : b_aKy | [$k__166]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8]
  reft {VV#168 : c_aKz | [$k__169]}
  
  // META wf  : <no location info>







