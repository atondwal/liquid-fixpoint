qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "tyfam0.hs" (line 17, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "tyfam0.hs" (line 17, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Err.undefined#02v : {VV : func(1, [@(0)]) | []}
bind 1 GHC.Types.EQ#6U : {VV#90 : GHC.Types.Ordering | [(VV#90 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#91 : GHC.Types.Ordering | [(VV#91 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#92 : GHC.Types.Ordering | [(VV#92 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#116 : GHC.Types.Ordering | [(cmp([VV#116]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#117 : GHC.Types.Ordering | [(cmp([VV#117]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#118 : GHC.Types.Ordering | [(cmp([VV#118]) = GHC.Types.GT#6W)]}
bind 9 fix##36#dPrimMonad_aVv : {VV#153 : (Control.Monad.Primitive.PrimMonad  m_aVr) | []}
bind 10 fix##36#dMVector_aVw : {VV#154 : (Data.Vector.Generic.Mutable.MVector  v_aVq  e_aVs) | []}
bind 11 VV : {VV : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | []}
bind 12 VV : {VV : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | []}
bind 13 VV : {VV : v_aVq | []}
bind 14 VV#235 : {VV#235 : (Control.Monad.Primitive.PrimState  m_aVr) | []}
bind 15 VV#235 : {VV#235 : (Control.Monad.Primitive.PrimState  m_aVr) | []}
bind 16 VV : {VV : m_aVr | []}
bind 17 VV#159 : {VV#159 : m_aVr | [$k__160[VV#162:=VV#235][lq_tmp_x_214:=VV#235]]}
bind 18 VV#240 : {VV#240 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__163[VV#162:=VV#240][lq_tmp_x_214:=VV#240]]}
bind 19 VV#240 : {VV#240 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__163[VV#162:=VV#240][lq_tmp_x_214:=VV#240]]}
bind 20 VV#159 : {VV#159 : m_aVr | [$k__160[VV#162:=VV#240][lq_tmp_x_214:=VV#240]]}
bind 21 VV : {VV : m_aVr | []}
bind 22 VV : {VV : e_aVs | []}
bind 23 VV#168 : {VV#168 : e_aVs | [$k__169]}
bind 24 lq_tmp_x_148 : {VV : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | []}
bind 25 VV : {VV : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | []}
bind 26 VV : {VV : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | []}
bind 27 VV : {VV : v_aVq | []}
bind 28 VV#252 : {VV#252 : (Control.Monad.Primitive.PrimState  m_aVr) | []}
bind 29 VV#252 : {VV#252 : (Control.Monad.Primitive.PrimState  m_aVr) | []}
bind 30 VV : {VV : m_aVr | []}
bind 31 VV#178 : {VV#178 : m_aVr | [$k__179[VV#181:=VV#252][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#252]]}
bind 32 VV#257 : {VV#257 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__182[VV#181:=VV#257][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#257]]}
bind 33 VV#257 : {VV#257 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__182[VV#181:=VV#257][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#257]]}
bind 34 VV#178 : {VV#178 : m_aVr | [$k__179[VV#181:=VV#257][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#257]]}
bind 35 VV : {VV : m_aVr | []}
bind 36 VV : {VV : e_aVs | []}
bind 37 VV#187 : {VV#187 : e_aVs | [$k__188[lq_tmp_x_155:=lq_tmp_x_148]]}
bind 38 lq_tmp_x_149 : {VV : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | []}
bind 39 VV#266 : {VV#266 : int | []}
bind 40 VV#266 : {VV#266 : int | []}
bind 41 lq_tmp_x_150 : {VV#269 : int | []}
bind 42 VV#271 : {VV#271 : int | []}
bind 43 VV#271 : {VV#271 : int | []}
bind 44 lq_tmp_x_151 : {VV#274 : int | []}
bind 45 VV#276 : {VV#276 : int | []}
bind 46 VV#276 : {VV#276 : int | []}
bind 47 lq_tmp_x_152 : {VV#279 : int | []}
bind 48 lq_tmp_x_224 : {lq_tmp_x_224 : (m_aVr  Tuple) | [$k__212[VV#211:=lq_tmp_x_224][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_197:=lq_tmp_x_151][lq_tmp_x_201:=lq_tmp_x_152]]}
bind 49 VV#205 : {VV#205 : m_aVr | [$k__206[lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_197:=lq_tmp_x_151][lq_tmp_x_201:=lq_tmp_x_152]]}
bind 50 VV#282 : {VV#282 : Tuple | [$k__209[VV#208:=VV#282][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_197:=lq_tmp_x_151][lq_tmp_x_201:=lq_tmp_x_152][lq_tmp_x_223:=VV#282]]}
bind 51 VV#282 : {VV#282 : Tuple | [$k__209[VV#208:=VV#282][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_197:=lq_tmp_x_151][lq_tmp_x_201:=lq_tmp_x_152][lq_tmp_x_223:=VV#282]]}
bind 52 VV#285 : {VV#285 : Tuple | []}
bind 53 VV#285 : {VV#285 : Tuple | []}
bind 54 VV : {VV : (m_aUS  s_aUT  a_aUU) | []}
bind 55 VV : {VV : (m_aUS  s_aUT) | []}
bind 56 VV : {VV : m_aUS | []}
bind 57 VV : {VV : s_aUT | []}
bind 58 VV#126 : {VV#126 : s_aUT | [$k__127]}
bind 59 VV : {VV : a_aUU | []}
bind 60 VV#132 : {VV#132 : a_aUU | [$k__133]}
bind 61 lq_tmp_x_121 : {VV : (m_aUS  s_aUT  a_aUU) | []}
bind 62 VV#297 : {VV#297 : int | [$k__139[VV#138:=VV#297][lq_tmp_x_122:=lq_tmp_x_121][lq_tmp_x_143:=VV#297]]}
bind 63 VV#297 : {VV#297 : int | [$k__139[VV#138:=VV#297][lq_tmp_x_122:=lq_tmp_x_121][lq_tmp_x_143:=VV#297]]}
bind 64 VV#162 : {VV#162 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__163]}
bind 65 lq_tmp_x_155 : {VV#171 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | [$k__172]}
bind 66 VV#181 : {VV#181 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__182]}
bind 67 lq_tmp_x_174 : {VV#190 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | [$k__191]}
bind 68 VV#194 : {VV#194 : int | [$k__195]}
bind 69 lq_tmp_x_193 : {VV#194 : int | [$k__195]}
bind 70 VV#198 : {VV#198 : int | [$k__199]}
bind 71 lq_tmp_x_197 : {VV#198 : int | [$k__199]}
bind 72 VV#202 : {VV#202 : int | [$k__203]}
bind 73 lq_tmp_x_201 : {VV#202 : int | [$k__203]}
bind 74 VV#208 : {VV#208 : Tuple | [$k__209]}
bind 75 lq_tmp_x_122 : {VV#135 : (m_aUS  s_aUT  a_aUU) | [$k__136]}
bind 76 VV#138 : {VV#138 : int | [$k__139]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 8; 24; 9; 41; 10; 42]
  grd true
  lhs {VV#F16 : int | []}
  rhs {VV#F16 : int | [$k__199[VV#198:=VV#F16][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_221:=VV#F16][VV#271:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [2]
  // META constraint id 16 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  grd true
  lhs {VV#F1 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | []}
  rhs {VV#F1 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | [$k__172[VV#171:=VV#F1][lq_tmp_x_216:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 8; 24; 9; 41; 10; 44; 45]
  grd true
  lhs {VV#F17 : int | []}
  rhs {VV#F17 : int | [$k__203[VV#202:=VV#F17][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_197:=lq_tmp_x_151][lq_tmp_x_222:=VV#F17][VV#276:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [2]
  // META constraint id 17 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 12]
  grd true
  lhs {VV#F2 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | []}
  rhs {VV#F2 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | [$k__166[VV#165:=VV#F2][lq_tmp_x_215:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 38; 7; 8; 24; 9; 41; 10; 44; 47]
  grd true
  lhs {VV#F18 : Tuple | []}
  rhs {VV#F18 : Tuple | [$k__209[VV#208:=VV#F18][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_193:=lq_tmp_x_150][lq_tmp_x_197:=lq_tmp_x_151][lq_tmp_x_201:=lq_tmp_x_152][lq_tmp_x_223:=VV#F18][VV#285:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [2]
  // META constraint id 18 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13]
  grd true
  lhs {VV#F3 : v_aVq | []}
  rhs {VV#F3 : v_aVq | [$k__157[VV#156:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 54; 7; 8]
  grd true
  lhs {VV#F19 : (m_aUS  s_aUT  a_aUU) | []}
  rhs {VV#F19 : (m_aUS  s_aUT  a_aUU) | [$k__136[VV#135:=VV#F19][lq_tmp_x_142:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [1]
  // META constraint id 19 : tyfam0.hs:17:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14]
  grd true
  lhs {VV#F4 : (Control.Monad.Primitive.PrimState  m_aVr) | []}
  rhs {VV#F4 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__163[VV#162:=VV#F4][lq_tmp_x_214:=VV#F4][VV#235:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 55; 8]
  grd true
  lhs {VV#F20 : (m_aUS  s_aUT) | []}
  rhs {VV#F20 : (m_aUS  s_aUT) | [$k__130[VV#129:=VV#F20][lq_tmp_x_141:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [1]
  // META constraint id 20 : tyfam0.hs:17:7-15


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 15]
  grd true
  lhs {VV#F5 : m_aVr | []}
  rhs {VV#F5 : m_aVr | [$k__160[VV#162:=VV#235][lq_tmp_x_214:=VV#235][VV#159:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 56]
  grd true
  lhs {VV#F21 : m_aUS | []}
  rhs {VV#F21 : m_aUS | [$k__124[VV#123:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [1]
  // META constraint id 21 : tyfam0.hs:17:7-15


constraint:
  env [0; 1; 2; 3; 19; 4; 5; 21; 6; 7; 8; 9; 10]
  grd true
  lhs {VV#F6 : m_aVr | []}
  rhs {VV#F6 : m_aVr | [$k__160[VV#162:=VV#240][lq_tmp_x_214:=VV#240][VV#159:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 57]
  grd true
  lhs {VV#F22 : s_aUT | []}
  rhs {VV#F22 : s_aUT | [$k__127[VV#126:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [1]
  // META constraint id 22 : tyfam0.hs:17:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 9; 10]
  grd true
  lhs {VV#F7 : e_aVs | []}
  rhs {VV#F7 : e_aVs | [$k__169[VV#168:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 59]
  grd true
  lhs {VV#F23 : a_aUU | []}
  rhs {VV#F23 : a_aUU | [$k__133[VV#132:=VV#F23][VV#F:=VV#F23]]}
  id 23 tag [1]
  // META constraint id 23 : tyfam0.hs:17:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 10]
  grd true
  lhs {VV#F8 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | []}
  rhs {VV#F8 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | [$k__191[VV#190:=VV#F8][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_219:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 61; 62]
  grd true
  lhs {VV#F24 : int | [$k__139[VV#138:=VV#F24][lq_tmp_x_122:=lq_tmp_x_121][lq_tmp_x_143:=VV#F24][VV#297:=VV#F24][VV#F:=VV#F24]]}
  rhs {VV#F24 : int | [(VV#F24 >= 0)]}
  id 24 tag [1]
  // META constraint id 24 : tyfam0.hs:17:7-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 26]
  grd true
  lhs {VV#F9 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | []}
  rhs {VV#F9 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | [$k__185[VV#184:=VV#F9][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_218:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]
  // META constraint id 9 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 27]
  grd true
  lhs {VV#F10 : v_aVq | []}
  rhs {VV#F10 : v_aVq | [$k__176[lq_tmp_x_155:=lq_tmp_x_148][VV#175:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 28]
  grd true
  lhs {VV#F11 : (Control.Monad.Primitive.PrimState  m_aVr) | []}
  rhs {VV#F11 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__182[VV#181:=VV#F11][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#F11][VV#252:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 29; 30]
  grd true
  lhs {VV#F12 : m_aVr | []}
  rhs {VV#F12 : m_aVr | [$k__179[VV#181:=VV#252][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#252][VV#178:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 24; 9; 10]
  grd true
  lhs {VV#F13 : m_aVr | []}
  rhs {VV#F13 : m_aVr | [$k__179[VV#181:=VV#257][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_217:=VV#257][VV#178:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [2]
  // META constraint id 13 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 36; 5; 6; 7; 8; 24; 9; 10]
  grd true
  lhs {VV#F14 : e_aVs | []}
  rhs {VV#F14 : e_aVs | [$k__188[lq_tmp_x_155:=lq_tmp_x_148][VV#187:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [2]
  // META constraint id 14 : tyfam0.hs:13:14-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 39; 8; 24; 9; 10]
  grd true
  lhs {VV#F15 : int | []}
  rhs {VV#F15 : int | [$k__195[VV#194:=VV#F15][lq_tmp_x_155:=lq_tmp_x_148][lq_tmp_x_174:=lq_tmp_x_149][lq_tmp_x_220:=VV#F15][VV#266:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [2]
  // META constraint id 15 : tyfam0.hs:13:14-22




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#171 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | [$k__172]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#165 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | [$k__166]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#156 : v_aVq | [$k__157]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#162 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__163]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#159 : m_aVr | [$k__160]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#168 : e_aVs | [$k__169]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#190 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)  e_aVs) | [$k__191]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#184 : (v_aVq  (Control.Monad.Primitive.PrimState  m_aVr)) | [$k__185]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#175 : v_aVq | [$k__176]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#181 : (Control.Monad.Primitive.PrimState  m_aVr) | [$k__182]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 66; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#178 : m_aVr | [$k__179]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#187 : e_aVs | [$k__188]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 67; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#194 : int | [$k__195]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 67; 4; 5; 69; 6; 7; 8; 9; 10]
  reft {VV#198 : int | [$k__199]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 67; 4; 5; 69; 6; 7; 71; 8; 9; 10]
  reft {VV#202 : int | [$k__203]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 67; 4; 5; 69; 6; 7; 71; 8; 9; 73; 10]
  reft {VV#211 : (m_aVr  Tuple) | [$k__212]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 67; 4; 5; 69; 6; 7; 71; 8; 9; 73; 10]
  reft {VV#205 : m_aVr | [$k__206]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 65; 2; 3; 67; 4; 5; 69; 6; 7; 71; 8; 9; 73; 10]
  reft {VV#208 : Tuple | [$k__209]}
  
  // META wf  : tyfam0.hs:13:14-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#135 : (m_aUS  s_aUT  a_aUU) | [$k__136]}
  
  // META wf  : tyfam0.hs:17:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#129 : (m_aUS  s_aUT) | [$k__130]}
  
  // META wf  : tyfam0.hs:17:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#123 : m_aUS | [$k__124]}
  
  // META wf  : tyfam0.hs:17:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#126 : s_aUT | [$k__127]}
  
  // META wf  : tyfam0.hs:17:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#132 : a_aUU | [$k__133]}
  
  // META wf  : tyfam0.hs:17:7-15


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 75]
  reft {VV#138 : int | [$k__139]}
  
  // META wf  : tyfam0.hs:17:7-15







