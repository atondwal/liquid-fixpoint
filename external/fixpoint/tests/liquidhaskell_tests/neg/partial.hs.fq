qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int, fix##126#A0 : int): (v >= fix##126#A0) // "partial.hs" (line 12, column 1)
qualif Auto(v : int): (v >= 0) // "partial.hs" (line 5, column 1)
qualif Auto(v : int, fix##126#A0 : int): (v >= fix##126#A0) // "partial.hs" (line 5, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int, fix##126#A0 : int): (v >= fix##126#A0) // "partial.hs" (line 12, column 1)
qualif Auto(v : int): (v >= 0) // "partial.hs" (line 5, column 1)
qualif Auto(v : int, fix##126#A0 : int): (v >= fix##126#A0) // "partial.hs" (line 5, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Types.False#68 : {VV#145 : GHC.Types.Bool | []}
bind 1 GHC.Types.True#6u : {VV#147 : GHC.Types.Bool | []}
bind 2 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#150 : (GHC.Classes.Ord  int) | []}
bind 3 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#151 : (GHC.Num.Num  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#152 : GHC.Types.Ordering | [(VV#152 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#153 : GHC.Types.Ordering | [(VV#153 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#154 : GHC.Types.Ordering | [(VV#154 = GHC.Types.GT#6W)]}
bind 7 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 8 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 9 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 10 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 11 GHC.Types.EQ#6U : {VV#181 : GHC.Types.Ordering | [(cmp([VV#181]) = GHC.Types.EQ#6U)]}
bind 12 GHC.Types.LT#6S : {VV#182 : GHC.Types.Ordering | [(cmp([VV#182]) = GHC.Types.LT#6S)]}
bind 13 GHC.Types.GT#6W : {VV#183 : GHC.Types.Ordering | [(cmp([VV#183]) = GHC.Types.GT#6W)]}
bind 14 x#aXY : {v : int | [(v >= 0)]}
bind 15 lq_anf__dYz : {lq_tmp_x_192 : int | [(lq_tmp_x_192 = (0  :  int))]}
bind 16 lq_anf__dYA : {lq_tmp_x_198 : GHC.Types.Bool | [((? Prop([lq_tmp_x_198])) <=> (x#aXY > lq_anf__dYz))]}
bind 17 lq_anf__dYB : {lq_tmp_x_214 : GHC.Types.Bool | [(lq_tmp_x_214 = lq_anf__dYA)]}
bind 18 lq_anf__dYB : {lq_tmp_x_216 : GHC.Types.Bool | [(lq_tmp_x_216 = lq_anf__dYA)]}
bind 19 lq_anf__dYB : {lq_tmp_x_216 : GHC.Types.Bool | [(lq_tmp_x_216 = lq_anf__dYA);
                                                        (~ ((? Prop([lq_tmp_x_216]))));
                                                        (~ ((? Prop([lq_tmp_x_216]))));
                                                        (~ ((? Prop([lq_tmp_x_216]))))]}
bind 20 lq_anf__dYB : {lq_tmp_x_226 : GHC.Types.Bool | [(lq_tmp_x_226 = lq_anf__dYA)]}
bind 21 lq_anf__dYB : {lq_tmp_x_226 : GHC.Types.Bool | [(lq_tmp_x_226 = lq_anf__dYA);
                                                        (? Prop([lq_tmp_x_226]));
                                                        (? Prop([lq_tmp_x_226]));
                                                        (? Prop([lq_tmp_x_226]))]}
bind 22 lq_anf__dYC : {lq_tmp_x_232 : int | [(lq_tmp_x_232 = (2  :  int))]}
bind 23 lq_anf__dYD : {lq_tmp_x_238 : int | [(lq_tmp_x_238 = (1  :  int))]}
bind 24 lq_anf__dYE : {lq_tmp_x_251 : int | [(lq_tmp_x_251 = (x#aXY - lq_anf__dYD))]}
bind 25 lq_anf__dYF : {v : int | [(v >= lq_anf__dYE)]}
bind 26 lq_anf__dYG : {lq_tmp_x_280 : int | [(lq_tmp_x_280 = (3  :  int))]}
bind 27 lq_anf__dYH : {lq_tmp_x_291 : int | [(lq_tmp_x_291 = (- (lq_anf__dYG)))]}
bind 28 Test.goo#rpv : {VV#276 : int | [$k__277]}
bind 29 x#aXZ : {VV#303 : int | []}
bind 30 lq_anf__dYI : {lq_tmp_x_305 : int | [(lq_tmp_x_305 = (0  :  int))]}
bind 31 lq_anf__dYJ : {lq_tmp_x_311 : GHC.Types.Bool | [((? Prop([lq_tmp_x_311])) <=> (x#aXZ > lq_anf__dYI))]}
bind 32 lq_anf__dYK : {lq_tmp_x_327 : GHC.Types.Bool | [(lq_tmp_x_327 = lq_anf__dYJ)]}
bind 33 lq_anf__dYK : {lq_tmp_x_329 : GHC.Types.Bool | [(lq_tmp_x_329 = lq_anf__dYJ)]}
bind 34 lq_anf__dYK : {lq_tmp_x_329 : GHC.Types.Bool | [(lq_tmp_x_329 = lq_anf__dYJ);
                                                        (~ ((? Prop([lq_tmp_x_329]))));
                                                        (~ ((? Prop([lq_tmp_x_329]))));
                                                        (~ ((? Prop([lq_tmp_x_329]))))]}
bind 35 lq_anf__dYK : {lq_tmp_x_335 : GHC.Types.Bool | [(lq_tmp_x_335 = lq_anf__dYJ)]}
bind 36 lq_anf__dYK : {lq_tmp_x_335 : GHC.Types.Bool | [(lq_tmp_x_335 = lq_anf__dYJ);
                                                        (? Prop([lq_tmp_x_335]));
                                                        (? Prop([lq_tmp_x_335]));
                                                        (? Prop([lq_tmp_x_335]))]}
bind 37 VV#346 : {VV#346 : int | [(VV#346 >= x#aXZ)]}
bind 38 VV#346 : {VV#346 : int | [(VV#346 >= x#aXZ)]}
bind 39 VV#349 : {VV#349 : int | [(VV#349 = x#aXZ)]}
bind 40 VV#349 : {VV#349 : int | [(VV#349 = x#aXZ)]}
bind 41 VV#352 : {VV#352 : int | [(VV#352 = x#aXZ)]}
bind 42 VV#352 : {VV#352 : int | [(VV#352 = x#aXZ)]}
bind 43 VV#355 : {VV#355 : int | [(VV#355 = lq_anf__dYI)]}
bind 44 VV#355 : {VV#355 : int | [(VV#355 = lq_anf__dYI)]}
bind 45 VV#358 : {VV#358 : int | [(VV#358 = x#aXZ)]}
bind 46 VV#358 : {VV#358 : int | [(VV#358 = x#aXZ)]}
bind 47 VV#361 : {VV#361 : int | [(VV#361 = 0)]}
bind 48 VV#361 : {VV#361 : int | [(VV#361 = 0)]}
bind 49 VV#364 : {VV#364 : int | [(VV#364 >= lq_anf__dYH)]}
bind 50 VV#364 : {VV#364 : int | [(VV#364 >= lq_anf__dYH)]}
bind 51 VV#367 : {VV#367 : int | [(VV#367 = lq_anf__dYH)]}
bind 52 VV#367 : {VV#367 : int | [(VV#367 = lq_anf__dYH)]}
bind 53 VV#370 : {VV#370 : int | [(VV#370 = lq_anf__dYG)]}
bind 54 VV#370 : {VV#370 : int | [(VV#370 = lq_anf__dYG)]}
bind 55 VV#373 : {VV#373 : int | [(VV#373 = 3)]}
bind 56 VV#373 : {VV#373 : int | [(VV#373 = 3)]}
bind 57 VV#376 : {VV#376 : int | [(VV#376 = (lq_anf__dYC + lq_anf__dYF))]}
bind 58 VV#376 : {VV#376 : int | [(VV#376 = (lq_anf__dYC + lq_anf__dYF))]}
bind 59 VV#379 : {VV#379 : int | [(VV#379 = lq_anf__dYF)]}
bind 60 VV#379 : {VV#379 : int | [(VV#379 = lq_anf__dYF)]}
bind 61 VV#382 : {VV#382 : int | [(VV#382 = lq_anf__dYC)]}
bind 62 VV#382 : {VV#382 : int | [(VV#382 = lq_anf__dYC)]}
bind 63 VV#385 : {VV#385 : int | [(VV#385 = lq_anf__dYE)]}
bind 64 VV#385 : {VV#385 : int | [(VV#385 = lq_anf__dYE)]}
bind 65 VV#388 : {VV#388 : int | [(VV#388 = lq_anf__dYD)]}
bind 66 VV#388 : {VV#388 : int | [(VV#388 = lq_anf__dYD)]}
bind 67 VV#391 : {VV#391 : int | [(VV#391 = x#aXY)]}
bind 68 VV#391 : {VV#391 : int | [(VV#391 = x#aXY)]}
bind 69 VV#394 : {VV#394 : int | [(VV#394 = 1)]}
bind 70 VV#394 : {VV#394 : int | [(VV#394 = 1)]}
bind 71 VV#397 : {VV#397 : int | [(VV#397 = 2)]}
bind 72 VV#397 : {VV#397 : int | [(VV#397 = 2)]}
bind 73 VV#400 : {VV#400 : int | [(VV#400 = (0  :  int))]}
bind 74 VV#400 : {VV#400 : int | [(VV#400 = (0  :  int))]}
bind 75 VV#403 : {VV#403 : int | [(VV#403 = 0)]}
bind 76 VV#403 : {VV#403 : int | [(VV#403 = 0)]}
bind 77 VV#406 : {VV#406 : int | [(VV#406 = lq_anf__dYz)]}
bind 78 VV#406 : {VV#406 : int | [(VV#406 = lq_anf__dYz)]}
bind 79 VV#409 : {VV#409 : int | [(VV#409 = x#aXY)]}
bind 80 VV#409 : {VV#409 : int | [(VV#409 = x#aXY)]}
bind 81 VV#412 : {VV#412 : int | [(VV#412 = 0)]}
bind 82 VV#412 : {VV#412 : int | [(VV#412 = 0)]}
bind 83 VV#318 : {VV#318 : int | [$k__319]}
bind 84 VV#276 : {VV#276 : int | [$k__277]}
bind 85 VV#205 : {VV#205 : int | [$k__206]}




constraint:
  env [0;
       32;
       1;
       2;
       3;
       35;
       4;
       36;
       5;
       37;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F1 : int | [(VV#F1 >= x#aXZ)]}
  rhs {VV#F1 : int | [(VV#F1 >= x#aXZ)]}
  id 1 tag [3]
  // META constraint id 1 : partial.hs:12:23-31


constraint:
  env [0;
       32;
       1;
       2;
       3;
       35;
       4;
       36;
       5;
       6;
       7;
       39;
       8;
       9;
       10;
       11;
       12;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F2 : int | [(VV#F2 = x#aXZ)]}
  rhs {VV#F2 : int | [(VV#F2 >= 0)]}
  id 2 tag [3]
  // META constraint id 2 : partial.hs:12:31


constraint:
  env [0;
       32;
       1;
       33;
       2;
       34;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       41;
       10;
       11;
       12;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = x#aXZ)]}
  rhs {VV#F3 : int | [(VV#F3 >= x#aXZ)]}
  id 3 tag [3]
  // META constraint id 3 : partial.hs:12:38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 43; 12; 28; 13; 29; 30]
  grd true
  lhs {VV#F4 : int | [(VV#F4 = lq_anf__dYI)]}
  rhs {VV#F4 : int | [$k__319[VV#318:=VV#F4][lq_tmp_x_315:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_316:=x#aXZ][lq_tmp_x_321:=VV#F4][VV#355:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : partial.hs:12:16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13; 29; 45; 30]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = x#aXZ)]}
  rhs {VV#F5 : int | [$k__319[VV#318:=VV#F5][lq_tmp_x_315:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_321:=VV#F5][VV#358:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : partial.hs:12:12


constraint:
  env [0; 1; 49; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 27; 12; 13]
  grd true
  lhs {VV#F6 : int | [(VV#F6 >= lq_anf__dYH)]}
  rhs {VV#F6 : int | [$k__277[VV#276:=VV#F6][VV#364:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : partial.hs:9:7-18


constraint:
  env [0; 1; 2; 3; 51; 4; 5; 6; 7; 8; 9; 10; 26; 11; 27; 12; 13]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = lq_anf__dYH)]}
  rhs {VV#F7 : int | [(VV#F7 >= 0)]}
  id 7 tag [2]
  // META constraint id 7 : partial.hs:9:16-17


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       57;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = (lq_anf__dYC + lq_anf__dYF))]}
  rhs {VV#F8 : int | [(VV#F8 >= x#aXY)]}
  id 8 tag [1]
  // META constraint id 8 : partial.hs:6:20-40


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       63]
  grd true
  lhs {VV#F9 : int | [(VV#F9 = lq_anf__dYE)]}
  rhs {VV#F9 : int | [(VV#F9 >= 0)]}
  id 9 tag [1]
  // META constraint id 9 : partial.hs:6:34-38


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       63]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = lq_anf__dYE)]}
  rhs {VV#F10 : int | [(VV#F10 < x#aXY)]}
  id 10 tag [1]
  // META constraint id 10 : partial.hs:6:34-38


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       63]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = lq_anf__dYE)]}
  rhs {VV#F11 : int | [(VV#F11 >= 0)]}
  id 11 tag [1]
  // META constraint id 11 : partial.hs:6:34-38


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       73;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = (0  :  int))]}
  rhs {VV#F12 : int | [(VV#F12 >= x#aXY)]}
  id 12 tag [1]
  // META constraint id 12 : partial.hs:7:20


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 77; 14; 15]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__dYz)]}
  rhs {VV#F13 : int | [$k__206[VV#205:=VV#F13][lq_tmp_x_202:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_203:=x#aXY][lq_tmp_x_208:=VV#F13][VV#406:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : partial.hs:5:21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 79]
  grd true
  lhs {VV#F14 : int | [(VV#F14 = x#aXY)]}
  rhs {VV#F14 : int | [$k__206[VV#205:=VV#F14][lq_tmp_x_202:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_208:=VV#F14][VV#409:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : partial.hs:5:17




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 28; 13; 29; 30]
  reft {VV#318 : int | [$k__319]}
  
  // META wf  : partial.hs:12:14


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#276 : int | [$k__277]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#205 : int | [$k__206]}
  
  // META wf  : partial.hs:5:19







