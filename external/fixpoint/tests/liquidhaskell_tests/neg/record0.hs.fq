qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aLj], fix##126#A0 : int): (len([v]) = fix##126#A0) // "record0.hs" (line 17, column 1)
qualif Auto(VV : int): (VV > 0) // "record0.hs" (line 8, column 13)
qualif Auto(VV : [a_apB], fix##126#A0 : int): (len([VV]) = fix##126#A0) // "record0.hs" (line 8, column 13)
qualif Auto(VV : (Rec0.LL  a_apB), fix##126#A0 : [a_apB]): (elems([VV]) = fix##126#A0) // "record0.hs" (line 8, column 13)
qualif Auto(VV : (Rec0.LL  a_apB), fix##126#A0 : int): (size([VV]) = fix##126#A0) // "record0.hs" (line 8, column 13)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aLj], fix##126#A0 : int): (len([v]) = fix##126#A0) // "record0.hs" (line 17, column 1)
qualif Auto(VV : int): (VV > 0) // "record0.hs" (line 8, column 13)
qualif Auto(VV : [a_apB], fix##126#A0 : int): (len([VV]) = fix##126#A0) // "record0.hs" (line 8, column 13)
qualif Auto(VV : (Rec0.LL  a_apB), fix##126#A0 : [a_apB]): (elems([VV]) = fix##126#A0) // "record0.hs" (line 8, column 13)
qualif Auto(VV : (Rec0.LL  a_apB), fix##126#A0 : int): (size([VV]) = fix##126#A0) // "record0.hs" (line 8, column 13)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant elems : (func(1, [(Rec0.LL  @(0)); [@(0)]]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant Rec0.BXYZ#rpv : (func(1, [int; [@(0)]; (Rec0.LL  @(0))]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant size : (func(1, [(Rec0.LL  @(0)); int]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant lit#FOO : (Str)
constant Rec0.BXYZ#rpv : (func(1, [int; [@(0)]; (Rec0.LL  @(0))]))


bind 0 GHC.Types.EQ#6U : {VV#132 : GHC.Types.Ordering | [(VV#132 = GHC.Types.EQ#6U)]}
bind 1 GHC.Types.LT#6S : {VV#133 : GHC.Types.Ordering | [(VV#133 = GHC.Types.LT#6S)]}
bind 2 GHC.Types.GT#6W : {VV#134 : GHC.Types.Ordering | [(VV#134 = GHC.Types.GT#6W)]}
bind 3 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 4 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 5 GHC.Types.EQ#6U : {VV#158 : GHC.Types.Ordering | [(cmp([VV#158]) = GHC.Types.EQ#6U)]}
bind 6 GHC.Types.LT#6S : {VV#159 : GHC.Types.Ordering | [(cmp([VV#159]) = GHC.Types.LT#6S)]}
bind 7 GHC.Types.GT#6W : {VV#160 : GHC.Types.Ordering | [(cmp([VV#160]) = GHC.Types.GT#6W)]}
bind 8 lq_anf__dLK : {lq_tmp_x_167 : int | [(lq_tmp_x_167 ~~ lit#FOO);
                                            (strLen([lq_tmp_x_167]) = 3)]}
bind 9 lq_anf__dLL : {lq_tmp_x_173 : [GHC.Types.Char] | [(lq_tmp_x_173 ~~ lq_anf__dLK);
                                                         (len([lq_tmp_x_173]) = strLen([lq_anf__dLK]));
                                                         (len([lq_tmp_x_173]) >= 0)]}
bind 10 x#aKX : {VV : a_aLv | []}
bind 11 n#aKY : {VV#215 : int | []}
bind 12 lq_anf__dLM : {lq_tmp_x_217 : int | [(lq_tmp_x_217 = (0  :  int))]}
bind 13 lq_anf__dLN : {lq_tmp_x_224 : [a_aLv] | [(len([lq_tmp_x_224]) = lq_anf__dLM);
                                                 (len([lq_tmp_x_224]) >= 0)]}
bind 14 ds_dLH : {VV#252 : (Rec0.LL  a_aL9) | [$k__253]}
bind 15 lq_anf__dLO : {lq_tmp_x_266 : (Rec0.LL  a_aL9) | [(lq_tmp_x_266 = ds_dLH)]}
bind 16 lq_anf__dLO : {lq_tmp_x_268 : (Rec0.LL  a_aL9) | [(lq_tmp_x_268 = ds_dLH)]}
bind 17 ds_dLI : {lq_tmp_x_277 : int | [(lq_tmp_x_277 > 0)]}
bind 18 ds_dLJ : {lq_tmp_x_279 : [a_aL9] | [(len([lq_tmp_x_279]) = ds_dLI);
                                            (len([lq_tmp_x_279]) >= 0)]}
bind 19 lq_anf__dLO : {lq_tmp_x_268 : (Rec0.LL  a_aL9) | [(lq_tmp_x_268 = ds_dLH);
                                                          (elems([lq_tmp_x_268]) = ds_dLJ);
                                                          (size([lq_tmp_x_268]) = ds_dLI);
                                                          (lq_tmp_x_268 = Rec0.BXYZ#rpv([ds_dLI;
                                                                                         ds_dLJ]));
                                                          (elems([lq_tmp_x_268]) = ds_dLJ);
                                                          (size([lq_tmp_x_268]) = ds_dLI)]}
bind 20 ds_dLE : {VV#293 : (Rec0.LL  a_aL8) | [$k__294]}
bind 21 lq_anf__dLP : {lq_tmp_x_300 : (Rec0.LL  a_aL8) | [(lq_tmp_x_300 = ds_dLE)]}
bind 22 lq_anf__dLP : {lq_tmp_x_302 : (Rec0.LL  a_aL8) | [(lq_tmp_x_302 = ds_dLE)]}
bind 23 ds_dLF : {lq_tmp_x_311 : int | [(lq_tmp_x_311 > 0)]}
bind 24 ds_dLG : {lq_tmp_x_313 : [a_aL8] | [(len([lq_tmp_x_313]) = ds_dLF);
                                            (len([lq_tmp_x_313]) >= 0)]}
bind 25 lq_anf__dLP : {lq_tmp_x_302 : (Rec0.LL  a_aL8) | [(lq_tmp_x_302 = ds_dLE);
                                                          (elems([lq_tmp_x_302]) = ds_dLG);
                                                          (size([lq_tmp_x_302]) = ds_dLF);
                                                          (lq_tmp_x_302 = Rec0.BXYZ#rpv([ds_dLF;
                                                                                         ds_dLG]));
                                                          (elems([lq_tmp_x_302]) = ds_dLG);
                                                          (size([lq_tmp_x_302]) = ds_dLF)]}
bind 26 VV#323 : {VV#323 : int | [(VV#323 = ds_dLF)]}
bind 27 VV#323 : {VV#323 : int | [(VV#323 = ds_dLF)]}
bind 28 VV#326 : {VV#326 : [a_aL9] | [(VV#326 = ds_dLJ);
                                      (len([VV#326]) >= 0)]}
bind 29 VV#326 : {VV#326 : [a_aL9] | [(VV#326 = ds_dLJ);
                                      (len([VV#326]) >= 0)]}
bind 30 VV#249 : {VV#249 : a_aL9 | [$k__250[VV#252:=lq_anf__dLO][lq_tmp_x_266:=lq_anf__dLO][lq_tmp_x_268:=lq_anf__dLO][lq_tmp_x_275:=ds_dLI][lq_tmp_x_279:=VV#326][lq_tmp_x_288:=VV#326]]}
bind 31 lq_tmp_x_259 : {VV : a_aL9 | []}
bind 32 VV#249 : {VV#249 : a_aL9 | []}
bind 33 VV#332 : {VV#332 : (Rec0.LL  a_aLv) | [(elems([VV#332]) = lq_anf__dLN);
                                               (size([VV#332]) = n#aKY)]}
bind 34 VV#332 : {VV#332 : (Rec0.LL  a_aLv) | [(elems([VV#332]) = lq_anf__dLN);
                                               (size([VV#332]) = n#aKY)]}
bind 35 VV#242 : {VV#242 : a_aLv | [$k__243[lq_tmp_x_240:=n#aKY][lq_tmp_x_241:=lq_anf__dLN][lq_tmp_x_237:=VV#332]]}
bind 36 VV#336 : {VV#336 : [a_aLv] | [(VV#336 = lq_anf__dLN);
                                      (len([VV#336]) >= 0)]}
bind 37 VV#336 : {VV#336 : [a_aLv] | [(VV#336 = lq_anf__dLN);
                                      (len([VV#336]) >= 0)]}
bind 38 VV#229 : {VV#229 : a_aLv | [$k__230[lq_tmp_x_227:=x#aKX][lq_tmp_x_228:=lq_anf__dLM][lq_tmp_x_224:=VV#336][lq_tmp_x_247:=VV#336]]}
bind 39 lq_tmp_x_235 : {VV : a_aLv | []}
bind 40 VV#229 : {VV#229 : a_aLv | []}
bind 41 VV#342 : {VV#342 : int | [(VV#342 = n#aKY)]}
bind 42 VV#342 : {VV#342 : int | [(VV#342 = n#aKY)]}
bind 43 VV#345 : {VV#345 : int | [(VV#345 = lq_anf__dLM)]}
bind 44 VV#345 : {VV#345 : int | [(VV#345 = lq_anf__dLM)]}
bind 45 VV : {VV : a_aLv | [(VV = x#aKX)]}
bind 46 VV#349 : {VV#349 : int | [(VV#349 = 0)]}
bind 47 VV#349 : {VV#349 : int | [(VV#349 = 0)]}
bind 48 VV : {VV : a_aLj | []}
bind 49 lq_tmp_x_165 : {VV : a_aLj | []}
bind 50 VV#356 : {VV#356 : int | []}
bind 51 VV#356 : {VV#356 : int | []}
bind 52 lq_tmp_x_166 : {VV#359 : int | []}
bind 53 VV#360 : {VV#360 : [a_aLj] | [$k__200[VV#199:=VV#360][lq_tmp_x_183:=lq_anf__dLL][lq_tmp_x_184:=lq_tmp_x_165][lq_tmp_x_188:=lq_tmp_x_166][lq_tmp_x_204:=VV#360];
                                      (len([VV#360]) >= 0)]}
bind 54 VV#360 : {VV#360 : [a_aLj] | [$k__200[VV#199:=VV#360][lq_tmp_x_183:=lq_anf__dLL][lq_tmp_x_184:=lq_tmp_x_165][lq_tmp_x_188:=lq_tmp_x_166][lq_tmp_x_204:=VV#360];
                                      (len([VV#360]) >= 0)]}
bind 55 VV#192 : {VV#192 : a_aLj | [$k__193[VV#199:=VV#360][lq_tmp_x_183:=lq_anf__dLL][lq_tmp_x_184:=lq_tmp_x_165][lq_tmp_x_188:=lq_tmp_x_166][lq_tmp_x_204:=VV#360]]}
bind 56 fldList : {VV : a_aLj | []}
bind 57 VV#196 : {VV#196 : a_aLj | [$k__197[lq_tmp_x_195:=fldList][lq_tmp_x_183:=lq_anf__dLL][lq_tmp_x_184:=lq_tmp_x_165][lq_tmp_x_188:=lq_tmp_x_166][lq_tmp_x_203:=fldList]]}
bind 58 VV#366 : {VV#366 : [GHC.Types.Char] | [(VV#366 = lq_anf__dLL);
                                               (len([VV#366]) >= 0)]}
bind 59 VV#366 : {VV#366 : [GHC.Types.Char] | [(VV#366 = lq_anf__dLL);
                                               (len([VV#366]) >= 0)]}
bind 60 VV#369 : {VV#369 : GHC.Types.Char | []}
bind 61 VV#369 : {VV#369 : GHC.Types.Char | []}
bind 62 lq_tmp_x_179 : {VV#372 : GHC.Types.Char | []}
bind 63 VV#373 : {VV#373 : GHC.Types.Char | []}
bind 64 VV#373 : {VV#373 : GHC.Types.Char | []}
bind 65 VV#376 : {VV#376 : int | [(VV#376 = lq_anf__dLK)]}
bind 66 VV#376 : {VV#376 : int | [(VV#376 = lq_anf__dLK)]}
bind 67 VV#293 : {VV#293 : (Rec0.LL  a_aL8) | [$k__294]}
bind 68 VV#297 : {VV#297 : int | [$k__298]}
bind 69 VV#252 : {VV#252 : (Rec0.LL  a_aL9) | [$k__253]}
bind 70 VV#263 : {VV#263 : [a_aL9] | [$k__264;
                                      (len([VV#263]) >= 0)]}
bind 71 lq_tmp_x_259 : {VV : a_aL9 | []}
bind 72 lq_tmp_x_184 : {VV#185 : a_aLj | [$k__186]}
bind 73 VV#189 : {VV#189 : int | [$k__190]}
bind 74 lq_tmp_x_188 : {VV#189 : int | [$k__190]}
bind 75 VV#199 : {VV#199 : [a_aLj] | [$k__200;
                                      (len([VV#199]) >= 0)]}
bind 76 lq_tmp_x_195 : {VV : a_aLj | []}




constraint:
  env [0; 1; 2; 3; 4; 20; 5; 21; 6; 22; 7; 23; 24; 25; 26]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = ds_dLF)]}
  rhs {VV#F1 : int | [$k__298[VV#297:=VV#F1][VV#323:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : record0.hs:8:20-23


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 28; 14; 15]
  grd true
  lhs {VV#F2 : [a_aL9] | [(VV#F2 = ds_dLJ); (len([VV#F2]) >= 0)]}
  rhs {VV#F2 : [a_aL9] | [$k__264[VV#263:=VV#F2][VV#326:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : record0.hs:9:20-24


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 29; 14; 30; 15]
  grd true
  lhs {VV#F3 : a_aL9 | [$k__250[VV#252:=lq_anf__dLO][lq_tmp_x_266:=lq_anf__dLO][lq_tmp_x_268:=lq_anf__dLO][lq_tmp_x_275:=ds_dLI][lq_tmp_x_279:=VV#326][lq_tmp_x_288:=VV#326][VV#249:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : a_aL9 | [$k__257[VV#263:=VV#326][VV#256:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : record0.hs:9:20-24


constraint:
  env [0; 16; 32; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 29; 14; 15; 31]
  grd true
  lhs {VV#F4 : a_aL9 | []}
  rhs {VV#F4 : a_aL9 | [$k__261[VV#260:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : record0.hs:9:20-24


constraint:
  env [0; 1; 2; 3; 4; 36; 5; 6; 7; 10; 11; 12; 13]
  grd true
  lhs {VV#F5 : [a_aLv] | [(VV#F5 = lq_anf__dLN);
                          (len([VV#F5]) >= 0)]}
  rhs {VV#F5 : [a_aLv] | [(len([VV#F5]) = n#aKY)]}
  id 5 tag [2]
  // META constraint id 5 : record0.hs:13:18-26


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 38; 7; 10; 11; 12; 13]
  grd true
  lhs {VV#F6 : a_aLv | [$k__230[lq_tmp_x_227:=x#aKX][lq_tmp_x_228:=lq_anf__dLM][lq_tmp_x_224:=VV#336][lq_tmp_x_247:=VV#336][VV#229:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : a_aLv | [$k__243[lq_tmp_x_240:=n#aKY][lq_tmp_x_236:=VV#336][VV#242:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : record0.hs:13:18-26


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 41; 10; 11; 12; 13]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = n#aKY)]}
  rhs {VV#F7 : int | [(VV#F7 > 0)]}
  id 7 tag [2]
  // META constraint id 7 : record0.hs:13:15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 10; 11; 12; 45]
  grd true
  lhs {VV#F8 : a_aLv | [(VV#F8 = x#aKX)]}
  rhs {VV#F8 : a_aLv | [$k__230[VV#229:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : record0.hs:13:24


constraint:
  env [0; 48; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F9 : a_aLj | []}
  rhs {VV#F9 : a_aLj | [$k__186[lq_tmp_x_183:=lq_anf__dLL][VV#185:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : record0.hs:17:9-19


constraint:
  env [0; 1; 49; 2; 50; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F10 : int | []}
  rhs {VV#F10 : int | [$k__190[VV#189:=VV#F10][lq_tmp_x_183:=lq_anf__dLL][lq_tmp_x_184:=lq_tmp_x_165][lq_tmp_x_202:=VV#F10][VV#356:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : record0.hs:17:9-19


constraint:
  env [0; 1; 49; 2; 3; 4; 52; 5; 53; 6; 7; 8; 9]
  grd true
  lhs {VV#F11 : [a_aLj] | [$k__200[VV#199:=VV#F11][lq_tmp_x_183:=lq_anf__dLL][lq_tmp_x_184:=lq_tmp_x_165][lq_tmp_x_188:=lq_tmp_x_166][lq_tmp_x_204:=VV#F11][VV#360:=VV#F11][VV#F:=VV#F11];
                           (len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [a_aLj] | [(len([VV#F11]) = lq_tmp_x_166)]}
  id 11 tag [1]
  // META constraint id 11 : record0.hs:17:9-19




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#293 : (Rec0.LL  a_aL8) | [$k__294]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 67; 4; 5; 6; 7]
  reft {VV#290 : a_aL8 | [$k__291]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7]
  reft {VV#297 : int | [$k__298]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#252 : (Rec0.LL  a_aL9) | [$k__253]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 69; 6; 7]
  reft {VV#249 : a_aL9 | [$k__250]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 14]
  reft {VV#263 : [a_aL9] | [$k__264]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 14]
  reft {VV#256 : a_aL9 | [$k__257]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 71; 14]
  reft {VV#260 : a_aL9 | [$k__261]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 10; 11; 12; 13]
  reft {VV#242 : a_aLv | [$k__243]}
  
  // META wf  : record0.hs:13:10-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 10; 11; 12]
  reft {VV#229 : a_aLv | [$k__230]}
  
  // META wf  : record0.hs:13:18-22


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#185 : a_aLj | [$k__186]}
  
  // META wf  : record0.hs:17:9-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9]
  reft {VV#189 : int | [$k__190]}
  
  // META wf  : record0.hs:17:9-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9; 74]
  reft {VV#199 : [a_aLj] | [$k__200]}
  
  // META wf  : record0.hs:17:9-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9; 74; 75]
  reft {VV#192 : a_aLj | [$k__193]}
  
  // META wf  : record0.hs:17:9-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9; 74; 76]
  reft {VV#196 : a_aLj | [$k__197]}
  
  // META wf  : record0.hs:17:9-13







