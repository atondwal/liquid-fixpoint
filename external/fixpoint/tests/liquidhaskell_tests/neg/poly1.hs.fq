qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Types.False#68 : {VV#164 : GHC.Types.Bool | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 GHC.Types.True#6u : {VV#167 : GHC.Types.Bool | []}
bind 3 GHC.Types.EQ#6U : {VV#173 : GHC.Types.Ordering | [(VV#173 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#174 : GHC.Types.Ordering | [(VV#174 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#175 : GHC.Types.Ordering | [(VV#175 = GHC.Types.GT#6W)]}
bind 6 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 7 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 8 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 9 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 10 GHC.Types.EQ#6U : {VV#217 : GHC.Types.Ordering | [(cmp([VV#217]) = GHC.Types.EQ#6U)]}
bind 11 GHC.Types.LT#6S : {VV#218 : GHC.Types.Ordering | [(cmp([VV#218]) = GHC.Types.LT#6S)]}
bind 12 GHC.Types.GT#6W : {VV#219 : GHC.Types.Ordering | [(cmp([VV#219]) = GHC.Types.GT#6W)]}
bind 13 lq_anf__d14W : {lq_tmp_x_227 : int | [(lq_tmp_x_227 = (0  :  int))]}
bind 14 Poly0.x#r12i : {VV#223 : int | [$k__224]}
bind 15 a#a13T : {VV#238 : t_a14c | [$k__239]}
bind 16 b#a13U : {VV#242 : t_a14b | [$k__243]}
bind 17 x#a13S : {VV#247 : int | [$k__248]}
bind 18 lq_anf__d14X : {lq_tmp_x_255 : int | [(lq_tmp_x_255 = (0  :  int))]}
bind 19 lq_anf__d14Y : {lq_tmp_x_262 : GHC.Types.Bool | [((? Prop([lq_tmp_x_262])) <=> (x#a13S > lq_anf__d14X))]}
bind 20 lq_anf__d14Z : {lq_tmp_x_270 : GHC.Types.Bool | [(lq_tmp_x_270 = lq_anf__d14Y)]}
bind 21 lq_anf__d14Z : {lq_tmp_x_272 : GHC.Types.Bool | [(lq_tmp_x_272 = lq_anf__d14Y)]}
bind 22 lq_anf__d14Z : {lq_tmp_x_272 : GHC.Types.Bool | [(lq_tmp_x_272 = lq_anf__d14Y);
                                                         (~ ((? Prop([lq_tmp_x_272]))));
                                                         (~ ((? Prop([lq_tmp_x_272]))));
                                                         (~ ((? Prop([lq_tmp_x_272]))))]}
bind 23 lq_anf__d150 : {lq_tmp_x_278 : int | [(lq_tmp_x_278 = (0  :  int))]}
bind 24 lq_anf__d14Z : {lq_tmp_x_292 : GHC.Types.Bool | [(lq_tmp_x_292 = lq_anf__d14Y)]}
bind 25 lq_anf__d14Z : {lq_tmp_x_292 : GHC.Types.Bool | [(lq_tmp_x_292 = lq_anf__d14Y);
                                                         (? Prop([lq_tmp_x_292]));
                                                         (? Prop([lq_tmp_x_292]));
                                                         (? Prop([lq_tmp_x_292]))]}
bind 26 fix#x#39##35#a13V : {lq_tmp_x_303 : int | [$k__252[VV#251:=lq_tmp_x_303][x#a13S:=Poly0.x#r12i][lq_tmp_x_305:=Poly0.x#r12i]]}
bind 27 lq_tmp_x_317 : {VV#318 : GHC.Prim.Any | []}
bind 28 lq_anf__d151 : {lq_tmp_x_309 : [GHC.Prim.Any] | [(len([lq_tmp_x_309]) = 0);
                                                         ((? null([lq_tmp_x_309])) <=> true);
                                                         (len([lq_tmp_x_309]) >= 0)]}
bind 29 fix#x#39##39##35#a13W : {lq_tmp_x_341 : int | [$k__339[VV#338:=lq_tmp_x_341][lq_tmp_x_322:=fix#x#39##35#a13V][lq_tmp_x_323:=lq_anf__d151];
                                                       (lq_tmp_x_341 = fix#x#39##35#a13V)]}
bind 30 lq_anf__d152 : {lq_tmp_x_349 : int | [(lq_tmp_x_349 = (10  :  int))]}
bind 31 lq_anf__d153 : {lq_tmp_x_356 : GHC.Types.Bool | [((? Prop([lq_tmp_x_356])) <=> (fix#x#39##39##35#a13W >= lq_anf__d152))]}
bind 32 Poly0.prop_id4#r12j : {VV#299 : GHC.Types.Bool | [$k__300]}
bind 33 fix#x#39##35#a13X : {lq_tmp_x_374 : int | [$k__252[VV#251:=lq_tmp_x_374][x#a13S:=Poly0.x#r12i][lq_tmp_x_376:=Poly0.x#r12i]]}
bind 34 lq_tmp_x_388 : {VV#389 : GHC.Prim.Any | []}
bind 35 lq_anf__d154 : {lq_tmp_x_380 : [GHC.Prim.Any] | [(len([lq_tmp_x_380]) = 0);
                                                         ((? null([lq_tmp_x_380])) <=> true);
                                                         (len([lq_tmp_x_380]) >= 0)]}
bind 36 fix#x#39##39##35#a13Y : {lq_tmp_x_412 : int | [$k__410[VV#409:=lq_tmp_x_412][lq_tmp_x_393:=fix#x#39##35#a13X][lq_tmp_x_394:=lq_anf__d154];
                                                       (lq_tmp_x_412 = fix#x#39##35#a13X)]}
bind 37 lq_anf__d155 : {lq_tmp_x_420 : int | [(lq_tmp_x_420 = (0  :  int))]}
bind 38 lq_anf__d156 : {lq_tmp_x_427 : GHC.Types.Bool | [((? Prop([lq_tmp_x_427])) <=> (fix#x#39##39##35#a13Y >= lq_anf__d155))]}
bind 39 Poly0.prop_id5#r12k : {VV#370 : GHC.Types.Bool | [$k__371]}
bind 40 VV#441 : {VV#441 : GHC.Types.Bool | [(? Prop([VV#441]))]}
bind 41 VV#441 : {VV#441 : GHC.Types.Bool | [(? Prop([VV#441]))]}
bind 42 VV#444 : {VV#444 : GHC.Types.Bool | [(VV#444 = lq_anf__d156)]}
bind 43 VV#444 : {VV#444 : GHC.Types.Bool | [(VV#444 = lq_anf__d156)]}
bind 44 VV#447 : {VV#447 : int | [(VV#447 = lq_anf__d155)]}
bind 45 VV#447 : {VV#447 : int | [(VV#447 = lq_anf__d155)]}
bind 46 VV#450 : {VV#450 : int | [(VV#450 = fix#x#39##39##35#a13Y)]}
bind 47 VV#450 : {VV#450 : int | [(VV#450 = fix#x#39##39##35#a13Y)]}
bind 48 VV#453 : {VV#453 : int | [(VV#453 = 0)]}
bind 49 VV#453 : {VV#453 : int | [(VV#453 = 0)]}
bind 50 VV#456 : {VV#456 : [GHC.Prim.Any] | [(VV#456 = lq_anf__d154);
                                             (len([VV#456]) >= 0)]}
bind 51 VV#456 : {VV#456 : [GHC.Prim.Any] | [(VV#456 = lq_anf__d154);
                                             (len([VV#456]) >= 0)]}
bind 52 VV#459 : {VV#459 : GHC.Prim.Any | [$k__382[VV#381:=VV#459][lq_tmp_x_384:=VV#459][lq_tmp_x_380:=VV#456][lq_tmp_x_417:=VV#456][lq_tmp_x_414:=VV#459]]}
bind 53 VV#459 : {VV#459 : GHC.Prim.Any | [$k__382[VV#381:=VV#459][lq_tmp_x_384:=VV#459][lq_tmp_x_380:=VV#456][lq_tmp_x_417:=VV#456][lq_tmp_x_414:=VV#459]]}
bind 54 lq_tmp_x_406 : {VV#462 : GHC.Prim.Any | []}
bind 55 VV#463 : {VV#463 : GHC.Prim.Any | [$k__386[lq_tmp_x_388:=lq_tmp_x_406][VV#385:=VV#463][lq_tmp_x_384:=VV#463][lq_tmp_x_379:=lq_tmp_x_406][lq_tmp_x_415:=lq_tmp_x_406][lq_tmp_x_416:=VV#463]]}
bind 56 VV#463 : {VV#463 : GHC.Prim.Any | [$k__386[lq_tmp_x_388:=lq_tmp_x_406][VV#385:=VV#463][lq_tmp_x_384:=VV#463][lq_tmp_x_379:=lq_tmp_x_406][lq_tmp_x_415:=lq_tmp_x_406][lq_tmp_x_416:=VV#463]]}
bind 57 VV#466 : {VV#466 : int | [(VV#466 = fix#x#39##35#a13X)]}
bind 58 VV#466 : {VV#466 : int | [(VV#466 = fix#x#39##35#a13X)]}
bind 59 VV#469 : {VV#469 : int | [(VV#469 = Poly0.x#r12i)]}
bind 60 VV#469 : {VV#469 : int | [(VV#469 = Poly0.x#r12i)]}
bind 61 VV#472 : {VV#472 : GHC.Types.Bool | [(? Prop([VV#472]))]}
bind 62 VV#472 : {VV#472 : GHC.Types.Bool | [(? Prop([VV#472]))]}
bind 63 VV#475 : {VV#475 : GHC.Types.Bool | [(VV#475 = lq_anf__d153)]}
bind 64 VV#475 : {VV#475 : GHC.Types.Bool | [(VV#475 = lq_anf__d153)]}
bind 65 VV#478 : {VV#478 : int | [(VV#478 = lq_anf__d152)]}
bind 66 VV#478 : {VV#478 : int | [(VV#478 = lq_anf__d152)]}
bind 67 VV#481 : {VV#481 : int | [(VV#481 = fix#x#39##39##35#a13W)]}
bind 68 VV#481 : {VV#481 : int | [(VV#481 = fix#x#39##39##35#a13W)]}
bind 69 VV#484 : {VV#484 : int | [(VV#484 = 10)]}
bind 70 VV#484 : {VV#484 : int | [(VV#484 = 10)]}
bind 71 VV#487 : {VV#487 : [GHC.Prim.Any] | [(VV#487 = lq_anf__d151);
                                             (len([VV#487]) >= 0)]}
bind 72 VV#487 : {VV#487 : [GHC.Prim.Any] | [(VV#487 = lq_anf__d151);
                                             (len([VV#487]) >= 0)]}
bind 73 VV#490 : {VV#490 : GHC.Prim.Any | [$k__311[VV#310:=VV#490][lq_tmp_x_313:=VV#490][lq_tmp_x_309:=VV#487][lq_tmp_x_346:=VV#487][lq_tmp_x_343:=VV#490]]}
bind 74 VV#490 : {VV#490 : GHC.Prim.Any | [$k__311[VV#310:=VV#490][lq_tmp_x_313:=VV#490][lq_tmp_x_309:=VV#487][lq_tmp_x_346:=VV#487][lq_tmp_x_343:=VV#490]]}
bind 75 lq_tmp_x_335 : {VV#493 : GHC.Prim.Any | []}
bind 76 VV#494 : {VV#494 : GHC.Prim.Any | [$k__315[lq_tmp_x_317:=lq_tmp_x_335][VV#314:=VV#494][lq_tmp_x_313:=VV#494][lq_tmp_x_308:=lq_tmp_x_335][lq_tmp_x_344:=lq_tmp_x_335][lq_tmp_x_345:=VV#494]]}
bind 77 VV#494 : {VV#494 : GHC.Prim.Any | [$k__315[lq_tmp_x_317:=lq_tmp_x_335][VV#314:=VV#494][lq_tmp_x_313:=VV#494][lq_tmp_x_308:=lq_tmp_x_335][lq_tmp_x_344:=lq_tmp_x_335][lq_tmp_x_345:=VV#494]]}
bind 78 VV#497 : {VV#497 : int | [(VV#497 = fix#x#39##35#a13V)]}
bind 79 VV#497 : {VV#497 : int | [(VV#497 = fix#x#39##35#a13V)]}
bind 80 VV#500 : {VV#500 : int | [(VV#500 = Poly0.x#r12i)]}
bind 81 VV#500 : {VV#500 : int | [(VV#500 = Poly0.x#r12i)]}
bind 82 VV#503 : {VV#503 : int | [(VV#503 = x#a13S)]}
bind 83 VV#503 : {VV#503 : int | [(VV#503 = x#a13S)]}
bind 84 VV#506 : {VV#506 : int | [(VV#506 = (lq_anf__d150 - x#a13S))]}
bind 85 VV#506 : {VV#506 : int | [(VV#506 = (lq_anf__d150 - x#a13S))]}
bind 86 VV#509 : {VV#509 : int | [(VV#509 = x#a13S)]}
bind 87 VV#509 : {VV#509 : int | [(VV#509 = x#a13S)]}
bind 88 VV#512 : {VV#512 : int | [(VV#512 = lq_anf__d150)]}
bind 89 VV#512 : {VV#512 : int | [(VV#512 = lq_anf__d150)]}
bind 90 VV#515 : {VV#515 : int | [(VV#515 = 0)]}
bind 91 VV#515 : {VV#515 : int | [(VV#515 = 0)]}
bind 92 VV#518 : {VV#518 : int | [(VV#518 = lq_anf__d14X)]}
bind 93 VV#518 : {VV#518 : int | [(VV#518 = lq_anf__d14X)]}
bind 94 VV#521 : {VV#521 : int | [(VV#521 = x#a13S)]}
bind 95 VV#521 : {VV#521 : int | [(VV#521 = x#a13S)]}
bind 96 VV#524 : {VV#524 : int | [(VV#524 = 0)]}
bind 97 VV#524 : {VV#524 : int | [(VV#524 = 0)]}
bind 98 VV#527 : {VV#527 : int | []}
bind 99 VV#527 : {VV#527 : int | []}
bind 100 VV#530 : {VV#530 : int | [(VV#530 = lq_anf__d14W)]}
bind 101 VV#530 : {VV#530 : int | [(VV#530 = lq_anf__d14W)]}
bind 102 VV#533 : {VV#533 : int | [(VV#533 = 0)]}
bind 103 VV#533 : {VV#533 : int | [(VV#533 = 0)]}
bind 104 VV#409 : {VV#409 : int | [$k__410]}
bind 105 VV#402 : {VV#402 : [GHC.Prim.Any] | [$k__403;
                                              (len([VV#402]) >= 0)]}
bind 106 VV#395 : {VV#395 : GHC.Prim.Any | [$k__396]}
bind 107 lq_tmp_x_398 : {VV#539 : GHC.Prim.Any | []}
bind 108 VV#399 : {VV#399 : GHC.Prim.Any | [$k__400]}
bind 109 VV#385 : {VV#385 : GHC.Prim.Any | [$k__386]}
bind 110 VV#381 : {VV#381 : GHC.Prim.Any | [$k__382]}
bind 111 VV#370 : {VV#370 : GHC.Types.Bool | [$k__371]}
bind 112 VV#338 : {VV#338 : int | [$k__339]}
bind 113 VV#331 : {VV#331 : [GHC.Prim.Any] | [$k__332;
                                              (len([VV#331]) >= 0)]}
bind 114 VV#324 : {VV#324 : GHC.Prim.Any | [$k__325]}
bind 115 lq_tmp_x_327 : {VV#547 : GHC.Prim.Any | []}
bind 116 VV#328 : {VV#328 : GHC.Prim.Any | [$k__329]}
bind 117 VV#314 : {VV#314 : GHC.Prim.Any | [$k__315]}
bind 118 VV#310 : {VV#310 : GHC.Prim.Any | [$k__311]}
bind 119 VV#299 : {VV#299 : GHC.Types.Bool | [$k__300]}
bind 120 VV#247 : {VV#247 : int | [$k__248]}
bind 121 VV#251 : {VV#251 : int | [$k__252]}
bind 122 VV#223 : {VV#223 : int | [$k__224]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 14; 78]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = fix#x#39##35#a13V)]}
  rhs {VV#F16 : int | [$k__339[VV#338:=VV#F16][lq_tmp_x_341:=VV#F16][VV#497:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [4]
  // META constraint id 16 : poly1.hs:14:28-29


constraint:
  env [0;
       32;
       1;
       33;
       2;
       3;
       35;
       4;
       36;
       5;
       37;
       6;
       38;
       7;
       8;
       40;
       9;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__371[VV#370:=VV#F1][VV#441:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [5]
  // META constraint id 1 : poly1.hs:17:12-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 14; 78]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = fix#x#39##35#a13V)]}
  rhs {VV#F17 : int | [$k__239[VV#238:=VV#F17][lq_tmp_x_341:=VV#F17][VV#497:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [4]
  // META constraint id 17 : poly1.hs:14:28-29


constraint:
  env [0;
       32;
       1;
       33;
       2;
       3;
       35;
       4;
       36;
       5;
       37;
       6;
       38;
       7;
       8;
       9;
       10;
       42;
       11;
       12;
       14]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d156)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [5]
  // META constraint id 2 : poly1.hs:17:27-37


constraint:
  env [0; 80; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  grd true
  lhs {VV#F18 : int | [(VV#F18 = Poly0.x#r12i)]}
  rhs {VV#F18 : int | [$k__248[VV#247:=VV#F18][lq_tmp_x_302:=VV#F18][VV#500:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [4]
  // META constraint id 18 : poly1.hs:13:28


constraint:
  env [0; 32; 1; 33; 2; 50; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  grd true
  lhs {VV#F3 : [GHC.Prim.Any] | [(VV#F3 = lq_anf__d154);
                                 (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [GHC.Prim.Any] | [$k__403[VV#402:=VV#F3][lq_tmp_x_393:=fix#x#39##35#a13X][lq_tmp_x_408:=VV#F3][VV#456:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [5]
  // META constraint id 3 : poly1.hs:19:24-25


constraint:
  env [0;
       1;
       17;
       2;
       18;
       82;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F19 : int | [(VV#F19 = x#a13S)]}
  rhs {VV#F19 : int | [$k__252[VV#251:=VV#F19][VV#503:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [3]
  // META constraint id 19 : poly1.hs:5:31


constraint:
  env [0; 32; 1; 33; 2; 50; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  grd true
  lhs {VV#F4 : [GHC.Prim.Any] | [(VV#F4 = lq_anf__d154);
                                 (len([VV#F4]) >= 0)]}
  rhs {VV#F4 : [GHC.Prim.Any] | [$k__243[a#a13T:=fix#x#39##35#a13X][VV#242:=VV#F4][lq_tmp_x_393:=fix#x#39##35#a13X][lq_tmp_x_408:=VV#F4][VV#456:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [5]
  // META constraint id 4 : poly1.hs:19:24-25


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       84;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F20 : int | [(VV#F20 = (lq_anf__d150 - x#a13S))]}
  rhs {VV#F20 : int | [$k__252[VV#251:=VV#F20][VV#506:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [3]
  // META constraint id 20 : poly1.hs:5:38-48


constraint:
  env [0;
       32;
       1;
       33;
       2;
       3;
       35;
       51;
       4;
       52;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F5 : GHC.Prim.Any | [$k__382[VV#381:=VV#F5][lq_tmp_x_384:=VV#F5][lq_tmp_x_380:=VV#456][lq_tmp_x_417:=VV#456][lq_tmp_x_414:=VV#F5][VV#459:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : GHC.Prim.Any | [$k__396[VV#395:=VV#F5][VV#402:=VV#456][lq_tmp_x_393:=fix#x#39##35#a13X][lq_tmp_x_408:=VV#456][lq_tmp_x_405:=VV#F5][VV#459:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [5]
  // META constraint id 5 : poly1.hs:19:24-25


constraint:
  env [0; 1; 2; 98; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F21 : int | []}
  rhs {VV#F21 : int | [$k__224[VV#223:=VV#F21][VV#527:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [1]
  // META constraint id 21 : poly1.hs:11:6-13


constraint:
  env [0;
       32;
       1;
       33;
       2;
       3;
       35;
       51;
       4;
       5;
       6;
       54;
       7;
       55;
       8;
       9;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F6 : GHC.Prim.Any | [$k__386[lq_tmp_x_388:=lq_tmp_x_406][VV#385:=VV#F6][lq_tmp_x_384:=VV#F6][lq_tmp_x_379:=lq_tmp_x_406][lq_tmp_x_415:=lq_tmp_x_406][lq_tmp_x_416:=VV#F6][VV#463:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : GHC.Prim.Any | [$k__400[VV#399:=VV#F6][lq_tmp_x_398:=lq_tmp_x_406][lq_tmp_x_393:=fix#x#39##35#a13X][lq_tmp_x_407:=VV#F6][VV#463:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [5]
  // META constraint id 6 : poly1.hs:19:24-25


constraint:
  env [0; 32; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 9; 57; 10; 11; 12; 14]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = fix#x#39##35#a13X)]}
  rhs {VV#F7 : int | [$k__410[VV#409:=VV#F7][lq_tmp_x_412:=VV#F7][VV#466:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [5]
  // META constraint id 7 : poly1.hs:19:21-22


constraint:
  env [0; 32; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 9; 57; 10; 11; 12; 14]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = fix#x#39##35#a13X)]}
  rhs {VV#F8 : int | [$k__239[VV#238:=VV#F8][lq_tmp_x_412:=VV#F8][VV#466:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [5]
  // META constraint id 8 : poly1.hs:19:21-22


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 59; 12; 14]
  grd true
  lhs {VV#F9 : int | [(VV#F9 = Poly0.x#r12i)]}
  rhs {VV#F9 : int | [$k__248[VV#247:=VV#F9][lq_tmp_x_373:=VV#F9][VV#469:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [5]
  // META constraint id 9 : poly1.hs:18:21


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       26;
       11;
       12;
       28;
       29;
       61;
       14;
       30;
       31]
  grd true
  lhs {VV#F10 : GHC.Types.Bool | [(? Prop([VV#F10]))]}
  rhs {VV#F10 : GHC.Types.Bool | [$k__300[VV#299:=VV#F10][VV#472:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [4]
  // META constraint id 10 : poly1.hs:15:12-39


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       26;
       11;
       12;
       28;
       29;
       14;
       30;
       31;
       63]
  grd true
  lhs {VV#F11 : GHC.Types.Bool | [(VV#F11 = lq_anf__d153)]}
  rhs {VV#F11 : GHC.Types.Bool | [(? Prop([VV#F11]))]}
  id 11 tag [4]
  // META constraint id 11 : poly1.hs:15:27-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 71; 8; 9; 10; 26; 11; 12; 28; 14]
  grd true
  lhs {VV#F12 : [GHC.Prim.Any] | [(VV#F12 = lq_anf__d151);
                                  (len([VV#F12]) >= 0)]}
  rhs {VV#F12 : [GHC.Prim.Any] | [$k__332[VV#331:=VV#F12][lq_tmp_x_322:=fix#x#39##35#a13V][lq_tmp_x_337:=VV#F12][VV#487:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [4]
  // META constraint id 12 : poly1.hs:14:31-32


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 71; 8; 9; 10; 26; 11; 12; 28; 14]
  grd true
  lhs {VV#F13 : [GHC.Prim.Any] | [(VV#F13 = lq_anf__d151);
                                  (len([VV#F13]) >= 0)]}
  rhs {VV#F13 : [GHC.Prim.Any] | [$k__243[a#a13T:=fix#x#39##35#a13V][VV#242:=VV#F13][lq_tmp_x_322:=fix#x#39##35#a13V][lq_tmp_x_337:=VV#F13][VV#487:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [4]
  // META constraint id 13 : poly1.hs:14:31-32


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9; 73; 10; 26; 11; 12; 28; 14]
  grd true
  lhs {VV#F14 : GHC.Prim.Any | [$k__311[VV#310:=VV#F14][lq_tmp_x_313:=VV#F14][lq_tmp_x_309:=VV#487][lq_tmp_x_346:=VV#487][lq_tmp_x_343:=VV#F14][VV#490:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : GHC.Prim.Any | [$k__325[VV#324:=VV#F14][VV#331:=VV#487][lq_tmp_x_322:=fix#x#39##35#a13V][lq_tmp_x_337:=VV#487][lq_tmp_x_334:=VV#F14][VV#490:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [4]
  // META constraint id 14 : poly1.hs:14:31-32


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       72;
       9;
       10;
       26;
       11;
       75;
       12;
       28;
       76;
       14]
  grd true
  lhs {VV#F15 : GHC.Prim.Any | [$k__315[lq_tmp_x_317:=lq_tmp_x_335][VV#314:=VV#F15][lq_tmp_x_313:=VV#F15][lq_tmp_x_308:=lq_tmp_x_335][lq_tmp_x_344:=lq_tmp_x_335][lq_tmp_x_345:=VV#F15][VV#494:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : GHC.Prim.Any | [$k__329[VV#328:=VV#F15][lq_tmp_x_327:=lq_tmp_x_335][lq_tmp_x_322:=fix#x#39##35#a13V][lq_tmp_x_336:=VV#F15][VV#494:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [4]
  // META constraint id 15 : poly1.hs:14:31-32




wf:
  env [0; 32; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#409 : int | [$k__410]}
  
  // META wf  : poly1.hs:19:15-19


wf:
  env [0; 32; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#402 : [GHC.Prim.Any] | [$k__403]}
  
  // META wf  : poly1.hs:19:15-19


wf:
  env [0; 32; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 9; 105; 10; 11; 12; 14]
  reft {VV#395 : GHC.Prim.Any | [$k__396]}
  
  // META wf  : poly1.hs:19:15-19


wf:
  env [0; 32; 1; 33; 2; 3; 35; 4; 5; 6; 7; 8; 9; 10; 11; 107; 12; 14]
  reft {VV#399 : GHC.Prim.Any | [$k__400]}
  
  // META wf  : poly1.hs:19:15-19


wf:
  env [0; 32; 1; 33; 2; 34; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#385 : GHC.Prim.Any | [$k__386]}
  
  // META wf  : <no location info>


wf:
  env [0; 32; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#381 : GHC.Prim.Any | [$k__382]}
  
  // META wf  : <no location info>


wf:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#370 : GHC.Types.Bool | [$k__371]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 14]
  reft {VV#338 : int | [$k__339]}
  
  // META wf  : poly1.hs:14:22-26


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 14]
  reft {VV#331 : [GHC.Prim.Any] | [$k__332]}
  
  // META wf  : poly1.hs:14:22-26


wf:
  env [0; 1; 113; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 14]
  reft {VV#324 : GHC.Prim.Any | [$k__325]}
  
  // META wf  : poly1.hs:14:22-26


wf:
  env [0; 1; 2; 3; 115; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 28; 14]
  reft {VV#328 : GHC.Prim.Any | [$k__329]}
  
  // META wf  : poly1.hs:14:22-26


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 27; 12; 14]
  reft {VV#314 : GHC.Prim.Any | [$k__315]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 14]
  reft {VV#310 : GHC.Prim.Any | [$k__311]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#299 : GHC.Types.Bool | [$k__300]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#247 : int | [$k__248]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#251 : int | [$k__252]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#238 : t_a14c | [$k__239]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14; 15]
  reft {VV#242 : t_a14b | [$k__243]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#223 : int | [$k__224]}
  
  // META wf  : <no location info>







