qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : Shapes.Shape): (rank([v]) = 1) // "revshape.hs" (line 18, column 1)
qualif Auto(v : Shapes.Shape, fix##126#A0 : Shapes.Shape, fix##126#A1 : Shapes.Shape): (rank([v]) = (rank([fix##126#A0]) + rank([fix##126#A1]))) // "revshape.hs" (line 31, column 9)
qualif Auto(v : Shapes.Shape, fix##126#A0 : Shapes.Shape, fix##126#A1 : Shapes.Shape): (rank([v]) = (rank([fix##126#A0]) + rank([fix##126#A1]))) // "revshape.hs" (line 31, column 9)
qualif Auto(v : Shapes.Shape): (rank([v]) = 2) // "revshape.hs" (line 21, column 1)
qualif Auto(v : Shapes.Shape): (rank([v]) = 2) // "revshape.hs" (line 25, column 1)
qualif Auto(v : Shapes.Shape, fix##126#A0 : Shapes.Shape): (rank([v]) = rank([fix##126#A0])) // "revshape.hs" (line 28, column 1)
qualif Auto(VV : Shapes.Shape, fix##126#A0 : Shapes.Shape): (rank([VV]) = (1 + rank([fix##126#A0]))) // "revshape.hs" (line 7, column 20)
qualif Auto(VV : Shapes.Shape): (rank([VV]) = 0) // "revshape.hs" (line 7, column 14)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : Shapes.Shape): (rank([v]) = 1) // "revshape.hs" (line 18, column 1)
qualif Auto(v : Shapes.Shape, fix##126#A0 : Shapes.Shape, fix##126#A1 : Shapes.Shape): (rank([v]) = (rank([fix##126#A0]) + rank([fix##126#A1]))) // "revshape.hs" (line 31, column 9)
qualif Auto(v : Shapes.Shape, fix##126#A0 : Shapes.Shape, fix##126#A1 : Shapes.Shape): (rank([v]) = (rank([fix##126#A0]) + rank([fix##126#A1]))) // "revshape.hs" (line 31, column 9)
qualif Auto(v : Shapes.Shape): (rank([v]) = 2) // "revshape.hs" (line 21, column 1)
qualif Auto(v : Shapes.Shape): (rank([v]) = 2) // "revshape.hs" (line 25, column 1)
qualif Auto(v : Shapes.Shape, fix##126#A0 : Shapes.Shape): (rank([v]) = rank([fix##126#A0])) // "revshape.hs" (line 28, column 1)
qualif Auto(VV : Shapes.Shape, fix##126#A0 : Shapes.Shape): (rank([VV]) = (1 + rank([fix##126#A0]))) // "revshape.hs" (line 7, column 20)
qualif Auto(VV : Shapes.Shape): (rank([VV]) = 0) // "revshape.hs" (line 7, column 14)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant Shapes.Cons#rpv : (func(0, [int;
                                     Shapes.Shape;
                                     Shapes.Shape]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant fix#Shapes.#36#WCons#35#rpv : (func(0, [int;
                                                 Shapes.Shape;
                                                 Shapes.Shape]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant Shapes.Nil#rpw : (Shapes.Shape)
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant rank : (func(0, [Shapes.Shape; int]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 Shapes.Nil#rpw : {VV#121 : Shapes.Shape | []}
bind 1 GHC.Types.EQ#6U : {VV#124 : GHC.Types.Ordering | [(VV#124 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#125 : GHC.Types.Ordering | [(VV#125 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#126 : GHC.Types.Ordering | [(VV#126 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#149 : GHC.Types.Ordering | [(cmp([VV#149]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#150 : GHC.Types.Ordering | [(cmp([VV#150]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#151 : GHC.Types.Ordering | [(cmp([VV#151]) = GHC.Types.GT#6W)]}
bind 9 Shapes.Nil#rpw : {VV#154 : Shapes.Shape | [(rank([VV#154]) = 0)]}
bind 10 shs#aL8 : {VV#159 : Shapes.Shape | []}
bind 11 ds_dLK : {VV#163 : Shapes.Shape | []}
bind 12 res#aLa : {VV#164 : Shapes.Shape | []}
bind 13 lq_anf__dLM : {lq_tmp_x_165 : Shapes.Shape | [(lq_tmp_x_165 = ds_dLK)]}
bind 14 lq_anf__dLM : {lq_tmp_x_167 : Shapes.Shape | [(lq_tmp_x_167 = ds_dLK)]}
bind 15 lq_anf__dLM : {lq_tmp_x_167 : Shapes.Shape | [(lq_tmp_x_167 = ds_dLK);
                                                      (rank([lq_tmp_x_167]) = 0);
                                                      (lq_tmp_x_167 = Shapes.Nil#rpw);
                                                      (rank([lq_tmp_x_167]) = 0)]}
bind 16 lq_anf__dLM : {lq_tmp_x_173 : Shapes.Shape | [(lq_tmp_x_173 = ds_dLK)]}
bind 17 ix#aLb : {lq_tmp_x_181 : int | []}
bind 18 more#aLc : {lq_tmp_x_182 : Shapes.Shape | []}
bind 19 lq_anf__dLM : {lq_tmp_x_173 : Shapes.Shape | [(lq_tmp_x_173 = ds_dLK);
                                                      (rank([lq_tmp_x_173]) = (1 + rank([more#aLc])));
                                                      (lq_tmp_x_173 = Shapes.Cons#rpv([ix#aLb;
                                                                                       more#aLc]));
                                                      (rank([lq_tmp_x_173]) = (1 + rank([more#aLc])))]}
bind 20 lq_anf__dLN : {lq_tmp_x_192 : Shapes.Shape | [(rank([lq_tmp_x_192]) = (1 + rank([res#aLa])))]}
bind 21 lq_anf__dLO : {lq_tmp_x_230 : int | [(lq_tmp_x_230 = (56  :  int))]}
bind 22 lq_anf__dLP : {lq_tmp_x_236 : int | [(lq_tmp_x_236 = (2  :  int))]}
bind 23 lq_anf__dLQ : {lq_tmp_x_242 : int | [(lq_tmp_x_242 = (17  :  int))]}
bind 24 lq_anf__dLR : {lq_tmp_x_249 : Shapes.Shape | [(rank([lq_tmp_x_249]) = (1 + rank([Shapes.Nil#rpw])))]}
bind 25 lq_anf__dLS : {lq_tmp_x_259 : Shapes.Shape | [(rank([lq_tmp_x_259]) = (1 + rank([lq_anf__dLR])))]}
bind 26 fix#Shapes.twoDim#39##35#rpz : {v : Shapes.Shape | [(rank([v]) = 2)]}
bind 27 lq_anf__dLT : {lq_tmp_x_278 : int | [(lq_tmp_x_278 = (2  :  int))]}
bind 28 lq_anf__dLU : {lq_tmp_x_284 : int | [(lq_tmp_x_284 = (17  :  int))]}
bind 29 lq_anf__dLV : {lq_tmp_x_291 : Shapes.Shape | [(rank([lq_tmp_x_291]) = (1 + rank([Shapes.Nil#rpw])))]}
bind 30 Shapes.twoDim#rpy : {v : Shapes.Shape | [(rank([v]) = 2)]}
bind 31 lq_anf__dLW : {lq_tmp_x_310 : int | [(lq_tmp_x_310 = (12  :  int))]}
bind 32 Shapes.oneDim#rpx : {v : Shapes.Shape | [(rank([v]) = 1)]}
bind 33 VV#325 : {VV#325 : Shapes.Shape | [(rank([VV#325]) = (1 + rank([Shapes.Nil#rpw])))]}
bind 34 VV#325 : {VV#325 : Shapes.Shape | [(rank([VV#325]) = (1 + rank([Shapes.Nil#rpw])))]}
bind 35 VV#328 : {VV#328 : Shapes.Shape | [(VV#328 = Shapes.Nil#rpw)]}
bind 36 VV#328 : {VV#328 : Shapes.Shape | [(VV#328 = Shapes.Nil#rpw)]}
bind 37 VV#331 : {VV#331 : int | [(VV#331 = lq_anf__dLW)]}
bind 38 VV#331 : {VV#331 : int | [(VV#331 = lq_anf__dLW)]}
bind 39 VV#334 : {VV#334 : int | [(VV#334 = 12)]}
bind 40 VV#334 : {VV#334 : int | [(VV#334 = 12)]}
bind 41 VV#337 : {VV#337 : Shapes.Shape | [(rank([VV#337]) = (1 + rank([lq_anf__dLV])))]}
bind 42 VV#337 : {VV#337 : Shapes.Shape | [(rank([VV#337]) = (1 + rank([lq_anf__dLV])))]}
bind 43 VV#340 : {VV#340 : Shapes.Shape | [(VV#340 = lq_anf__dLV)]}
bind 44 VV#340 : {VV#340 : Shapes.Shape | [(VV#340 = lq_anf__dLV)]}
bind 45 VV#343 : {VV#343 : int | [(VV#343 = lq_anf__dLT)]}
bind 46 VV#343 : {VV#343 : int | [(VV#343 = lq_anf__dLT)]}
bind 47 VV#346 : {VV#346 : Shapes.Shape | [(VV#346 = Shapes.Nil#rpw)]}
bind 48 VV#346 : {VV#346 : Shapes.Shape | [(VV#346 = Shapes.Nil#rpw)]}
bind 49 VV#349 : {VV#349 : int | [(VV#349 = lq_anf__dLU)]}
bind 50 VV#349 : {VV#349 : int | [(VV#349 = lq_anf__dLU)]}
bind 51 VV#352 : {VV#352 : int | [(VV#352 = 17)]}
bind 52 VV#352 : {VV#352 : int | [(VV#352 = 17)]}
bind 53 VV#355 : {VV#355 : int | [(VV#355 = 2)]}
bind 54 VV#355 : {VV#355 : int | [(VV#355 = 2)]}
bind 55 VV#358 : {VV#358 : Shapes.Shape | [(rank([VV#358]) = (1 + rank([lq_anf__dLS])))]}
bind 56 VV#358 : {VV#358 : Shapes.Shape | [(rank([VV#358]) = (1 + rank([lq_anf__dLS])))]}
bind 57 VV#361 : {VV#361 : Shapes.Shape | [(VV#361 = lq_anf__dLS)]}
bind 58 VV#361 : {VV#361 : Shapes.Shape | [(VV#361 = lq_anf__dLS)]}
bind 59 VV#364 : {VV#364 : int | [(VV#364 = lq_anf__dLO)]}
bind 60 VV#364 : {VV#364 : int | [(VV#364 = lq_anf__dLO)]}
bind 61 VV#367 : {VV#367 : Shapes.Shape | [(VV#367 = lq_anf__dLR)]}
bind 62 VV#367 : {VV#367 : Shapes.Shape | [(VV#367 = lq_anf__dLR)]}
bind 63 VV#370 : {VV#370 : int | [(VV#370 = lq_anf__dLP)]}
bind 64 VV#370 : {VV#370 : int | [(VV#370 = lq_anf__dLP)]}
bind 65 VV#373 : {VV#373 : Shapes.Shape | [(VV#373 = Shapes.Nil#rpw)]}
bind 66 VV#373 : {VV#373 : Shapes.Shape | [(VV#373 = Shapes.Nil#rpw)]}
bind 67 VV#376 : {VV#376 : int | [(VV#376 = lq_anf__dLQ)]}
bind 68 VV#376 : {VV#376 : int | [(VV#376 = lq_anf__dLQ)]}
bind 69 VV#379 : {VV#379 : int | [(VV#379 = 17)]}
bind 70 VV#379 : {VV#379 : int | [(VV#379 = 17)]}
bind 71 VV#382 : {VV#382 : int | [(VV#382 = 2)]}
bind 72 VV#382 : {VV#382 : int | [(VV#382 = 2)]}
bind 73 VV#385 : {VV#385 : int | [(VV#385 = 56)]}
bind 74 VV#385 : {VV#385 : int | [(VV#385 = 56)]}
bind 75 VV#388 : {VV#388 : Shapes.Shape | [(rank([VV#388]) = (rank([shs#aL8]) + rank([Shapes.Nil#rpw])))]}
bind 76 VV#388 : {VV#388 : Shapes.Shape | [(rank([VV#388]) = (rank([shs#aL8]) + rank([Shapes.Nil#rpw])))]}
bind 77 VV#391 : {VV#391 : Shapes.Shape | [(VV#391 = Shapes.Nil#rpw)]}
bind 78 VV#391 : {VV#391 : Shapes.Shape | [(VV#391 = Shapes.Nil#rpw)]}
bind 79 VV#394 : {VV#394 : Shapes.Shape | [(VV#394 = shs#aL8)]}
bind 80 VV#394 : {VV#394 : Shapes.Shape | [(VV#394 = shs#aL8)]}
bind 81 VV#398 : {VV#398 : Shapes.Shape | []}
bind 82 VV#398 : {VV#398 : Shapes.Shape | []}
bind 83 lq_tmp_x_209 : {VV#401 : Shapes.Shape | []}
bind 84 VV#403 : {VV#403 : Shapes.Shape | []}
bind 85 VV#403 : {VV#403 : Shapes.Shape | []}
bind 86 lq_tmp_x_210 : {VV#406 : Shapes.Shape | []}
bind 87 VV#407 : {VV#407 : Shapes.Shape | [(rank([VV#407]) = (rank([lq_tmp_x_209]) + rank([lq_tmp_x_210])))]}
bind 88 VV#407 : {VV#407 : Shapes.Shape | [(rank([VV#407]) = (rank([lq_tmp_x_209]) + rank([lq_tmp_x_210])))]}
bind 89 VV#410 : {VV#410 : Shapes.Shape | [(rank([VV#410]) = (rank([more#aLc]) + rank([lq_anf__dLN])))]}
bind 90 VV#410 : {VV#410 : Shapes.Shape | [(rank([VV#410]) = (rank([more#aLc]) + rank([lq_anf__dLN])))]}
bind 91 VV#413 : {VV#413 : Shapes.Shape | [(VV#413 = lq_anf__dLN)]}
bind 92 VV#413 : {VV#413 : Shapes.Shape | [(VV#413 = lq_anf__dLN)]}
bind 93 VV#416 : {VV#416 : Shapes.Shape | [(VV#416 = more#aLc)]}
bind 94 VV#416 : {VV#416 : Shapes.Shape | [(VV#416 = more#aLc)]}
bind 95 VV#419 : {VV#419 : Shapes.Shape | [(VV#419 = res#aLa)]}
bind 96 VV#419 : {VV#419 : Shapes.Shape | [(VV#419 = res#aLa)]}
bind 97 VV#422 : {VV#422 : int | [(VV#422 = ix#aLb)]}
bind 98 VV#422 : {VV#422 : int | [(VV#422 = ix#aLb)]}
bind 99 VV#425 : {VV#425 : Shapes.Shape | [(VV#425 = res#aLa)]}
bind 100 VV#425 : {VV#425 : Shapes.Shape | [(VV#425 = res#aLa)]}




constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 26; 30; 31]
  grd true
  lhs {VV#F1 : Shapes.Shape | [(rank([VV#F1]) = (1 + rank([Shapes.Nil#rpw])))]}
  rhs {VV#F1 : Shapes.Shape | [(rank([VV#F1]) = 1)]}
  id 1 tag [4]
  // META constraint id 1 : revshape.hs:18:10-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 41; 26; 27; 28; 29]
  grd true
  lhs {VV#F2 : Shapes.Shape | [(rank([VV#F2]) = (1 + rank([lq_anf__dLV])))]}
  rhs {VV#F2 : Shapes.Shape | [(rank([VV#F2]) = 2)]}
  id 2 tag [3]
  // META constraint id 2 : revshape.hs:21:10-33


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 55; 8; 24; 9; 25]
  grd true
  lhs {VV#F3 : Shapes.Shape | [(rank([VV#F3]) = (1 + rank([lq_anf__dLS])))]}
  rhs {VV#F3 : Shapes.Shape | [(rank([VV#F3]) = 2)]}
  id 3 tag [2]
  // META constraint id 3 : revshape.hs:25:11-46


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 75]
  grd true
  lhs {VV#F4 : Shapes.Shape | [(rank([VV#F4]) = (rank([shs#aL8]) + rank([Shapes.Nil#rpw])))]}
  rhs {VV#F4 : Shapes.Shape | [(rank([VV#F4]) = rank([shs#aL8]))]}
  id 4 tag [1]
  // META constraint id 4 : revshape.hs:28:20-29


constraint:
  env [0; 1; 2; 3; 83; 4; 5; 6; 86; 7; 87; 8; 9; 10]
  grd true
  lhs {VV#F5 : Shapes.Shape | [(rank([VV#F5]) = (rank([lq_tmp_x_209]) + rank([lq_tmp_x_210])))]}
  rhs {VV#F5 : Shapes.Shape | [(rank([VV#F5]) = (rank([lq_tmp_x_209]) + rank([lq_tmp_x_210])))]}
  id 5 tag [1]
  // META constraint id 5 : revshape.hs:31:9-10


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       89;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F6 : Shapes.Shape | [(rank([VV#F6]) = (rank([more#aLc]) + rank([lq_anf__dLN])))]}
  rhs {VV#F6 : Shapes.Shape | [(rank([VV#F6]) = (rank([ds_dLK]) + rank([res#aLa])))]}
  id 6 tag [1]
  // META constraint id 6 : revshape.hs:32:33-54


constraint:
  env [0; 1; 2; 3; 99; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F7 : Shapes.Shape | [(VV#F7 = res#aLa)]}
  rhs {VV#F7 : Shapes.Shape | [(rank([VV#F7]) = (rank([ds_dLK]) + rank([res#aLa])))]}
  id 7 tag [1]
  // META constraint id 7 : revshape.hs:31:33-35









