qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)




bind 0 GHC.Types.False#68 : {VV#172 : GHC.Types.Bool | []}
bind 1 GHC.Types.True#6u : {VV#174 : GHC.Types.Bool | []}
bind 2 GHC.Types.EQ#6U : {VV#180 : GHC.Types.Ordering | [(VV#180 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#181 : GHC.Types.Ordering | [(VV#181 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#182 : GHC.Types.Ordering | [(VV#182 = GHC.Types.GT#6W)]}
bind 5 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 6 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 7 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 8 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 9 GHC.Types.EQ#6U : {VV#225 : GHC.Types.Ordering | [(cmp([VV#225]) = GHC.Types.EQ#6U)]}
bind 10 GHC.Types.LT#6S : {VV#226 : GHC.Types.Ordering | [(cmp([VV#226]) = GHC.Types.LT#6S)]}
bind 11 GHC.Types.GT#6W : {VV#227 : GHC.Types.Ordering | [(cmp([VV#227]) = GHC.Types.GT#6W)]}
bind 12 lq_anf__d156 : {lq_tmp_x_235 : int | [(lq_tmp_x_235 = (0  :  int))]}
bind 13 Poly0.x#r12i : {VV#231 : int | [$k__232]}
bind 14 arg#a141 : {VV#246 : t_a14h | [$k__247]}
bind 15 x#a140 : {VV#251 : int | [$k__252]}
bind 16 lq_anf__d157 : {lq_tmp_x_259 : int | [(lq_tmp_x_259 = (0  :  int))]}
bind 17 lq_anf__d158 : {lq_tmp_x_266 : GHC.Types.Bool | [((? Prop([lq_tmp_x_266])) <=> (x#a140 > lq_anf__d157))]}
bind 18 lq_anf__d159 : {lq_tmp_x_274 : GHC.Types.Bool | [(lq_tmp_x_274 = lq_anf__d158)]}
bind 19 lq_anf__d159 : {lq_tmp_x_276 : GHC.Types.Bool | [(lq_tmp_x_276 = lq_anf__d158)]}
bind 20 lq_anf__d159 : {lq_tmp_x_276 : GHC.Types.Bool | [(lq_tmp_x_276 = lq_anf__d158);
                                                         (~ ((? Prop([lq_tmp_x_276]))));
                                                         (~ ((? Prop([lq_tmp_x_276]))));
                                                         (~ ((? Prop([lq_tmp_x_276]))))]}
bind 21 lq_anf__d15a : {lq_tmp_x_282 : int | [(lq_tmp_x_282 = (0  :  int))]}
bind 22 lq_anf__d159 : {lq_tmp_x_296 : GHC.Types.Bool | [(lq_tmp_x_296 = lq_anf__d158)]}
bind 23 lq_anf__d159 : {lq_tmp_x_296 : GHC.Types.Bool | [(lq_tmp_x_296 = lq_anf__d158);
                                                         (? Prop([lq_tmp_x_296]));
                                                         (? Prop([lq_tmp_x_296]));
                                                         (? Prop([lq_tmp_x_296]))]}
bind 24 fix#x#39##35#a142 : {lq_tmp_x_307 : int | [$k__256[VV#255:=lq_tmp_x_307][x#a140:=Poly0.x#r12i][lq_tmp_x_309:=Poly0.x#r12i]]}
bind 25 fix#x#39##39##35#a143 : {lq_tmp_x_317 : int | [$k__315[VV#314:=lq_tmp_x_317][lq_tmp_x_313:=fix#x#39##35#a142];
                                                       (lq_tmp_x_317 = fix#x#39##35#a142)]}
bind 26 lq_anf__d15b : {lq_tmp_x_321 : int | [(lq_tmp_x_321 = (0  :  int))]}
bind 27 lq_anf__d15c : {lq_tmp_x_328 : GHC.Types.Bool | [((? Prop([lq_tmp_x_328])) <=> (fix#x#39##39##35#a143 >= lq_anf__d15b))]}
bind 28 Poly0.prop_id1#r12j : {VV#303 : GHC.Types.Bool | [$k__304]}
bind 29 fix#x#39##35#a144 : {lq_tmp_x_346 : int | [$k__256[VV#255:=lq_tmp_x_346][x#a140:=Poly0.x#r12i][lq_tmp_x_348:=Poly0.x#r12i]]}
bind 30 fix#x#39##39##35#a145 : {lq_tmp_x_356 : int | [$k__354[VV#353:=lq_tmp_x_356][lq_tmp_x_352:=fix#x#39##35#a144];
                                                       (lq_tmp_x_356 = fix#x#39##35#a144)]}
bind 31 lq_anf__d15d : {lq_tmp_x_360 : int | [(lq_tmp_x_360 = (0  :  int))]}
bind 32 lq_anf__d15e : {lq_tmp_x_367 : GHC.Types.Bool | [((? Prop([lq_tmp_x_367])) <=> (fix#x#39##39##35#a145 >= lq_anf__d15d))]}
bind 33 Poly0.prop_id2#r12k : {VV#342 : GHC.Types.Bool | [$k__343]}
bind 34 lq_anf__d15g : {lq_tmp_x_392 : int | [$k__256[VV#255:=lq_tmp_x_392][x#a140:=Poly0.x#r12i][lq_tmp_x_394:=Poly0.x#r12i]]}
bind 35 fix#x#39##35#a146 : {lq_tmp_x_410 : int | [$k__408[VV#407:=lq_tmp_x_410][lq_tmp_x_401:=lq_anf__d15f][lq_tmp_x_402:=lq_anf__d15g]]}
bind 36 lq_anf__d15h : {lq_tmp_x_418 : int | [(lq_tmp_x_418 = (20  :  int))]}
bind 37 lq_anf__d15i : {lq_tmp_x_425 : GHC.Types.Bool | [((? Prop([lq_tmp_x_425])) <=> (fix#x#39##35#a146 >= lq_anf__d15h))]}
bind 38 Poly0.prop_id3#r12l : {VV#381 : GHC.Types.Bool | [$k__382]}
bind 39 VV#439 : {VV#439 : GHC.Types.Bool | [(? Prop([VV#439]))]}
bind 40 VV#439 : {VV#439 : GHC.Types.Bool | [(? Prop([VV#439]))]}
bind 41 VV#442 : {VV#442 : GHC.Types.Bool | [(VV#442 = lq_anf__d15i)]}
bind 42 VV#442 : {VV#442 : GHC.Types.Bool | [(VV#442 = lq_anf__d15i)]}
bind 43 VV#445 : {VV#445 : int | [(VV#445 = lq_anf__d15h)]}
bind 44 VV#445 : {VV#445 : int | [(VV#445 = lq_anf__d15h)]}
bind 45 VV#448 : {VV#448 : int | [(VV#448 = fix#x#39##35#a146)]}
bind 46 VV#448 : {VV#448 : int | [(VV#448 = fix#x#39##35#a146)]}
bind 47 VV#451 : {VV#451 : int | [(VV#451 = 20)]}
bind 48 VV#451 : {VV#451 : int | [(VV#451 = 20)]}
bind 49 VV#454 : {VV#454 : int | [(VV#454 = lq_anf__d15g)]}
bind 50 VV#454 : {VV#454 : int | [(VV#454 = lq_anf__d15g)]}
bind 51 VV#458 : {VV#458 : int | [$k__404[VV#403:=VV#458][lq_tmp_x_406:=VV#458]]}
bind 52 VV#458 : {VV#458 : int | [$k__404[VV#403:=VV#458][lq_tmp_x_406:=VV#458]]}
bind 53 lq_tmp_x_400 : {lq_tmp_x_406 : int | [$k__404[VV#403:=lq_tmp_x_406]]}
bind 54 VV#462 : {VV#462 : int | [$k__387[VV#386:=VV#462][lq_tmp_x_389:=VV#462][lq_tmp_x_385:=lq_tmp_x_400][lq_tmp_x_414:=lq_tmp_x_400][lq_tmp_x_412:=VV#462];
                                  (VV#462 = lq_tmp_x_400)]}
bind 55 VV#462 : {VV#462 : int | [$k__387[VV#386:=VV#462][lq_tmp_x_389:=VV#462][lq_tmp_x_385:=lq_tmp_x_400][lq_tmp_x_414:=lq_tmp_x_400][lq_tmp_x_412:=VV#462];
                                  (VV#462 = lq_tmp_x_400)]}
bind 56 VV#465 : {VV#465 : int | [(VV#465 = Poly0.x#r12i)]}
bind 57 VV#465 : {VV#465 : int | [(VV#465 = Poly0.x#r12i)]}
bind 58 VV#468 : {VV#468 : GHC.Types.Bool | [(? Prop([VV#468]))]}
bind 59 VV#468 : {VV#468 : GHC.Types.Bool | [(? Prop([VV#468]))]}
bind 60 VV#471 : {VV#471 : GHC.Types.Bool | [(VV#471 = lq_anf__d15e)]}
bind 61 VV#471 : {VV#471 : GHC.Types.Bool | [(VV#471 = lq_anf__d15e)]}
bind 62 VV#474 : {VV#474 : int | [(VV#474 = lq_anf__d15d)]}
bind 63 VV#474 : {VV#474 : int | [(VV#474 = lq_anf__d15d)]}
bind 64 VV#477 : {VV#477 : int | [(VV#477 = fix#x#39##39##35#a145)]}
bind 65 VV#477 : {VV#477 : int | [(VV#477 = fix#x#39##39##35#a145)]}
bind 66 VV#480 : {VV#480 : int | [(VV#480 = 0)]}
bind 67 VV#480 : {VV#480 : int | [(VV#480 = 0)]}
bind 68 VV#483 : {VV#483 : int | [(VV#483 = fix#x#39##35#a144)]}
bind 69 VV#483 : {VV#483 : int | [(VV#483 = fix#x#39##35#a144)]}
bind 70 VV#486 : {VV#486 : int | [(VV#486 = Poly0.x#r12i)]}
bind 71 VV#486 : {VV#486 : int | [(VV#486 = Poly0.x#r12i)]}
bind 72 VV#489 : {VV#489 : GHC.Types.Bool | [(? Prop([VV#489]))]}
bind 73 VV#489 : {VV#489 : GHC.Types.Bool | [(? Prop([VV#489]))]}
bind 74 VV#492 : {VV#492 : GHC.Types.Bool | [(VV#492 = lq_anf__d15c)]}
bind 75 VV#492 : {VV#492 : GHC.Types.Bool | [(VV#492 = lq_anf__d15c)]}
bind 76 VV#495 : {VV#495 : int | [(VV#495 = lq_anf__d15b)]}
bind 77 VV#495 : {VV#495 : int | [(VV#495 = lq_anf__d15b)]}
bind 78 VV#498 : {VV#498 : int | [(VV#498 = fix#x#39##39##35#a143)]}
bind 79 VV#498 : {VV#498 : int | [(VV#498 = fix#x#39##39##35#a143)]}
bind 80 VV#501 : {VV#501 : int | [(VV#501 = 0)]}
bind 81 VV#501 : {VV#501 : int | [(VV#501 = 0)]}
bind 82 VV#504 : {VV#504 : int | [(VV#504 = fix#x#39##35#a142)]}
bind 83 VV#504 : {VV#504 : int | [(VV#504 = fix#x#39##35#a142)]}
bind 84 VV#507 : {VV#507 : int | [(VV#507 = Poly0.x#r12i)]}
bind 85 VV#507 : {VV#507 : int | [(VV#507 = Poly0.x#r12i)]}
bind 86 VV#510 : {VV#510 : int | [(VV#510 = x#a140)]}
bind 87 VV#510 : {VV#510 : int | [(VV#510 = x#a140)]}
bind 88 VV#513 : {VV#513 : int | [(VV#513 = (lq_anf__d15a - x#a140))]}
bind 89 VV#513 : {VV#513 : int | [(VV#513 = (lq_anf__d15a - x#a140))]}
bind 90 VV#516 : {VV#516 : int | [(VV#516 = x#a140)]}
bind 91 VV#516 : {VV#516 : int | [(VV#516 = x#a140)]}
bind 92 VV#519 : {VV#519 : int | [(VV#519 = lq_anf__d15a)]}
bind 93 VV#519 : {VV#519 : int | [(VV#519 = lq_anf__d15a)]}
bind 94 VV#522 : {VV#522 : int | [(VV#522 = 0)]}
bind 95 VV#522 : {VV#522 : int | [(VV#522 = 0)]}
bind 96 VV#525 : {VV#525 : int | [(VV#525 = lq_anf__d157)]}
bind 97 VV#525 : {VV#525 : int | [(VV#525 = lq_anf__d157)]}
bind 98 VV#528 : {VV#528 : int | [(VV#528 = x#a140)]}
bind 99 VV#528 : {VV#528 : int | [(VV#528 = x#a140)]}
bind 100 VV#531 : {VV#531 : int | [(VV#531 = 0)]}
bind 101 VV#531 : {VV#531 : int | [(VV#531 = 0)]}
bind 102 VV#534 : {VV#534 : int | []}
bind 103 VV#534 : {VV#534 : int | []}
bind 104 VV#537 : {VV#537 : int | [(VV#537 = lq_anf__d156)]}
bind 105 VV#537 : {VV#537 : int | [(VV#537 = lq_anf__d156)]}
bind 106 VV#540 : {VV#540 : int | [(VV#540 = 0)]}
bind 107 VV#540 : {VV#540 : int | [(VV#540 = 0)]}
bind 108 VV#407 : {VV#407 : int | [$k__408]}
bind 109 VV#403 : {VV#403 : int | [$k__404]}
bind 110 VV#386 : {VV#386 : int | [$k__387]}
bind 111 VV#381 : {VV#381 : GHC.Types.Bool | [$k__382]}
bind 112 VV#353 : {VV#353 : int | [$k__354]}
bind 113 VV#342 : {VV#342 : GHC.Types.Bool | [$k__343]}
bind 114 VV#314 : {VV#314 : int | [$k__315]}
bind 115 VV#303 : {VV#303 : GHC.Types.Bool | [$k__304]}
bind 116 VV#251 : {VV#251 : int | [$k__252]}
bind 117 VV#255 : {VV#255 : int | [$k__256]}
bind 118 VV#231 : {VV#231 : int | [$k__232]}




constraint:
  env [0; 1; 2; 82; 3; 4; 5; 6; 7; 8; 24; 9; 10; 11; 13]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = fix#x#39##35#a142)]}
  rhs {VV#F16 : int | [$k__247[VV#246:=VV#F16][lq_tmp_x_317:=VV#F16][VV#504:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [4]
  // META constraint id 16 : poly0.hs:14:27-28


constraint:
  env [0;
       1;
       33;
       2;
       34;
       3;
       35;
       4;
       36;
       5;
       37;
       6;
       7;
       39;
       8;
       9;
       10;
       11;
       28;
       13]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__382[VV#381:=VV#F1][VV#439:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [6]
  // META constraint id 1 : poly0.hs:21:12-38


constraint:
  env [0; 1; 2; 3; 4; 84; 5; 6; 7; 8; 9; 10; 11; 13]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = Poly0.x#r12i)]}
  rhs {VV#F17 : int | [$k__252[VV#251:=VV#F17][lq_tmp_x_306:=VV#F17][VV#507:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [4]
  // META constraint id 17 : poly0.hs:13:28


constraint:
  env [0;
       1;
       33;
       2;
       34;
       3;
       35;
       4;
       36;
       5;
       37;
       6;
       7;
       8;
       9;
       41;
       10;
       11;
       28;
       13]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d15i)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [6]
  // META constraint id 2 : poly0.hs:21:27-37


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       22;
       86;
       7;
       23;
       8;
       9;
       10;
       11;
       13;
       15]
  grd true
  lhs {VV#F18 : int | [(VV#F18 = x#a140)]}
  rhs {VV#F18 : int | [$k__256[VV#255:=VV#F18][VV#510:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [3]
  // META constraint id 18 : poly0.hs:5:31


constraint:
  env [0; 1; 33; 49; 2; 34; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = lq_anf__d15g)]}
  rhs {VV#F3 : int | [$k__404[VV#403:=VV#F3][lq_tmp_x_401:=lq_anf__d15f][lq_tmp_x_406:=VV#F3][VV#454:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [6]
  // META constraint id 3 : poly0.hs:22:21-27


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       88;
       9;
       10;
       11;
       13;
       15]
  grd true
  lhs {VV#F19 : int | [(VV#F19 = (lq_anf__d15a - x#a140))]}
  rhs {VV#F19 : int | [$k__256[VV#255:=VV#F19][VV#513:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [3]
  // META constraint id 19 : poly0.hs:5:38-48


constraint:
  env [0; 1; 33; 2; 34; 3; 51; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  grd true
  lhs {VV#F4 : int | [$k__404[VV#403:=VV#F4][lq_tmp_x_406:=VV#F4][VV#458:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__387[VV#386:=VV#F4][lq_tmp_x_389:=VV#F4][lq_tmp_x_411:=VV#F4][VV#458:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [6]
  // META constraint id 4 : poly0.hs:22:14-17


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 102; 7; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F20 : int | []}
  rhs {VV#F20 : int | [$k__232[VV#231:=VV#F20][VV#534:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [1]
  // META constraint id 20 : poly0.hs:11:5-12


constraint:
  env [0; 1; 33; 2; 34; 3; 51; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  grd true
  lhs {VV#F5 : int | [$k__404[VV#403:=VV#F5][lq_tmp_x_406:=VV#F5][VV#458:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__247[VV#246:=VV#F5][lq_tmp_x_389:=VV#F5][lq_tmp_x_411:=VV#F5][VV#458:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [6]
  // META constraint id 5 : poly0.hs:22:14-17


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 5; 53; 6; 54; 7; 8; 9; 10; 11; 28; 13]
  grd true
  lhs {VV#F6 : int | [$k__387[VV#386:=VV#F6][lq_tmp_x_389:=VV#F6][lq_tmp_x_385:=lq_tmp_x_400][lq_tmp_x_414:=lq_tmp_x_400][lq_tmp_x_412:=VV#F6][VV#462:=VV#F6][VV#F:=VV#F6];
                      (VV#F6 = lq_tmp_x_400)]}
  rhs {VV#F6 : int | [$k__408[VV#407:=VV#F6][lq_tmp_x_410:=VV#F6][VV#462:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [6]
  // META constraint id 6 : poly0.hs:22:14-17


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 56; 9; 10; 11; 28; 13]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = Poly0.x#r12i)]}
  rhs {VV#F7 : int | [$k__252[VV#251:=VV#F7][lq_tmp_x_391:=VV#F7][VV#465:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [6]
  // META constraint id 7 : poly0.hs:22:27


constraint:
  env [0;
       32;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       58;
       11;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F8 : GHC.Types.Bool | [(? Prop([VV#F8]))]}
  rhs {VV#F8 : GHC.Types.Bool | [$k__343[VV#342:=VV#F8][VV#468:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [5]
  // META constraint id 8 : poly0.hs:17:12-38


constraint:
  env [0;
       32;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       28;
       60;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F9 : GHC.Types.Bool | [(VV#F9 = lq_anf__d15e)]}
  rhs {VV#F9 : GHC.Types.Bool | [(? Prop([VV#F9]))]}
  id 9 tag [5]
  // META constraint id 9 : poly0.hs:17:27-37


constraint:
  env [0; 1; 2; 3; 4; 68; 5; 6; 7; 8; 9; 10; 11; 28; 13; 29]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = fix#x#39##35#a144)]}
  rhs {VV#F10 : int | [$k__354[VV#353:=VV#F10][lq_tmp_x_356:=VV#F10][VV#483:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [5]
  // META constraint id 10 : poly0.hs:19:20-21


constraint:
  env [0; 1; 2; 3; 4; 68; 5; 6; 7; 8; 9; 10; 11; 28; 13; 29]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = fix#x#39##35#a144)]}
  rhs {VV#F11 : int | [$k__247[VV#246:=VV#F11][lq_tmp_x_356:=VV#F11][VV#483:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [5]
  // META constraint id 11 : poly0.hs:19:20-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 10; 11; 28; 13]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = Poly0.x#r12i)]}
  rhs {VV#F12 : int | [$k__252[VV#251:=VV#F12][lq_tmp_x_345:=VV#F12][VV#486:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [5]
  // META constraint id 12 : poly0.hs:18:21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 72; 9; 25; 10; 26; 11; 27; 13]
  grd true
  lhs {VV#F13 : GHC.Types.Bool | [(? Prop([VV#F13]))]}
  rhs {VV#F13 : GHC.Types.Bool | [$k__304[VV#303:=VV#F13][VV#489:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [4]
  // META constraint id 13 : poly0.hs:15:12-38


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 25; 10; 26; 74; 11; 27; 13]
  grd true
  lhs {VV#F14 : GHC.Types.Bool | [(VV#F14 = lq_anf__d15c)]}
  rhs {VV#F14 : GHC.Types.Bool | [(? Prop([VV#F14]))]}
  id 14 tag [4]
  // META constraint id 14 : poly0.hs:15:27-37


constraint:
  env [0; 1; 2; 82; 3; 4; 5; 6; 7; 8; 24; 9; 10; 11; 13]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = fix#x#39##35#a142)]}
  rhs {VV#F15 : int | [$k__315[VV#314:=VV#F15][lq_tmp_x_317:=VV#F15][VV#504:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [4]
  // META constraint id 15 : poly0.hs:14:27-28




wf:
  env [0; 1; 33; 2; 34; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  reft {VV#407 : int | [$k__408]}
  
  // META wf  : poly0.hs:22:19


wf:
  env [0; 1; 33; 2; 34; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  reft {VV#403 : int | [$k__404]}
  
  // META wf  : poly0.hs:22:19


wf:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  reft {VV#386 : int | [$k__387]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  reft {VV#381 : GHC.Types.Bool | [$k__382]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13; 29]
  reft {VV#353 : int | [$k__354]}
  
  // META wf  : poly0.hs:19:15-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 28; 13]
  reft {VV#342 : GHC.Types.Bool | [$k__343]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 11; 13]
  reft {VV#314 : int | [$k__315]}
  
  // META wf  : poly0.hs:14:22-25


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13]
  reft {VV#303 : GHC.Types.Bool | [$k__304]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13]
  reft {VV#251 : int | [$k__252]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13; 15]
  reft {VV#255 : int | [$k__256]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 13]
  reft {VV#246 : t_a14h | [$k__247]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#231 : int | [$k__232]}
  
  // META wf  : <no location info>







