qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 12, column 1)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 12, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(VV : b_a12p, fix##126#A0 : a_a12o): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif Auto(vv : a_a12o, fix##126#A0 : a_a12o): (vv = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : b_a12p): (y([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : a_a12o): (x([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(v : b_a12p, fix##126#P : (Pred  b_a12p  a_a12o), fix##126#A0 : a_a12o): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 12, column 1)
qualif Auto(VV : a_a14s, fix##126#A0 : a_a14s): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(vv : a_a14s, fix##126#A0 : a_a14s): (vv = fix##126#A0) // "deptupW.hs" (line 12, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(v : a_a14s, fix##126#P : (Pred  a_a14s  a_a14s), fix##126#A0 : a_a14s): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 12, column 1)
qualif Auto(VV : b_a12p, fix##126#A0 : a_a12o): (? papp2([p;
                                                          VV;
                                                          fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif Auto(vv : a_a12o, fix##126#A0 : a_a12o): (vv = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : b_a12p): (y([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(VV : (Deptup0.Pair  a_a12o  b_a12p), fix##126#A0 : a_a12o): (x([VV]) = fix##126#A0) // "deptupW.hs" (line 6, column 17)
qualif Auto(v : b_a12p, fix##126#P : (Pred  b_a12p  a_a12o), fix##126#A0 : a_a12o): (? papp2([fix##126#P;
                                                                                              v;
                                                                                              fix##126#A0])) // "deptupW.hs" (line 6, column 17)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant y : (func(2, [(Deptup0.Pair  @(0)  @(1)); @(1)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x : (func(2, [(Deptup0.Pair  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant Deptup0.P#r12h : (func(2, [@(0);
                                    @(1);
                                    (Deptup0.Pair  @(0)  @(1))]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant Deptup0.P#r12h : (func(2, [@(0);
                                    @(1);
                                    (Deptup0.Pair  @(0)  @(1))]))
constant lit#TBD : (Str)


bind 0 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#210 : (GHC.Classes.Ord  int) | []}
bind 1 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#211 : (GHC.Num.Num  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#215 : GHC.Types.Ordering | [(VV#215 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#216 : GHC.Types.Ordering | [(VV#216 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#217 : GHC.Types.Ordering | [(VV#217 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#260 : GHC.Types.Ordering | [(cmp([VV#260]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#261 : GHC.Types.Ordering | [(cmp([VV#261]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#262 : GHC.Types.Ordering | [(cmp([VV#262]) = GHC.Types.GT#6W)]}
bind 10 p : {VV#269 : (Pred  a_a14s  a_a14s) | []}
bind 11 x0 : {VV : a_a14s | []}
bind 12 x#a140 : {VV : a_a14s | []}
bind 13 y#a141 : {VV : a_a14s | [(? papp2([p; VV; x#a140]))]}
bind 14 lq_anf__d14W : {lq_tmp_x_273 : int | [(lq_tmp_x_273 ~~ lit#TBD);
                                              (strLen([lq_tmp_x_273]) = 3)]}
bind 15 lq_anf__d14X : {lq_tmp_x_279 : [GHC.Types.Char] | [(lq_tmp_x_279 ~~ lq_anf__d14W);
                                                           (len([lq_tmp_x_279]) = strLen([lq_anf__d14W]));
                                                           (len([lq_tmp_x_279]) >= 0)]}
bind 16 x#a142 : {VV#310 : int | [$k__311]}
bind 17 lq_anf__d14Y : {lq_tmp_x_318 : int | [(lq_tmp_x_318 = (1  :  int))]}
bind 18 x#a143 : {VV#337 : int | [$k__338]}
bind 19 lq_anf__d14Z : {lq_tmp_x_355 : int | [$k__315[VV#314:=lq_tmp_x_355][x#a142:=x#a143][lq_tmp_x_357:=x#a143]]}
bind 20 lq_tmp_x_373 : {VV#374 : int | []}
bind 21 ds_d14V : {VV#388 : (Deptup0.Pair  int  int) | [$k__389]}
bind 22 lq_anf__d150 : {lq_tmp_x_399 : (Deptup0.Pair  int  int) | [(lq_tmp_x_399 = ds_d14V)]}
bind 23 lq_anf__d150 : {lq_tmp_x_405 : (Deptup0.Pair  int  int) | [(lq_tmp_x_405 = ds_d14V)]}
bind 24 x#a144 : {lq_tmp_x_401 : int | [$k__379[VV#378:=lq_tmp_x_401][VV#388:=lq_anf__d150][lq_tmp_x_395:=lq_tmp_x_401][lq_tmp_x_399:=lq_anf__d150][lq_tmp_x_405:=lq_anf__d150]]}
bind 25 y#a145 : {lq_tmp_x_402 : int | [$k__382[VV#381:=lq_tmp_x_402][VV#388:=lq_anf__d150][lq_tmp_x_396:=lq_tmp_x_402][lq_tmp_x_399:=lq_anf__d150][lq_tmp_x_405:=lq_anf__d150][lq_tmp_x_410:=x#a144];
                                        $k__386[VV#385:=lq_tmp_x_402][lq_tmp_x_384:=x#a144][lq_tmp_x_398:=lq_tmp_x_402][lq_tmp_x_397:=x#a144][lq_tmp_x_403:=x#a144][lq_tmp_x_404:=lq_tmp_x_402][lq_tmp_x_410:=x#a144]]}
bind 26 lq_anf__d150 : {lq_tmp_x_405 : (Deptup0.Pair  int  int) | [(lq_tmp_x_405 = ds_d14V);
                                                                   (y([lq_tmp_x_405]) = y#a145);
                                                                   (x([lq_tmp_x_405]) = x#a144);
                                                                   (lq_tmp_x_405 = Deptup0.P#r12h([x#a144;
                                                                                                   y#a145]));
                                                                   (y([lq_tmp_x_405]) = y#a145);
                                                                   (x([lq_tmp_x_405]) = x#a144)]}
bind 27 lq_anf__d151 : {lq_tmp_x_421 : GHC.Types.Bool | [((? Prop([lq_tmp_x_421])) <=> (x#a144 < y#a145))]}
bind 28 lq_anf__d152 : {lq_tmp_x_447 : int | [(lq_tmp_x_447 = (100  :  int))]}
bind 29 n#a146 : {lq_tmp_x_453 : int | []}
bind 30 lq_anf__d153 : {lq_tmp_x_463 : (Deptup0.Pair  int  int) | [$k__352[VV#351:=lq_tmp_x_463][x#a143:=n#a146][lq_tmp_x_465:=n#a146]]}
bind 31 Deptup0.prop#r12m : {VV#443 : GHC.Types.Bool | [$k__444]}
bind 32 VV#510 : {VV#510 : GHC.Types.Bool | [$k__493[VV#492:=VV#510][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_473:=lq_anf__d153][lq_tmp_x_495:=VV#510]]}
bind 33 VV#510 : {VV#510 : GHC.Types.Bool | [$k__493[VV#492:=VV#510][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_473:=lq_anf__d153][lq_tmp_x_495:=VV#510]]}
bind 34 VV#513 : {VV#513 : (Deptup0.Pair  int  int) | [(VV#513 = lq_anf__d153)]}
bind 35 VV#513 : {VV#513 : (Deptup0.Pair  int  int) | [(VV#513 = lq_anf__d153)]}
bind 36 VV#516 : {VV#516 : int | [$k__342[VV#341:=VV#516][VV#351:=VV#513][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_459:=VV#516][lq_tmp_x_463:=VV#513][lq_tmp_x_508:=VV#513][lq_tmp_x_504:=VV#516]]}
bind 37 VV#516 : {VV#516 : int | [$k__342[VV#341:=VV#516][VV#351:=VV#513][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_459:=VV#516][lq_tmp_x_463:=VV#513][lq_tmp_x_508:=VV#513][lq_tmp_x_504:=VV#516]]}
bind 38 VV#519 : {VV#519 : int | [$k__345[VV#344:=VV#519][VV#351:=VV#513][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_460:=VV#519][lq_tmp_x_463:=VV#513][lq_tmp_x_508:=VV#513][lq_tmp_x_505:=VV#519]]}
bind 39 VV#519 : {VV#519 : int | [$k__345[VV#344:=VV#519][VV#351:=VV#513][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_460:=VV#519][lq_tmp_x_463:=VV#513][lq_tmp_x_508:=VV#513][lq_tmp_x_505:=VV#519]]}
bind 40 lq_tmp_x_489 : {VV#522 : int | []}
bind 41 VV#523 : {VV#523 : int | [$k__349[VV#348:=VV#523][lq_tmp_x_347:=lq_tmp_x_489][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_462:=VV#523][lq_tmp_x_461:=lq_tmp_x_489][lq_tmp_x_506:=lq_tmp_x_489][lq_tmp_x_507:=VV#523]]}
bind 42 VV#523 : {VV#523 : int | [$k__349[VV#348:=VV#523][lq_tmp_x_347:=lq_tmp_x_489][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_462:=VV#523][lq_tmp_x_461:=lq_tmp_x_489][lq_tmp_x_506:=lq_tmp_x_489][lq_tmp_x_507:=VV#523]]}
bind 43 VV#527 : {VV#527 : (Deptup0.Pair  int  int) | [$k__485[VV#484:=VV#527][lq_tmp_x_491:=VV#527]]}
bind 44 VV#527 : {VV#527 : (Deptup0.Pair  int  int) | [$k__485[VV#484:=VV#527][lq_tmp_x_491:=VV#527]]}
bind 45 VV#530 : {VV#530 : int | [$k__475[VV#474:=VV#530][VV#484:=VV#527][lq_tmp_x_491:=VV#527][lq_tmp_x_487:=VV#530]]}
bind 46 VV#530 : {VV#530 : int | [$k__475[VV#474:=VV#530][VV#484:=VV#527][lq_tmp_x_491:=VV#527][lq_tmp_x_487:=VV#530]]}
bind 47 VV#533 : {VV#533 : int | [$k__478[VV#477:=VV#533][VV#484:=VV#527][lq_tmp_x_491:=VV#527][lq_tmp_x_488:=VV#533]]}
bind 48 VV#533 : {VV#533 : int | [$k__478[VV#477:=VV#533][VV#484:=VV#527][lq_tmp_x_491:=VV#527][lq_tmp_x_488:=VV#533]]}
bind 49 lq_tmp_x_498 : {VV#536 : int | []}
bind 50 VV#537 : {VV#537 : int | [$k__482[VV#481:=VV#537][lq_tmp_x_480:=lq_tmp_x_498][lq_tmp_x_489:=lq_tmp_x_498][lq_tmp_x_490:=VV#537]]}
bind 51 VV#537 : {VV#537 : int | [$k__482[VV#481:=VV#537][lq_tmp_x_480:=lq_tmp_x_498][lq_tmp_x_489:=lq_tmp_x_498][lq_tmp_x_490:=VV#537]]}
bind 52 lq_tmp_x_471 : {lq_tmp_x_491 : (Deptup0.Pair  int  int) | [$k__485[VV#484:=lq_tmp_x_491]]}
bind 53 VV#541 : {VV#541 : GHC.Types.Bool | [$k__393[VV#392:=VV#541][ds_d14V:=lq_tmp_x_471][lq_tmp_x_503:=lq_tmp_x_471][lq_tmp_x_501:=VV#541]]}
bind 54 VV#541 : {VV#541 : GHC.Types.Bool | [$k__393[VV#392:=VV#541][ds_d14V:=lq_tmp_x_471][lq_tmp_x_503:=lq_tmp_x_471][lq_tmp_x_501:=VV#541]]}
bind 55 VV#544 : {VV#544 : int | [(VV#544 = n#a146)]}
bind 56 VV#544 : {VV#544 : int | [(VV#544 = n#a146)]}
bind 57 VV#547 : {VV#547 : int | [(VV#547 = lq_anf__d152)]}
bind 58 VV#547 : {VV#547 : int | [(VV#547 = lq_anf__d152)]}
bind 59 VV#550 : {VV#550 : int | [(VV#550 = 100)]}
bind 60 VV#550 : {VV#550 : int | [(VV#550 = 100)]}
bind 61 VV#553 : {VV#553 : GHC.Types.Bool | [(? Prop([VV#553]))]}
bind 62 VV#553 : {VV#553 : GHC.Types.Bool | [(? Prop([VV#553]))]}
bind 63 VV#556 : {VV#556 : GHC.Types.Bool | [(VV#556 = lq_anf__d151)]}
bind 64 VV#556 : {VV#556 : GHC.Types.Bool | [(VV#556 = lq_anf__d151)]}
bind 65 VV#559 : {VV#559 : int | [(VV#559 = y#a145)]}
bind 66 VV#559 : {VV#559 : int | [(VV#559 = y#a145)]}
bind 67 VV#562 : {VV#562 : int | [(VV#562 = x#a144)]}
bind 68 VV#562 : {VV#562 : int | [(VV#562 = x#a144)]}
bind 69 VV#565 : {VV#565 : (Deptup0.Pair  int  int) | []}
bind 70 VV#565 : {VV#565 : (Deptup0.Pair  int  int) | []}
bind 71 VV#568 : {VV#568 : int | [$k__367[VV#366:=VV#568][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_361:=VV#565][lq_tmp_x_369:=VV#568]]}
bind 72 VV#568 : {VV#568 : int | [$k__367[VV#366:=VV#568][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_361:=VV#565][lq_tmp_x_369:=VV#568]]}
bind 73 VV#571 : {VV#571 : int | [$k__367[VV#366:=VV#571][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_361:=VV#565][lq_tmp_x_369:=VV#571]]}
bind 74 VV#571 : {VV#571 : int | [$k__367[VV#366:=VV#571][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_361:=VV#565][lq_tmp_x_369:=VV#571]]}
bind 75 lq_tmp_x_347 : {VV#574 : int | []}
bind 76 VV#575 : {VV#575 : int | [$k__371[lq_tmp_x_373:=lq_tmp_x_347][VV#370:=VV#575][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_360:=lq_tmp_x_347][lq_tmp_x_369:=VV#575]]}
bind 77 VV#575 : {VV#575 : int | [$k__371[lq_tmp_x_373:=lq_tmp_x_347][VV#370:=VV#575][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_360:=lq_tmp_x_347][lq_tmp_x_369:=VV#575]]}
bind 78 VV#578 : {VV#578 : int | [(VV#578 = lq_anf__d14Z)]}
bind 79 VV#578 : {VV#578 : int | [(VV#578 = lq_anf__d14Z)]}
bind 80 VV#581 : {VV#581 : int | [(VV#581 = x#a143)]}
bind 81 VV#581 : {VV#581 : int | [(VV#581 = x#a143)]}
bind 82 VV#584 : {VV#584 : int | [(VV#584 = x#a143)]}
bind 83 VV#584 : {VV#584 : int | [(VV#584 = x#a143)]}
bind 84 VV#587 : {VV#587 : int | [(VV#587 = (x#a142 - lq_anf__d14Y))]}
bind 85 VV#587 : {VV#587 : int | [(VV#587 = (x#a142 - lq_anf__d14Y))]}
bind 86 VV#590 : {VV#590 : int | [(VV#590 = lq_anf__d14Y)]}
bind 87 VV#590 : {VV#590 : int | [(VV#590 = lq_anf__d14Y)]}
bind 88 VV#593 : {VV#593 : int | [(VV#593 = x#a142)]}
bind 89 VV#593 : {VV#593 : int | [(VV#593 = x#a142)]}
bind 90 VV#596 : {VV#596 : int | [(VV#596 = 1)]}
bind 91 VV#596 : {VV#596 : int | [(VV#596 = 1)]}
bind 92 VV#599 : {VV#599 : (Deptup0.Pair  a_a14s  a_a14s) | [$k__301[VV#300:=VV#599][lq_tmp_x_289:=lq_anf__d14X][lq_tmp_x_304:=VV#599]]}
bind 93 VV#599 : {VV#599 : (Deptup0.Pair  a_a14s  a_a14s) | [$k__301[VV#300:=VV#599][lq_tmp_x_289:=lq_anf__d14X][lq_tmp_x_304:=VV#599]]}
bind 94 VV#290 : {VV#290 : a_a14s | [$k__291[VV#300:=VV#599][lq_tmp_x_289:=lq_anf__d14X][lq_tmp_x_304:=VV#599]]}
bind 95 VV#293 : {VV#293 : a_a14s | [$k__294[VV#300:=VV#599][lq_tmp_x_289:=lq_anf__d14X][lq_tmp_x_304:=VV#599]]}
bind 96 x0 : {VV : a_a14s | []}
bind 97 VV#297 : {VV#297 : a_a14s | [$k__298[lq_tmp_x_296:=x0][lq_tmp_x_289:=lq_anf__d14X][lq_tmp_x_303:=x0]]}
bind 98 VV#606 : {VV#606 : [GHC.Types.Char] | [(VV#606 = lq_anf__d14X);
                                               (len([VV#606]) >= 0)]}
bind 99 VV#606 : {VV#606 : [GHC.Types.Char] | [(VV#606 = lq_anf__d14X);
                                               (len([VV#606]) >= 0)]}
bind 100 VV#609 : {VV#609 : GHC.Types.Char | []}
bind 101 VV#609 : {VV#609 : GHC.Types.Char | []}
bind 102 lq_tmp_x_285 : {VV#612 : GHC.Types.Char | []}
bind 103 VV#613 : {VV#613 : GHC.Types.Char | []}
bind 104 VV#613 : {VV#613 : GHC.Types.Char | []}
bind 105 VV#616 : {VV#616 : int | [(VV#616 = lq_anf__d14W)]}
bind 106 VV#616 : {VV#616 : int | [(VV#616 = lq_anf__d14W)]}
bind 107 VV#492 : {VV#492 : GHC.Types.Bool | [$k__493]}
bind 108 VV#484 : {VV#484 : (Deptup0.Pair  int  int) | [$k__485]}
bind 109 VV#474 : {VV#474 : int | [$k__475]}
bind 110 VV#477 : {VV#477 : int | [$k__478]}
bind 111 lq_tmp_x_480 : {VV#623 : int | []}
bind 112 VV#481 : {VV#481 : int | [$k__482]}
bind 113 VV#443 : {VV#443 : GHC.Types.Bool | [$k__444]}
bind 114 VV#388 : {VV#388 : (Deptup0.Pair  int  int) | [$k__389]}
bind 115 VV#378 : {VV#378 : int | [$k__379]}
bind 116 VV#381 : {VV#381 : int | [$k__382]}
bind 117 lq_tmp_x_384 : {VV#629 : int | []}
bind 118 VV#385 : {VV#385 : int | [$k__386]}
bind 119 VV#428 : {VV#428 : int | [$k__429]}
bind 120 VV#392 : {VV#392 : GHC.Types.Bool | [$k__393]}
bind 121 VV#337 : {VV#337 : int | [$k__338]}
bind 122 VV#370 : {VV#370 : int | [$k__371]}
bind 123 VV#366 : {VV#366 : int | [$k__367]}
bind 124 VV#351 : {VV#351 : (Deptup0.Pair  int  int) | [$k__352]}
bind 125 VV#341 : {VV#341 : int | [$k__342]}
bind 126 VV#344 : {VV#344 : int | [$k__345]}
bind 127 lq_tmp_x_347 : {VV#639 : int | []}
bind 128 VV#348 : {VV#348 : int | [$k__349]}
bind 129 VV#310 : {VV#310 : int | [$k__311]}
bind 130 VV#314 : {VV#314 : int | [$k__315]}
bind 131 VV#300 : {VV#300 : (Deptup0.Pair  a_a14s  a_a14s) | [$k__301]}
bind 132 lq_tmp_x_296 : {VV : a_a14s | []}




constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 69; 6; 7; 8; 9]
  grd true
  lhs {VV#F16 : (Deptup0.Pair  int  int) | []}
  rhs {VV#F16 : (Deptup0.Pair  int  int) | [$k__352[VV#351:=VV#F16][VV#565:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [4]
  // META constraint id 16 : deptupW.hs:17:9-22


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 29; 30]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [$k__493[VV#492:=VV#F1][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_473:=lq_anf__d153][lq_tmp_x_495:=VV#F1][VV#510:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__444[VV#443:=VV#F1][VV#510:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [5]
  // META constraint id 1 : deptupW.hs:22:8-18


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 70; 7; 71; 8; 9]
  grd true
  lhs {VV#F17 : int | [$k__367[VV#366:=VV#F17][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_361:=VV#565][lq_tmp_x_369:=VV#F17][VV#568:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : int | [$k__342[VV#351:=VV#565][VV#341:=VV#F17][VV#568:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [4]
  // META constraint id 17 : deptupW.hs:17:9-22


constraint:
  env [0; 1; 2; 34; 3; 4; 5; 6; 7; 8; 9; 28; 29; 30]
  grd true
  lhs {VV#F2 : (Deptup0.Pair  int  int) | [(VV#F2 = lq_anf__d153)]}
  rhs {VV#F2 : (Deptup0.Pair  int  int) | [$k__485[VV#484:=VV#F2][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_491:=VV#F2][VV#513:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [5]
  // META constraint id 2 : deptupW.hs:22:14-18


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 70; 7; 8; 9; 73]
  grd true
  lhs {VV#F18 : int | [$k__367[VV#366:=VV#F18][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_361:=VV#565][lq_tmp_x_369:=VV#F18][VV#571:=VV#F18][VV#F:=VV#F18]]}
  rhs {VV#F18 : int | [$k__345[VV#351:=VV#565][VV#344:=VV#F18][VV#571:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [4]
  // META constraint id 18 : deptupW.hs:17:9-22


constraint:
  env [0; 1; 2; 3; 35; 4; 36; 5; 6; 7; 8; 9; 28; 29; 30]
  grd true
  lhs {VV#F3 : int | [$k__342[VV#341:=VV#F3][VV#351:=VV#513][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_459:=VV#F3][lq_tmp_x_463:=VV#513][lq_tmp_x_508:=VV#513][lq_tmp_x_504:=VV#F3][VV#516:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__475[VV#474:=VV#F3][VV#484:=VV#513][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_491:=VV#513][lq_tmp_x_487:=VV#F3][VV#516:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [5]
  // META constraint id 3 : deptupW.hs:22:14-18


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 70; 7; 8; 9; 75; 76]
  grd true
  lhs {VV#F19 : int | [$k__371[lq_tmp_x_373:=lq_tmp_x_347][VV#370:=VV#F19][lq_tmp_x_364:=x#a143][lq_tmp_x_365:=lq_anf__d14Z][lq_tmp_x_360:=lq_tmp_x_347][lq_tmp_x_369:=VV#F19][VV#575:=VV#F19][VV#F:=VV#F19]]}
  rhs {VV#F19 : int | [$k__349[VV#348:=VV#F19][VV#575:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [4]
  // META constraint id 19 : deptupW.hs:17:9-22


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 38; 7; 8; 9; 28; 29; 30]
  grd true
  lhs {VV#F4 : int | [$k__345[VV#344:=VV#F4][VV#351:=VV#513][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_460:=VV#F4][lq_tmp_x_463:=VV#513][lq_tmp_x_508:=VV#513][lq_tmp_x_505:=VV#F4][VV#519:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__478[VV#477:=VV#F4][VV#484:=VV#513][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_491:=VV#513][lq_tmp_x_488:=VV#F4][VV#519:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [5]
  // META constraint id 4 : deptupW.hs:22:14-18


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 78]
  grd true
  lhs {VV#F20 : int | [(VV#F20 = lq_anf__d14Z)]}
  rhs {VV#F20 : int | [$k__367[VV#366:=VV#F20][lq_tmp_x_364:=x#a143][lq_tmp_x_369:=VV#F20][VV#578:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [4]
  // META constraint id 20 : deptupW.hs:17:16-21


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 7; 8; 40; 9; 41; 28; 29; 30]
  grd true
  lhs {VV#F5 : int | [$k__349[VV#348:=VV#F5][lq_tmp_x_347:=lq_tmp_x_489][x#a143:=n#a146][lq_tmp_x_465:=n#a146][lq_tmp_x_462:=VV#F5][lq_tmp_x_461:=lq_tmp_x_489][lq_tmp_x_506:=lq_tmp_x_489][lq_tmp_x_507:=VV#F5][VV#523:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__482[VV#481:=VV#F5][lq_tmp_x_480:=lq_tmp_x_489][lq_tmp_x_472:=Deptup0.chk#r12l][lq_tmp_x_490:=VV#F5][VV#523:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [5]
  // META constraint id 5 : deptupW.hs:22:14-18


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 78]
  grd true
  lhs {VV#F21 : int | [(VV#F21 = lq_anf__d14Z)]}
  rhs {VV#F21 : int | [$k__371[lq_tmp_x_373:=x#a143][VV#370:=VV#F21][lq_tmp_x_364:=x#a143][lq_tmp_x_369:=VV#F21][VV#578:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [4]
  // META constraint id 21 : deptupW.hs:17:16-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 43; 28; 29; 30]
  grd true
  lhs {VV#F6 : (Deptup0.Pair  int  int) | [$k__485[VV#484:=VV#F6][lq_tmp_x_491:=VV#F6][VV#527:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : (Deptup0.Pair  int  int) | [$k__389[VV#388:=VV#F6][lq_tmp_x_500:=VV#F6][VV#527:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [5]
  // META constraint id 6 : deptupW.hs:22:8-10


constraint:
  env [0; 80; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F22 : int | [(VV#F22 = x#a143)]}
  rhs {VV#F22 : int | [$k__367[VV#366:=VV#F22][lq_tmp_x_369:=VV#F22][VV#581:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [4]
  // META constraint id 22 : deptupW.hs:17:13


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 44; 29; 45; 30]
  grd true
  lhs {VV#F7 : int | [$k__475[VV#474:=VV#F7][VV#484:=VV#527][lq_tmp_x_491:=VV#527][lq_tmp_x_487:=VV#F7][VV#530:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : int | [$k__379[VV#378:=VV#F7][VV#388:=VV#527][lq_tmp_x_500:=VV#527][lq_tmp_x_496:=VV#F7][VV#530:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [5]
  // META constraint id 7 : deptupW.hs:22:8-10


constraint:
  env [0; 1; 2; 18; 82; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F23 : int | [(VV#F23 = x#a143)]}
  rhs {VV#F23 : int | [$k__311[VV#310:=VV#F23][lq_tmp_x_354:=VV#F23][VV#584:=VV#F23][VV#F:=VV#F23]]}
  id 23 tag [4]
  // META constraint id 23 : deptupW.hs:17:21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 44; 29; 30; 47]
  grd true
  lhs {VV#F8 : int | [$k__478[VV#477:=VV#F8][VV#484:=VV#527][lq_tmp_x_491:=VV#527][lq_tmp_x_488:=VV#F8][VV#533:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__382[VV#381:=VV#F8][VV#388:=VV#527][lq_tmp_x_500:=VV#527][lq_tmp_x_497:=VV#F8][VV#533:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [5]
  // META constraint id 8 : deptupW.hs:22:8-10


constraint:
  env [0; 16; 1; 17; 2; 3; 4; 84; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F24 : int | [(VV#F24 = (x#a142 - lq_anf__d14Y))]}
  rhs {VV#F24 : int | [$k__315[VV#314:=VV#F24][VV#587:=VV#F24][VV#F:=VV#F24]]}
  id 24 tag [2]
  // META constraint id 24 : deptupW.hs:15:10-14


constraint:
  env [0; 1; 49; 2; 50; 3; 4; 5; 6; 7; 8; 9; 28; 44; 29; 30]
  grd true
  lhs {VV#F9 : int | [$k__482[VV#481:=VV#F9][lq_tmp_x_480:=lq_tmp_x_498][lq_tmp_x_489:=lq_tmp_x_498][lq_tmp_x_490:=VV#F9][VV#537:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__386[VV#385:=VV#F9][lq_tmp_x_384:=lq_tmp_x_498][lq_tmp_x_499:=VV#F9][VV#537:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [5]
  // META constraint id 9 : deptupW.hs:22:8-10


constraint:
  env [0;
       96;
       1;
       97;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       93;
       14;
       15]
  grd true
  lhs {VV#F25 : a_a14s | [$k__298[lq_tmp_x_296:=x0][lq_tmp_x_289:=lq_anf__d14X][lq_tmp_x_303:=x0][VV#297:=VV#F25][VV#F:=VV#F25]]}
  rhs {VV#F25 : a_a14s | [(? papp2([p; VV#F25; x0]))]}
  id 25 tag [3]
  // META constraint id 25 : deptupW.hs:12:11-21


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 53; 6; 7; 8; 9; 28; 29; 30]
  grd true
  lhs {VV#F10 : GHC.Types.Bool | [$k__393[VV#392:=VV#F10][ds_d14V:=lq_tmp_x_471][lq_tmp_x_503:=lq_tmp_x_471][lq_tmp_x_501:=VV#F10][VV#541:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : GHC.Types.Bool | [$k__493[VV#492:=VV#F10][lq_tmp_x_495:=VV#F10][VV#541:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [5]
  // META constraint id 10 : deptupW.hs:22:8-10


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 55; 8; 9; 28; 29]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = n#a146)]}
  rhs {VV#F11 : int | [$k__338[VV#337:=VV#F11][lq_tmp_x_458:=VV#F11][VV#544:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [5]
  // META constraint id 11 : deptupW.hs:22:18


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26; 27; 61]
  grd true
  lhs {VV#F12 : GHC.Types.Bool | [(? Prop([VV#F12]))]}
  rhs {VV#F12 : GHC.Types.Bool | [$k__393[VV#392:=VV#F12][VV#553:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : deptupW.hs:20:15-35


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26; 27; 63]
  grd true
  lhs {VV#F13 : GHC.Types.Bool | [(VV#F13 = lq_anf__d151)]}
  rhs {VV#F13 : GHC.Types.Bool | [(? Prop([VV#F13]))]}
  id 13 tag [1]
  // META constraint id 13 : deptupW.hs:20:30-34


constraint:
  env [0; 1; 65; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26]
  grd true
  lhs {VV#F14 : int | [(VV#F14 = y#a145)]}
  rhs {VV#F14 : int | [$k__429[VV#428:=VV#F14][lq_tmp_x_425:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_426:=x#a144][lq_tmp_x_431:=VV#F14][VV#559:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : deptupW.hs:20:34


constraint:
  env [0; 1; 2; 3; 67; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = x#a144)]}
  rhs {VV#F15 : int | [$k__429[VV#428:=VV#F15][lq_tmp_x_425:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_431:=VV#F15][VV#562:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : deptupW.hs:20:30




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 29; 30]
  reft {VV#492 : GHC.Types.Bool | [$k__493]}
  
  // META wf  : deptupW.hs:22:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 29; 30]
  reft {VV#484 : (Deptup0.Pair  int  int) | [$k__485]}
  
  // META wf  : deptupW.hs:22:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 108; 29; 30]
  reft {VV#474 : int | [$k__475]}
  
  // META wf  : deptupW.hs:22:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 108; 29; 30]
  reft {VV#477 : int | [$k__478]}
  
  // META wf  : deptupW.hs:22:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 28; 29; 30; 111]
  reft {VV#481 : int | [$k__482]}
  
  // META wf  : deptupW.hs:22:12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#443 : GHC.Types.Bool | [$k__444]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#388 : (Deptup0.Pair  int  int) | [$k__389]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 114; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#378 : int | [$k__379]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 114; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#381 : int | [$k__382]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 117; 6; 7; 8; 9]
  reft {VV#385 : int | [$k__386]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 25; 26]
  reft {VV#428 : int | [$k__429]}
  
  // META wf  : deptupW.hs:20:32


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 9]
  reft {VV#392 : GHC.Types.Bool | [$k__393]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#337 : int | [$k__338]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9]
  reft {VV#370 : int | [$k__371]}
  
  // META wf  : deptupW.hs:17:9-11


wf:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9]
  reft {VV#366 : int | [$k__367]}
  
  // META wf  : deptupW.hs:17:9-11


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#351 : (Deptup0.Pair  int  int) | [$k__352]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 124]
  reft {VV#341 : int | [$k__342]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 124]
  reft {VV#344 : int | [$k__345]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 127]
  reft {VV#348 : int | [$k__349]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#310 : int | [$k__311]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#314 : int | [$k__315]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#300 : (Deptup0.Pair  a_a14s  a_a14s) | [$k__301]}
  
  // META wf  : deptupW.hs:12:11-15


wf:
  env [0; 1; 2; 3; 131; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#290 : a_a14s | [$k__291]}
  
  // META wf  : deptupW.hs:12:11-15


wf:
  env [0; 1; 2; 3; 131; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#293 : a_a14s | [$k__294]}
  
  // META wf  : deptupW.hs:12:11-15


wf:
  env [0; 1; 2; 3; 4; 132; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#297 : a_a14s | [$k__298]}
  
  // META wf  : deptupW.hs:12:11-15







