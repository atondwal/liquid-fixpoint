qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 25, column 1)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 25, column 1)
qualif Auto(v : int, fix##126#A0 : int): (v = (fix##126#A0 + 1)) // "Constraints.hs" (line 25, column 1)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 30, column 1)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 30, column 1)
qualif Auto(v : int, fix##126#A0 : int): (v = (fix##126#A0 + 3)) // "Constraints.hs" (line 30, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 25, column 1)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 25, column 1)
qualif Auto(v : int, fix##126#A0 : int): (v = (fix##126#A0 + 1)) // "Constraints.hs" (line 25, column 1)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 30, column 1)
qualif Auto(v : int): (v >= 0) // "Constraints.hs" (line 30, column 1)
qualif Auto(v : int, fix##126#A0 : int): (v = (fix##126#A0 + 3)) // "Constraints.hs" (line 30, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#108 : (GHC.Num.Num  int) | []}
bind 1 GHC.Types.EQ#6U : {VV#109 : GHC.Types.Ordering | [(VV#109 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#110 : GHC.Types.Ordering | [(VV#110 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#111 : GHC.Types.Ordering | [(VV#111 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#134 : GHC.Types.Ordering | [(cmp([VV#134]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#135 : GHC.Types.Ordering | [(cmp([VV#135]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#136 : GHC.Types.Ordering | [(cmp([VV#136]) = GHC.Types.GT#6W)]}
bind 9 pref : {VV#140 : (Pred  b_aLQ) | []}
bind 10 postf : {VV#141 : (Pred  c_aLR  b_aLQ) | []}
bind 11 lq_tmp_db_1 : {VV : b_aLQ | []}
bind 12 pre : {VV#143 : (Pred  a_aLS) | []}
bind 13 postg : {VV#144 : (Pred  b_aLQ  a_aLS) | []}
bind 14 lq_tmp_db_4 : {VV : a_aLS | []}
bind 15 post : {VV#146 : (Pred  c_aLR  a_aLS) | []}
bind 16 lq_tmp_db_6 : {VV : a_aLS | []}
bind 17 x#aLB : {VV : a_aLS | [(? papp1([pre; VV]))]}
bind 18 lq_anf__dM5 : {VV : b_aLQ | [(? papp2([postg;
                                               VV;
                                               x#aLB]))]}
bind 19 x#aLC : {v : int | [(v >= 0)]}
bind 20 lq_anf__dM6 : {lq_tmp_x_160 : int | [(lq_tmp_x_160 = (1  :  int))]}
bind 21 lq_tmp_x_195 : {VV#196 : int | []}
bind 22 lq_tmp_x_200 : {VV#201 : int | []}
bind 23 lq_tmp_x_208 : {VV#209 : int | []}
bind 24 xx : {lq_tmp_x_191 : int | [$k__189[VV#188:=lq_tmp_x_191];
                                    $k__203[VV#202:=lq_tmp_x_191]]}
bind 25 w : {lq_tmp_x_183 : int | [$k__181[VV#180:=lq_tmp_x_183];
                                   $k__198[lq_tmp_x_200:=xx][VV#197:=lq_tmp_x_183]]}
bind 26 ww : {lq_tmp_x_191 : int | [$k__189[VV#188:=lq_tmp_x_191];
                                    $k__203[VV#202:=lq_tmp_x_191]]}
bind 27 VV#226 : {VV#226 : int | [(VV#226 >= 0)]}
bind 28 VV#226 : {VV#226 : int | [(VV#226 >= 0)]}
bind 29 lq_tmp_x_179 : {v : int | [(v >= 0)]}
bind 30 VV#230 : {VV#230 : int | [$k__185[VV#184:=VV#230][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#230];
                                  $k__193[lq_tmp_x_195:=lq_tmp_x_179][VV#192:=VV#230][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#230]]}
bind 31 VV#230 : {VV#230 : int | [$k__185[VV#184:=VV#230][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#230];
                                  $k__193[lq_tmp_x_195:=lq_tmp_x_179][VV#192:=VV#230][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#230]]}
bind 32 VV#234 : {VV#234 : int | [$k__189[VV#188:=VV#234][f:=Compose.incr#rpv][lq_tmp_x_191:=VV#234];
                                  $k__203[VV#202:=VV#234][f:=Compose.incr#rpv][lq_tmp_x_191:=VV#234]]}
bind 33 VV#234 : {VV#234 : int | [$k__189[VV#188:=VV#234][f:=Compose.incr#rpv][lq_tmp_x_191:=VV#234];
                                  $k__203[VV#202:=VV#234][f:=Compose.incr#rpv][lq_tmp_x_191:=VV#234]]}
bind 34 z : {lq_tmp_x_191 : int | [$k__189[VV#188:=lq_tmp_x_191][f:=Compose.incr#rpv];
                                   $k__203[VV#202:=lq_tmp_x_191][f:=Compose.incr#rpv]]}
bind 35 VV#238 : {VV#238 : int | [(VV#238 >= 0);
                                  (VV#238 = (z + 1))]}
bind 36 VV#238 : {VV#238 : int | [(VV#238 >= 0);
                                  (VV#238 = (z + 1))]}
bind 37 VV#242 : {VV#242 : int | [$k__181[VV#180:=VV#242][lq_tmp_x_183:=VV#242];
                                  $k__211[VV#210:=VV#242][lq_tmp_x_183:=VV#242]]}
bind 38 VV#242 : {VV#242 : int | [$k__181[VV#180:=VV#242][lq_tmp_x_183:=VV#242];
                                  $k__211[VV#210:=VV#242][lq_tmp_x_183:=VV#242]]}
bind 39 y : {lq_tmp_x_183 : int | [$k__181[VV#180:=lq_tmp_x_183];
                                   $k__211[VV#210:=lq_tmp_x_183]]}
bind 40 VV#246 : {VV#246 : int | [(VV#246 >= 0);
                                  (VV#246 = (y + 1))]}
bind 41 VV#246 : {VV#246 : int | [(VV#246 >= 0);
                                  (VV#246 = (y + 1))]}
bind 42 VV#249 : {VV#249 : int | [$k__181[VV#180:=VV#249][lq_tmp_x_183:=VV#249];
                                  $k__198[lq_tmp_x_200:=ww][VV#197:=VV#249][lq_tmp_x_183:=VV#249]]}
bind 43 VV#249 : {VV#249 : int | [$k__181[VV#180:=VV#249][lq_tmp_x_183:=VV#249];
                                  $k__198[lq_tmp_x_200:=ww][VV#197:=VV#249][lq_tmp_x_183:=VV#249]]}
bind 44 VV#252 : {VV#252 : int | [$k__185[VV#184:=VV#252][lq_tmp_x_187:=VV#252];
                                  $k__206[lq_tmp_x_208:=w][VV#205:=VV#252][lq_tmp_x_187:=VV#252]]}
bind 45 VV#252 : {VV#252 : int | [$k__185[VV#184:=VV#252][lq_tmp_x_187:=VV#252];
                                  $k__206[lq_tmp_x_208:=w][VV#205:=VV#252][lq_tmp_x_187:=VV#252]]}
bind 46 VV#255 : {VV#255 : int | [(VV#255 = (x#aLC + lq_anf__dM6))]}
bind 47 VV#255 : {VV#255 : int | [(VV#255 = (x#aLC + lq_anf__dM6))]}
bind 48 VV#258 : {VV#258 : int | [(VV#258 = lq_anf__dM6)]}
bind 49 VV#258 : {VV#258 : int | [(VV#258 = lq_anf__dM6)]}
bind 50 VV#261 : {VV#261 : int | [(VV#261 = x#aLC)]}
bind 51 VV#261 : {VV#261 : int | [(VV#261 = x#aLC)]}
bind 52 VV#264 : {VV#264 : int | [(VV#264 = 1)]}
bind 53 VV#264 : {VV#264 : int | [(VV#264 = 1)]}
bind 54 VV : {VV : c_aLR | [(? papp2([postf; VV; lq_anf__dM5]))]}
bind 55 VV : {VV : b_aLQ | [(VV = lq_anf__dM5)]}
bind 56 VV : {VV : a_aLS | [(VV = x#aLB)]}
bind 57 VV#210 : {VV#210 : int | [$k__211]}
bind 58 VV#205 : {VV#205 : int | [$k__206]}
bind 59 VV#202 : {VV#202 : int | [$k__203]}
bind 60 VV#197 : {VV#197 : int | [$k__198]}
bind 61 VV#192 : {VV#192 : int | [$k__193]}
bind 62 VV#188 : {VV#188 : int | [$k__189]}
bind 63 VV#184 : {VV#184 : int | [$k__185]}
bind 64 VV#180 : {VV#180 : int | [$k__181]}




constraint:
  env [0; 1; 2; 3; 19; 4; 20; 5; 6; 7; 8; 46]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = (x#aLC + lq_anf__dM6))]}
  rhs {VV#F16 : int | [(VV#F16 = (x#aLC + 1))]}
  id 16 tag [1]
  // META constraint id 16 : Constraints.hs:25:10-14


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 27]
  grd true
  lhs {VV#F1 : int | [(VV#F1 >= 0)]}
  rhs {VV#F1 : int | [$k__189[VV#188:=VV#F1][f:=Compose.incr#rpv][g:=Compose.incr#rpv][lq_tmp_x_191:=VV#F1][VV#226:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [3]
  // META constraint id 1 : Constraints.hs:30:9-21


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       54;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F17 : c_aLR | [(? papp2([postf; VV#F17; lq_anf__dM5]));
                         (&& [(? papp2([postg; lq_tmp_db_1; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp1([pref;
                                                                              lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_anf__dM5; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp1([pref;
                                                                              lq_anf__dM5]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp1([pref;
                                                                              lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_anf__dM5; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp1([pref;
                                                                              lq_anf__dM5]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp1([pref; lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_anf__dM5; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp1([pref; lq_anf__dM5]))]);
                         (&& [(? papp2([postf; VV#F17; lq_tmp_db_1]));
                              (? papp2([postg; lq_tmp_db_1; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp2([post;
                                                                              VV#F17;
                                                                              lq_tmp_db_4]))]);
                         (&& [(? papp2([postf; VV#F17; lq_anf__dM5]));
                              (? papp2([postg; lq_anf__dM5; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp2([post;
                                                                              VV#F17;
                                                                              lq_tmp_db_4]))]);
                         (&& [(? papp2([postf; VV#F17; lq_tmp_db_1]));
                              (? papp2([postg; lq_tmp_db_1; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp2([post;
                                                                              VV#F17;
                                                                              lq_tmp_db_6]))]);
                         (&& [(? papp2([postf; VV#F17; lq_anf__dM5]));
                              (? papp2([postg; lq_anf__dM5; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp2([post;
                                                                              VV#F17;
                                                                              lq_tmp_db_6]))]);
                         (&& [(? papp2([postf; VV#F17; lq_tmp_db_1]));
                              (? papp2([postg; lq_tmp_db_1; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp2([post; VV#F17; x#aLB]))]);
                         (&& [(? papp2([postf; VV#F17; lq_anf__dM5]));
                              (? papp2([postg; lq_anf__dM5; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp2([post;
                                                                        VV#F17;
                                                                        x#aLB]))])]}
  rhs {VV#F17 : c_aLR | [(? papp2([post; VV#F17; x#aLB]))]}
  id 17 tag [2]
  // META constraint id 17 : Constraints.hs:19:13-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 27]
  grd true
  lhs {VV#F2 : int | [(VV#F2 >= 0)]}
  rhs {VV#F2 : int | [$k__203[VV#202:=VV#F2][f:=Compose.incr#rpv][g:=Compose.incr#rpv][lq_tmp_x_191:=VV#F2][VV#226:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : Constraints.hs:30:9-21


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       7;
       55;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F18 : b_aLQ | [(VV#F18 = lq_anf__dM5);
                         (&& [(? papp2([postg; VV#F18; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp1([pref; VV#F18]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp1([pref;
                                                                              lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_anf__dM5; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp1([pref;
                                                                              lq_anf__dM5]))]);
                         (&& [(? papp2([postg; VV#F18; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp1([pref; VV#F18]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp1([pref;
                                                                              lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_anf__dM5; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp1([pref;
                                                                              lq_anf__dM5]))]);
                         (&& [(? papp2([postg; VV#F18; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp1([pref; VV#F18]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp1([pref; lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_anf__dM5; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp1([pref; lq_anf__dM5]))])]}
  rhs {VV#F18 : b_aLQ | [(? papp1([pref; VV#F18]))]}
  id 18 tag [2]
  // META constraint id 18 : Constraints.hs:19:16-18


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 29; 30]
  grd true
  lhs {VV#F3 : int | [$k__185[VV#184:=VV#F3][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#F3][VV#230:=VV#F3][VV#F:=VV#F3];
                      $k__193[lq_tmp_x_195:=lq_tmp_x_179][VV#192:=VV#F3][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#F3][VV#230:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [(VV#F3 >= 0)]}
  id 3 tag [3]
  // META constraint id 3 : Constraints.hs:30:9-21


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       56;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F19 : a_aLS | [(VV#F19 = x#aLB);
                         (&& [(? papp2([postg; lq_tmp_db_1; lq_tmp_db_4]));
                              (? papp1([pre; lq_tmp_db_4]))] => && [(? papp1([pref;
                                                                              lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; VV#F19]));
                              (? papp1([pre; VV#F19]))] => && [(? papp1([pref; lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; lq_tmp_db_6]));
                              (? papp1([pre; lq_tmp_db_6]))] => && [(? papp1([pref;
                                                                              lq_tmp_db_1]))]);
                         (&& [(? papp2([postg; lq_tmp_db_1; x#aLB]));
                              (? papp1([pre; x#aLB]))] => && [(? papp1([pref; lq_tmp_db_1]))])]}
  rhs {VV#F19 : a_aLS | [(? papp1([pre; VV#F19]))]}
  id 19 tag [2]
  // META constraint id 19 : Constraints.hs:19:18


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 29; 30]
  grd true
  lhs {VV#F4 : int | [$k__185[VV#184:=VV#F4][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#F4][VV#230:=VV#F4][VV#F:=VV#F4];
                      $k__193[lq_tmp_x_195:=lq_tmp_x_179][VV#192:=VV#F4][f:=Compose.incr#rpv][g:=Compose.incr#rpv][x:=lq_tmp_x_179][lq_tmp_x_187:=VV#F4][VV#230:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [(VV#F4 = (lq_tmp_x_179 + 3))]}
  id 4 tag [3]
  // META constraint id 4 : Constraints.hs:30:9-21


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F5 : int | [$k__189[VV#188:=VV#F5][f:=Compose.incr#rpv][lq_tmp_x_191:=VV#F5][VV#234:=VV#F5][VV#F:=VV#F5];
                      $k__203[VV#202:=VV#F5][f:=Compose.incr#rpv][lq_tmp_x_191:=VV#F5][VV#234:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [(VV#F5 >= 0)]}
  id 5 tag [3]
  // META constraint id 5 : Constraints.hs:30:18-21


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F6 : int | [(VV#F6 >= 0); (VV#F6 = (z + 1))]}
  rhs {VV#F6 : int | [$k__181[VV#180:=VV#F6][f:=Compose.incr#rpv][lq_tmp_x_183:=VV#F6][VV#238:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : Constraints.hs:30:18-21


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F7 : int | [(VV#F7 >= 0); (VV#F7 = (z + 1))]}
  rhs {VV#F7 : int | [$k__198[lq_tmp_x_200:=z][VV#197:=VV#F7][f:=Compose.incr#rpv][lq_tmp_x_183:=VV#F7][VV#238:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : Constraints.hs:30:18-21


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 8]
  grd true
  lhs {VV#F8 : int | [$k__181[VV#180:=VV#F8][lq_tmp_x_183:=VV#F8][VV#242:=VV#F8][VV#F:=VV#F8];
                      $k__211[VV#210:=VV#F8][lq_tmp_x_183:=VV#F8][VV#242:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [(VV#F8 >= 0)]}
  id 8 tag [3]
  // META constraint id 8 : Constraints.hs:30:13-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 39; 8; 40]
  grd true
  lhs {VV#F9 : int | [(VV#F9 >= 0); (VV#F9 = (y + 1))]}
  rhs {VV#F9 : int | [$k__185[VV#184:=VV#F9][lq_tmp_x_187:=VV#F9][VV#246:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : Constraints.hs:30:13-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 39; 8; 40]
  grd true
  lhs {VV#F10 : int | [(VV#F10 >= 0); (VV#F10 = (y + 1))]}
  rhs {VV#F10 : int | [$k__206[lq_tmp_x_208:=y][VV#205:=VV#F10][lq_tmp_x_187:=VV#F10][VV#246:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : Constraints.hs:30:13-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 26; 42]
  grd true
  lhs {VV#F11 : int | [$k__181[VV#180:=VV#F11][lq_tmp_x_183:=VV#F11][VV#249:=VV#F11][VV#F:=VV#F11];
                       $k__198[lq_tmp_x_200:=ww][VV#197:=VV#F11][lq_tmp_x_183:=VV#F11][VV#249:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__181[VV#180:=VV#F11][lq_tmp_x_183:=VV#F11][VV#249:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : Constraints.hs:30:9-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 26; 42]
  grd true
  lhs {VV#F12 : int | [$k__181[VV#180:=VV#F12][lq_tmp_x_183:=VV#F12][VV#249:=VV#F12][VV#F:=VV#F12];
                       $k__198[lq_tmp_x_200:=ww][VV#197:=VV#F12][lq_tmp_x_183:=VV#F12][VV#249:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__211[VV#210:=VV#F12][lq_tmp_x_183:=VV#F12][VV#249:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : Constraints.hs:30:9-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 25; 44]
  grd true
  lhs {VV#F13 : int | [$k__185[VV#184:=VV#F13][lq_tmp_x_187:=VV#F13][VV#252:=VV#F13][VV#F:=VV#F13];
                       $k__206[lq_tmp_x_208:=w][VV#205:=VV#F13][lq_tmp_x_187:=VV#F13][VV#252:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : int | [$k__185[VV#184:=VV#F13][lq_tmp_x_187:=VV#F13][VV#252:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : Constraints.hs:30:9-16


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 25; 44]
  grd true
  lhs {VV#F14 : int | [$k__185[VV#184:=VV#F14][lq_tmp_x_187:=VV#F14][VV#252:=VV#F14][VV#F:=VV#F14];
                       $k__206[lq_tmp_x_208:=w][VV#205:=VV#F14][lq_tmp_x_187:=VV#F14][VV#252:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : int | [$k__193[lq_tmp_x_195:=xx][VV#192:=VV#F14][lq_tmp_x_187:=VV#F14][VV#252:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [3]
  // META constraint id 14 : Constraints.hs:30:9-16


constraint:
  env [0; 1; 2; 3; 19; 4; 20; 5; 6; 7; 8; 46]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = (x#aLC + lq_anf__dM6))]}
  rhs {VV#F15 : int | [(VV#F15 >= 0)]}
  id 15 tag [1]
  // META constraint id 15 : Constraints.hs:25:10-14




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#210 : int | [$k__211]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8]
  reft {VV#205 : int | [$k__206]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#202 : int | [$k__203]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8]
  reft {VV#197 : int | [$k__198]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8]
  reft {VV#192 : int | [$k__193]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#188 : int | [$k__189]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#184 : int | [$k__185]}
  
  // META wf  : Constraints.hs:30:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#180 : int | [$k__181]}
  
  // META wf  : Constraints.hs:30:9-11







