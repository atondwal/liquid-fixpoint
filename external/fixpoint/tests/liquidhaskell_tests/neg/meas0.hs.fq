qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Types.False#68 : {VV#164 : GHC.Types.Bool | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 GHC.Types.True#6u : {VV#167 : GHC.Types.Bool | []}
bind 3 GHC.Types.EQ#6U : {VV#170 : GHC.Types.Ordering | [(VV#170 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#171 : GHC.Types.Ordering | [(VV#171 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#172 : GHC.Types.Ordering | [(VV#172 = GHC.Types.GT#6W)]}
bind 6 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 7 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 8 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 9 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 10 GHC.Types.EQ#6U : {VV#214 : GHC.Types.Ordering | [(cmp([VV#214]) = GHC.Types.EQ#6U)]}
bind 11 GHC.Types.LT#6S : {VV#215 : GHC.Types.Ordering | [(cmp([VV#215]) = GHC.Types.LT#6S)]}
bind 12 GHC.Types.GT#6W : {VV#216 : GHC.Types.Ordering | [(cmp([VV#216]) = GHC.Types.GT#6W)]}
bind 13 ds_d27w : {VV#227 : [t_a26N] | [$k__228;
                                        (len([VV#227]) >= 0)]}
bind 14 lq_anf__d27y : {lq_tmp_x_235 : [t_a26N] | [(lq_tmp_x_235 = ds_d27w);
                                                   (len([lq_tmp_x_235]) >= 0)]}
bind 15 lq_anf__d27y : {lq_tmp_x_238 : [t_a26N] | [(lq_tmp_x_238 = ds_d27w);
                                                   (len([lq_tmp_x_238]) >= 0);
                                                   (len([lq_tmp_x_238]) >= 0)]}
bind 16 lq_anf__d27y : {lq_tmp_x_238 : [t_a26N] | [(lq_tmp_x_238 = ds_d27w);
                                                   (len([lq_tmp_x_238]) >= 0);
                                                   (len([lq_tmp_x_238]) = 0);
                                                   ((? null([lq_tmp_x_238])) <=> true);
                                                   (lq_tmp_x_238 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (len([lq_tmp_x_238]) = 0);
                                                   ((? null([lq_tmp_x_238])) <=> true);
                                                   (len([lq_tmp_x_238]) >= 0)]}
bind 17 lq_anf__d27y : {lq_tmp_x_251 : [t_a26N] | [(lq_tmp_x_251 = ds_d27w);
                                                   (len([lq_tmp_x_251]) >= 0);
                                                   (len([lq_tmp_x_251]) >= 0)]}
bind 18 x#a26F : {VV#220 : t_a26N | [$k__221[VV#227:=lq_anf__d27y][lq_tmp_x_235:=lq_anf__d27y][lq_tmp_x_251:=lq_anf__d27y]]}
bind 19 ds_d27x : {lq_tmp_x_261 : [t_a26N] | [(len([lq_tmp_x_261]) >= 0)]}
bind 20 lq_anf__d27y : {lq_tmp_x_251 : [t_a26N] | [(lq_tmp_x_251 = ds_d27w);
                                                   (len([lq_tmp_x_251]) >= 0);
                                                   (len([lq_tmp_x_251]) = (1 + len([ds_d27x])));
                                                   ((? null([lq_tmp_x_251])) <=> false);
                                                   (xsListSelector([lq_tmp_x_251]) = ds_d27x);
                                                   (xListSelector([lq_tmp_x_251]) = x#a26F);
                                                   (lq_tmp_x_251 = fix#GHC.Types.#58##35#64([x#a26F;
                                                                                             ds_d27x]));
                                                   (len([lq_tmp_x_251]) = (1 + len([ds_d27x])));
                                                   ((? null([lq_tmp_x_251])) <=> false);
                                                   (xsListSelector([lq_tmp_x_251]) = ds_d27x);
                                                   (xListSelector([lq_tmp_x_251]) = x#a26F);
                                                   (len([lq_tmp_x_251]) >= 0)]}
bind 21 x#a26E : {VV#272 : t_a270 | [$k__273]}
bind 22 lq_tmp_x_284 : {VV : t_a271 | []}
bind 23 lq_anf__d27z : {lq_tmp_x_298 : int | [(lq_tmp_x_298 = (0  :  int))]}
bind 24 lq_anf__d27A : {lq_tmp_x_304 : int | []}
bind 25 Range.xs#r25n : {VV : func(1, [[@(0)]]) | []}
bind 26 lq_anf__d27B : {lq_tmp_x_326 : [GHC.Prim.Any] | [$k__295[VV#294:=lq_tmp_x_326];
                                                         (len([lq_tmp_x_326]) >= 0)]}
bind 27 lq_anf__d27C : {lq_tmp_x_334 : GHC.Types.Bool | [$k__232[VV#231:=lq_tmp_x_334][ds_d27w:=lq_anf__d27B][lq_tmp_x_336:=lq_anf__d27B]]}
bind 28 Range.prop1#r25o : {VV#322 : GHC.Types.Bool | [$k__323]}
bind 29 VV#352 : {VV#352 : GHC.Types.Bool | [(? Prop([VV#352]))]}
bind 30 VV#352 : {VV#352 : GHC.Types.Bool | [(? Prop([VV#352]))]}
bind 31 VV#355 : {VV#355 : GHC.Types.Bool | [(VV#355 = lq_anf__d27C)]}
bind 32 VV#355 : {VV#355 : GHC.Types.Bool | [(VV#355 = lq_anf__d27C)]}
bind 33 VV#358 : {VV#358 : [GHC.Prim.Any] | [(VV#358 = lq_anf__d27B);
                                             (len([VV#358]) >= 0)]}
bind 34 VV#358 : {VV#358 : [GHC.Prim.Any] | [(VV#358 = lq_anf__d27B);
                                             (len([VV#358]) >= 0)]}
bind 35 VV#361 : {VV#361 : GHC.Prim.Any | [$k__328[VV#327:=VV#361][lq_tmp_x_330:=VV#361][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#361];
                                           $k__288[VV#294:=VV#358][VV#287:=VV#361][lq_tmp_x_330:=VV#361][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#361]]}
bind 36 VV#361 : {VV#361 : GHC.Prim.Any | [$k__328[VV#327:=VV#361][lq_tmp_x_330:=VV#361][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#361];
                                           $k__288[VV#294:=VV#358][VV#287:=VV#361][lq_tmp_x_330:=VV#361][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#361]]}
bind 37 lq_tmp_x_332 : {VV#364 : GHC.Prim.Any | []}
bind 38 VV#365 : {VV#365 : GHC.Prim.Any | [$k__292[lq_tmp_x_290:=lq_tmp_x_332][VV#291:=VV#365][lq_tmp_x_330:=VV#365][lq_tmp_x_325:=lq_tmp_x_332][lq_tmp_x_342:=lq_tmp_x_332][lq_tmp_x_343:=VV#365]]}
bind 39 VV#365 : {VV#365 : GHC.Prim.Any | [$k__292[lq_tmp_x_290:=lq_tmp_x_332][VV#291:=VV#365][lq_tmp_x_330:=VV#365][lq_tmp_x_325:=lq_tmp_x_332][lq_tmp_x_342:=lq_tmp_x_332][lq_tmp_x_343:=VV#365]]}
bind 40 VV#368 : {VV#368 : [t_a27d] | [(len([VV#368]) = 0);
                                       ((? null([VV#368])) <=> true);
                                       (len([VV#368]) >= 0)]}
bind 41 VV#368 : {VV#368 : [t_a27d] | [(len([VV#368]) = 0);
                                       ((? null([VV#368])) <=> true);
                                       (len([VV#368]) >= 0)]}
bind 42 VV#317 : {VV#317 : t_a27d | [$k__318[lq_tmp_x_312:=lq_anf__d27A][lq_tmp_x_310:=VV#368];
                                     $k__279[lq_tmp_x_277:=VV#368][x#a26E:=lq_anf__d27A][VV#278:=VV#317][lq_tmp_x_312:=lq_anf__d27A][lq_tmp_x_310:=VV#368]]}
bind 43 lq_tmp_x_290 : {VV : t_a27d | []}
bind 44 VV#317 : {VV#317 : t_a27d | [$k__282[lq_tmp_x_284:=lq_tmp_x_290][VV#281:=VV#317][lq_tmp_x_276:=lq_tmp_x_290][x#a26E:=lq_anf__d27A][VV#278:=VV#317][lq_tmp_x_312:=lq_anf__d27A][lq_tmp_x_309:=lq_tmp_x_290]]}
bind 45 VV#374 : {VV#374 : int | [(VV#374 = lq_anf__d27A)]}
bind 46 VV#374 : {VV#374 : int | [(VV#374 = lq_anf__d27A)]}
bind 47 VV#377 : {VV#377 : int | [(VV#377 = lq_anf__d27z)]}
bind 48 VV#377 : {VV#377 : int | [(VV#377 = lq_anf__d27z)]}
bind 49 VV#380 : {VV#380 : int | [(VV#380 = 0)]}
bind 50 VV#380 : {VV#380 : int | [(VV#380 = 0)]}
bind 51 VV#383 : {VV#383 : GHC.Types.Bool | [(VV#383 = GHC.Types.True#6u)]}
bind 52 VV#383 : {VV#383 : GHC.Types.Bool | [(VV#383 = GHC.Types.True#6u)]}
bind 53 VV#386 : {VV#386 : GHC.Types.Bool | [(? Prop([VV#386]))]}
bind 54 VV#386 : {VV#386 : GHC.Types.Bool | [(? Prop([VV#386]))]}
bind 55 VV#389 : {VV#389 : GHC.Types.Bool | [(VV#389 = GHC.Types.False#68)]}
bind 56 VV#389 : {VV#389 : GHC.Types.Bool | [(VV#389 = GHC.Types.False#68)]}
bind 57 VV#337 : {VV#337 : GHC.Prim.Any | [$k__338]}
bind 58 VV#327 : {VV#327 : GHC.Prim.Any | [$k__328]}
bind 59 VV#322 : {VV#322 : GHC.Types.Bool | [$k__323]}
bind 60 VV#313 : {VV#313 : int | [$k__314]}
bind 61 VV#294 : {VV#294 : [t_a27d] | [$k__295;
                                       (len([VV#294]) >= 0)]}
bind 62 lq_tmp_x_290 : {VV : t_a27d | []}
bind 63 VV#227 : {VV#227 : [t_a26N] | [$k__228;
                                       (len([VV#227]) >= 0)]}
bind 64 lq_tmp_x_223 : {VV : t_a26N | []}
bind 65 VV#231 : {VV#231 : GHC.Types.Bool | [$k__232]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 12; 29]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__323[VV#322:=VV#F1][VV#352:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : meas0.hs:13:9-30


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 12; 31]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d27C)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [4]
  // META constraint id 2 : meas0.hs:13:24-29


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 12]
  grd true
  lhs {VV#F3 : [GHC.Prim.Any] | [(VV#F3 = lq_anf__d27B);
                                 (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [GHC.Prim.Any] | [$k__228[VV#227:=VV#F3][lq_tmp_x_333:=VV#F3][VV#358:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : meas0.hs:13:28-29


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 12]
  grd true
  lhs {VV#F4 : GHC.Prim.Any | [$k__328[VV#327:=VV#F4][lq_tmp_x_330:=VV#F4][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#F4][VV#361:=VV#F4][VV#F:=VV#F4];
                               $k__288[VV#294:=VV#358][VV#287:=VV#F4][lq_tmp_x_330:=VV#F4][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#F4][VV#361:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : GHC.Prim.Any | [$k__338[VV#337:=VV#F4][lq_tmp_x_333:=VV#358][lq_tmp_x_340:=VV#F4][VV#361:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : meas0.hs:13:28-29


constraint:
  env [0; 1; 2; 34; 3; 35; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 12]
  grd true
  lhs {VV#F5 : GHC.Prim.Any | [$k__328[VV#327:=VV#F5][lq_tmp_x_330:=VV#F5][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#F5][VV#361:=VV#F5][VV#F:=VV#F5];
                               $k__288[VV#294:=VV#358][VV#287:=VV#F5][lq_tmp_x_330:=VV#F5][lq_tmp_x_326:=VV#358][lq_tmp_x_344:=VV#358][lq_tmp_x_341:=VV#F5][VV#361:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : GHC.Prim.Any | [$k__221[VV#227:=VV#358][VV#220:=VV#F5][lq_tmp_x_333:=VV#358][lq_tmp_x_340:=VV#F5][VV#361:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : meas0.hs:13:28-29


constraint:
  env [0; 1; 2; 34; 3; 4; 5; 37; 6; 38; 7; 8; 9; 25; 10; 26; 11; 12]
  grd true
  lhs {VV#F6 : GHC.Prim.Any | [$k__292[lq_tmp_x_290:=lq_tmp_x_332][VV#291:=VV#F6][lq_tmp_x_330:=VV#F6][lq_tmp_x_325:=lq_tmp_x_332][lq_tmp_x_342:=lq_tmp_x_332][lq_tmp_x_343:=VV#F6][VV#365:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : GHC.Prim.Any | [$k__225[lq_tmp_x_223:=lq_tmp_x_332][VV#224:=VV#F6][lq_tmp_x_340:=VV#F6][VV#365:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : meas0.hs:13:28-29


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 40; 9; 10; 11; 12]
  grd true
  lhs {VV#F7 : [t_a27d] | [(len([VV#F7]) = 0);
                           ((? null([VV#F7])) <=> true);
                           (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [t_a27d] | [$k__295[VV#294:=VV#F7][VV#368:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : meas0.hs:11:6-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 41; 10; 42; 11; 12]
  grd true
  lhs {VV#F8 : t_a27d | [$k__318[lq_tmp_x_312:=lq_anf__d27A][lq_tmp_x_310:=VV#368][VV#317:=VV#F8][VV#F:=VV#F8];
                         $k__279[lq_tmp_x_277:=VV#368][x#a26E:=lq_anf__d27A][VV#278:=VV#F8][lq_tmp_x_312:=lq_anf__d27A][lq_tmp_x_310:=VV#368][VV#317:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : t_a27d | [$k__288[VV#294:=VV#368][VV#287:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : meas0.hs:11:6-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 41; 10; 11; 43; 12; 44]
  grd true
  lhs {VV#F9 : t_a27d | [$k__282[lq_tmp_x_284:=lq_tmp_x_290][VV#281:=VV#F9][lq_tmp_x_276:=lq_tmp_x_290][x#a26E:=lq_anf__d27A][VV#278:=VV#F9][lq_tmp_x_312:=lq_anf__d27A][lq_tmp_x_309:=lq_tmp_x_290][VV#317:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : t_a27d | [$k__292[VV#291:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : meas0.hs:11:6-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 10; 11; 12; 45]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = lq_anf__d27A)]}
  rhs {VV#F10 : int | [$k__314[VV#313:=VV#F10][lq_tmp_x_316:=VV#F10][VV#374:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : meas0.hs:11:11-18


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 10; 11; 12; 45]
  grd true
  lhs {VV#F11 : int | [(VV#F11 = lq_anf__d27A)]}
  rhs {VV#F11 : int | [$k__273[VV#272:=VV#F11][lq_tmp_x_316:=VV#F11][VV#374:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : meas0.hs:11:11-18


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       51;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14]
  grd true
  lhs {VV#F12 : GHC.Types.Bool | [(VV#F12 = GHC.Types.True#6u)]}
  rhs {VV#F12 : GHC.Types.Bool | [$k__232[VV#231:=VV#F12][VV#383:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : meas0.hs:8:13-16


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 53; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F13 : GHC.Types.Bool | [(? Prop([VV#F13]))]}
  rhs {VV#F13 : GHC.Types.Bool | [$k__232[VV#231:=VV#F13][VV#386:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : meas0.hs:9:13-31


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 55; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F14 : GHC.Types.Bool | [(VV#F14 = GHC.Types.False#68)]}
  rhs {VV#F14 : GHC.Types.Bool | [(? Prop([VV#F14]))]}
  id 14 tag [1]
  // META constraint id 14 : meas0.hs:9:27-31




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 12]
  reft {VV#337 : GHC.Prim.Any | [$k__338]}
  
  // META wf  : meas0.hs:13:24-26


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 11; 12]
  reft {VV#327 : GHC.Prim.Any | [$k__328]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 11; 12]
  reft {VV#322 : GHC.Types.Bool | [$k__323]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 10; 11; 12]
  reft {VV#317 : t_a27d | [$k__318]}
  
  // META wf  : meas0.hs:11:6-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 10; 11; 12]
  reft {VV#313 : int | [$k__314]}
  
  // META wf  : meas0.hs:11:6-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#294 : [t_a27d] | [$k__295]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 61]
  reft {VV#287 : t_a27d | [$k__288]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 62]
  reft {VV#291 : t_a27d | [$k__292]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#272 : t_a270 | [$k__273]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 10; 11; 12]
  reft {VV#281 : t_a271 | [$k__282]}
  
  // META wf  : meas0.hs:6:9-10


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#278 : t_a271 | [$k__279]}
  
  // META wf  : meas0.hs:6:9-10


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#227 : [t_a26N] | [$k__228]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 63]
  reft {VV#220 : t_a26N | [$k__221]}
  
  // META wf  : <no location info>


wf:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#224 : t_a26N | [$k__225]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#231 : GHC.Types.Bool | [$k__232]}
  
  // META wf  : <no location info>







