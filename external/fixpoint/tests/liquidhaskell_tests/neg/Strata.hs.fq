qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : (Strata.L  a_apC), fix##126#A0 : (Strata.L  a_apC)): (llen([VV]) = (1 + llen([fix##126#A0]))) // "Strata.hs" (line 7, column 16)
qualif Auto(VV : (Strata.L  a_apC), fix##126#A0 : (Strata.L  a_apC)): (xs([VV]) = fix##126#A0) // "Strata.hs" (line 7, column 16)
qualif Auto(VV : (Strata.L  a_apC), fix##126#A0 : a_apC): (x([VV]) = fix##126#A0) // "Strata.hs" (line 7, column 16)
qualif Auto(VV : (Strata.L  a_apC)): (llen([VV]) = 0) // "Strata.hs" (line 7, column 12)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : (Strata.L  a_apC), fix##126#A0 : (Strata.L  a_apC)): (llen([VV]) = (1 + llen([fix##126#A0]))) // "Strata.hs" (line 7, column 16)
qualif Auto(VV : (Strata.L  a_apC), fix##126#A0 : (Strata.L  a_apC)): (xs([VV]) = fix##126#A0) // "Strata.hs" (line 7, column 16)
qualif Auto(VV : (Strata.L  a_apC), fix##126#A0 : a_apC): (x([VV]) = fix##126#A0) // "Strata.hs" (line 7, column 16)
qualif Auto(VV : (Strata.L  a_apC)): (llen([VV]) = 0) // "Strata.hs" (line 7, column 12)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant llen : (func(1, [(Strata.L  @(0)); int]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x : (func(1, [(Strata.L  @(0)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant xs : (func(1, [(Strata.L  @(0)); (Strata.L  @(0))]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant Strata.Cons#rpv : (func(1, [@(0);
                                     (Strata.L  @(0));
                                     (Strata.L  @(0))]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant Strata.N#rpw : (func(1, [(Strata.L  @(0))]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant Strata.Cons#rpv : (func(1, [@(0);
                                     (Strata.L  @(0));
                                     (Strata.L  @(0))]))
constant Strata.N#rpw : (func(1, [(Strata.L  @(0))]))


bind 0 Strata.N#rpw : {VV : func(1, [(Strata.L  @(0))]) | []}
bind 1 GHC.Types.EQ#6U : {VV#149 : GHC.Types.Ordering | [(VV#149 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#150 : GHC.Types.Ordering | [(VV#150 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#151 : GHC.Types.Ordering | [(VV#151 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#176 : GHC.Types.Ordering | [(cmp([VV#176]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#177 : GHC.Types.Ordering | [(cmp([VV#177]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#178 : GHC.Types.Ordering | [(cmp([VV#178]) = GHC.Types.GT#6W)]}
bind 9 Strata.N#rpw : {VV : func(1, [(Strata.L  @(0))]) | []}
bind 10 fix##36#dNum_aNQ : {VV#189 : (GHC.Num.Num  a_aNP) | []}
bind 11 a_aNP : {VV : num | []}
bind 12 ds_dOS : {VV#190 : (Strata.L  t_aNO) | [(llen([VV#190]) >= 0)]}
bind 13 lq_anf__dOU : {lq_tmp_x_191 : (Strata.L  t_aNO) | [(lq_tmp_x_191 = ds_dOS);
                                                           (llen([lq_tmp_x_191]) >= 0)]}
bind 14 lq_anf__dOU : {lq_tmp_x_193 : (Strata.L  t_aNO) | [(lq_tmp_x_193 = ds_dOS);
                                                           (llen([lq_tmp_x_193]) >= 0);
                                                           (llen([lq_tmp_x_193]) >= 0)]}
bind 15 lq_anf__dOU : {lq_tmp_x_193 : (Strata.L  t_aNO) | [(lq_tmp_x_193 = ds_dOS);
                                                           (llen([lq_tmp_x_193]) >= 0);
                                                           (llen([lq_tmp_x_193]) = 0);
                                                           (lq_tmp_x_193 = Strata.N#rpw([]));
                                                           (llen([lq_tmp_x_193]) = 0);
                                                           (llen([lq_tmp_x_193]) >= 0)]}
bind 16 lq_anf__dOV : {lq_tmp_x_198 : int | [(lq_tmp_x_198 = 0)]}
bind 17 lq_anf__dOU : {lq_tmp_x_209 : (Strata.L  t_aNO) | [(lq_tmp_x_209 = ds_dOS);
                                                           (llen([lq_tmp_x_209]) >= 0);
                                                           (llen([lq_tmp_x_209]) >= 0)]}
bind 18 ds_dOT : {VV : t_aNO | []}
bind 19 xs#aNh : {lq_tmp_x_216 : (Strata.L  t_aNO) | [(llen([lq_tmp_x_216]) >= 0)]}
bind 20 lq_anf__dOU : {lq_tmp_x_209 : (Strata.L  t_aNO) | [(lq_tmp_x_209 = ds_dOS);
                                                           (llen([lq_tmp_x_209]) >= 0);
                                                           (llen([lq_tmp_x_209]) = (1 + llen([xs#aNh])));
                                                           (xs([lq_tmp_x_209]) = xs#aNh);
                                                           (x([lq_tmp_x_209]) = ds_dOT);
                                                           (lq_tmp_x_209 = Strata.Cons#rpv([ds_dOT;
                                                                                            xs#aNh]));
                                                           (llen([lq_tmp_x_209]) = (1 + llen([xs#aNh])));
                                                           (xs([lq_tmp_x_209]) = xs#aNh);
                                                           (x([lq_tmp_x_209]) = ds_dOT);
                                                           (llen([lq_tmp_x_209]) >= 0)]}
bind 21 x#aNg : {VV : a_aO5 | []}
bind 22 lq_anf__dOW : {lq_tmp_x_239 : (Strata.L  a_aO5) | [(llen([lq_tmp_x_239]) >= 0)]}
bind 23 fix##36#dNum_aOq : {VV#258 : (GHC.Num.Num  a_aOp) | []}
bind 24 a_aOp : {VV : num | []}
bind 25 x#aNi : {VV : t_aOo | []}
bind 26 lq_anf__dOX : {lq_tmp_x_260 : (Strata.L  t_aOo) | [(llen([lq_tmp_x_260]) >= 0)]}
bind 27 lq_tmp_x_280 : {VV : a_aOD | []}
bind 28 VV#289 : {VV#289 : (Strata.L  a_aOD) | [(llen([VV#289]) >= 0)]}
bind 29 VV#291 : {VV#291 : (Strata.L  t_aOo) | [(VV#291 = lq_anf__dOX);
                                                (llen([VV#291]) >= 0)]}
bind 30 VV#293 : {VV#293 : (Strata.L  a_aO5) | [(llen([VV#293]) = (1 + llen([lq_anf__dOW])));
                                                (xs([VV#293]) = lq_anf__dOW);
                                                (x([VV#293]) = x#aNg);
                                                (llen([VV#293]) >= 0)]}
bind 31 VV#295 : {VV#295 : (Strata.L  a_aO5) | [(VV#295 = lq_anf__dOW);
                                                (llen([VV#295]) >= 0)]}
bind 32 VV#297 : {VV#297 : (Strata.L  t_aNO) | [(VV#297 = xs#aNh);
                                                (llen([VV#297]) >= 0)]}
bind 33 VV#299 : {VV#299 : int | [(VV#299 = lq_anf__dOV)]}
bind 34 lq_tmp_x_283 : {VV#284 : a_aOD | [$k__285]}
bind 35 VV#302 : {VV#302 : (Strata.L  a_aOD) | [(llen([VV#302]) >= 0)]}
bind 36 VV#304 : {VV#304 : (Strata.L  a_aO5) | [(llen([VV#304]) >= 0)]}
bind 37 VV : {VV : a_aOD | []}
bind 38 lq_tmp_x_280 : {VV : a_aOD | []}
bind 39 VV#309 : {VV#309 : (Strata.L  a_aOD) | [(llen([VV#309]) >= 0)]}
bind 40 VV#309 : {VV#309 : (Strata.L  a_aOD) | [(llen([VV#309]) >= 0)]}
bind 41 VV#284 : {VV#284 : a_aOD | [$k__285[lq_tmp_x_283:=lq_tmp_x_280][lq_tmp_x_281:=VV#309]]}
bind 42 VV : {VV : a_aOp | []}
bind 43 VV#314 : {VV#314 : (Strata.L  t_aOo) | [(VV#314 = lq_anf__dOX);
                                                (llen([VV#314]) >= 0)]}
bind 44 VV#314 : {VV#314 : (Strata.L  t_aOo) | [(VV#314 = lq_anf__dOX);
                                                (llen([VV#314]) >= 0)]}
bind 45 VV#263 : {VV#263 : t_aOo | [$k__264[lq_tmp_x_262:=x#aNi][lq_tmp_x_260:=VV#314][lq_tmp_x_278:=VV#314]]}
bind 46 VV : {VV : t_aOo | [(VV = x#aNi)]}
bind 47 VV#319 : {VV#319 : (Strata.L  a_aO5) | [(llen([VV#319]) = (1 + llen([lq_anf__dOW])));
                                                (xs([VV#319]) = lq_anf__dOW);
                                                (x([VV#319]) = x#aNg);
                                                (llen([VV#319]) >= 0)]}
bind 48 VV#319 : {VV#319 : (Strata.L  a_aO5) | [(llen([VV#319]) = (1 + llen([lq_anf__dOW])));
                                                (xs([VV#319]) = lq_anf__dOW);
                                                (x([VV#319]) = x#aNg);
                                                (llen([VV#319]) >= 0)]}
bind 49 VV#252 : {VV#252 : a_aO5 | [$k__253[lq_tmp_x_250:=x#aNg][lq_tmp_x_251:=lq_anf__dOW][lq_tmp_x_247:=VV#319]]}
bind 50 VV#323 : {VV#323 : (Strata.L  a_aO5) | [(VV#323 = lq_anf__dOW);
                                                (llen([VV#323]) >= 0)]}
bind 51 VV#323 : {VV#323 : (Strata.L  a_aO5) | [(VV#323 = lq_anf__dOW);
                                                (llen([VV#323]) >= 0)]}
bind 52 VV#242 : {VV#242 : a_aO5 | [$k__243[lq_tmp_x_241:=x#aNg][lq_tmp_x_239:=VV#323][lq_tmp_x_255:=VV#323]]}
bind 53 VV : {VV : a_aO5 | [(VV = x#aNg)]}
bind 54 VV : {VV : a_aO5 | [(VV = x#aNg)]}
bind 55 VV : {VV : a_aNP | []}
bind 56 VV#330 : {VV#330 : (Strata.L  t_aNO) | [(VV#330 = xs#aNh);
                                                (llen([VV#330]) >= 0)]}
bind 57 VV#330 : {VV#330 : (Strata.L  t_aNO) | [(VV#330 = xs#aNh);
                                                (llen([VV#330]) >= 0)]}
bind 58 VV : {VV : t_aNO | []}
bind 59 VV : {VV : a_aNP | [(VV = lq_anf__dOV)]}
bind 60 VV#335 : {VV#335 : int | [(VV#335 = lq_anf__dOV)]}
bind 61 VV#335 : {VV#335 : int | [(VV#335 = lq_anf__dOV)]}




constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 8; 9]
  grd true
  lhs {VV#F1 : a_aOD | []}
  rhs {VV#F1 : a_aOD | [$k__285[VV#284:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : Strata.hs:30:7-12


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 26; 44; 45]
  grd true
  lhs {VV#F2 : t_aOo | [$k__264[lq_tmp_x_262:=x#aNi][lq_tmp_x_260:=VV#314][lq_tmp_x_278:=VV#314][VV#263:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : t_aOo | [$k__274[lq_tmp_x_271:=fix##36#dNum_aOq][lq_tmp_x_268:=VV#314][VV#273:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : Strata.hs:28:17-24


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 46]
  grd true
  lhs {VV#F3 : t_aOo | [(VV#F3 = x#aNi)]}
  rhs {VV#F3 : t_aOo | [$k__264[VV#263:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : Strata.hs:28:24


constraint:
  env [0; 1; 2; 3; 51; 4; 52; 5; 21; 6; 22; 7; 8; 9]
  grd true
  lhs {VV#F4 : a_aO5 | [$k__243[lq_tmp_x_241:=x#aNg][lq_tmp_x_239:=VV#323][lq_tmp_x_255:=VV#323][VV#242:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : a_aO5 | [$k__253[lq_tmp_x_250:=x#aNg][lq_tmp_x_246:=VV#323][VV#252:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : Strata.hs:21:20-27


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 53; 6; 22; 7; 8; 9]
  grd true
  lhs {VV#F5 : a_aO5 | [(VV#F5 = x#aNg)]}
  rhs {VV#F5 : a_aO5 | [$k__253[VV#252:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : Strata.hs:21:17


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 54; 7; 8; 9]
  grd true
  lhs {VV#F6 : a_aO5 | [(VV#F6 = x#aNg)]}
  rhs {VV#F6 : a_aO5 | [$k__243[VV#242:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : Strata.hs:21:27


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       56;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F7 : (Strata.L  t_aNO) | [(VV#F7 = xs#aNh);
                                    (llen([VV#F7]) >= 0)]}
  rhs {VV#F7 : (Strata.L  t_aNO) | [(llen([VV#F7]) < llen([ds_dOS]))]}
  id 7 tag [1]
  // META constraint id 7 : Strata.hs:26:29-30


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       56;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F8 : (Strata.L  t_aNO) | [(VV#F8 = xs#aNh);
                                    (llen([VV#F8]) >= 0)]}
  rhs {VV#F8 : (Strata.L  t_aNO) | [(llen([VV#F8]) >= 0)]}
  id 8 tag [1]
  // META constraint id 8 : Strata.hs:26:29-30


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       57;
       10;
       58;
       11;
       12;
       13]
  grd true
  lhs {VV#F9 : t_aNO | []}
  rhs {VV#F9 : t_aNO | [$k__231[lq_tmp_x_186:=fix##36#dNum_aNQ][VV:=VV#330][VV#230:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : Strata.hs:26:29-30




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#284 : a_aOD | [$k__285]}
  
  // META wf  : Strata.hs:30:7-12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 26]
  reft {VV#273 : t_aOo | [$k__274]}
  
  // META wf  : Strata.hs:28:9-14


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25]
  reft {VV#263 : t_aOo | [$k__264]}
  
  // META wf  : Strata.hs:28:17-22


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9]
  reft {VV#252 : a_aO5 | [$k__253]}
  
  // META wf  : Strata.hs:21:12-15


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 9]
  reft {VV#242 : a_aO5 | [$k__243]}
  
  // META wf  : Strata.hs:21:20-25


wf:
  env [0; 1; 17; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#230 : t_aNO | [$k__231]}
  
  // META wf  : Strata.hs:26:22-27







