qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aLe], fix##126#A0 : [[a_aLe]]): (listElts([v]) = llElts([fix##126#A0])) // "ListConcat.hs" (line 13, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [a_aLe], fix##126#A0 : [[a_aLe]]): (listElts([v]) = llElts([fix##126#A0])) // "ListConcat.hs" (line 13, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant Set_emp : (func(1, [(Set_Set  @(0)); bool]))
constant Set_empty : (func(1, [int; (Set_Set  @(0))]))
constant Set_cup : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant Set_sub : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             bool]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant Set_dif : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant strLen : (func(0, [int; int]))
constant Set_cap : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant listElts : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_sng : (func(1, [@(0); (Set_Set  @(0))]))
constant Set_mem : (func(1, [@(0); (Set_Set  @(0)); bool]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant llElts : (func(1, [[[@(0)]]; (Set_Set  @(0))]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 GHC.Types.EQ#6U : {VV#116 : GHC.Types.Ordering | [(VV#116 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#117 : GHC.Types.Ordering | [(VV#117 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#118 : GHC.Types.Ordering | [(VV#118 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r21 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#141 : GHC.Types.Ordering | [(cmp([VV#141]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#142 : GHC.Types.Ordering | [(cmp([VV#142]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#143 : GHC.Types.Ordering | [(cmp([VV#143]) = GHC.Types.GT#6W)]}
bind 9 ds_dLl : {VV#150 : [[a_aLe]] | [(len([VV#150]) >= 0)]}
bind 10 lq_anf__dLn : {lq_tmp_x_156 : [[a_aLe]] | [(lq_tmp_x_156 = ds_dLl);
                                                   (len([lq_tmp_x_156]) >= 0)]}
bind 11 lq_anf__dLn : {lq_tmp_x_163 : [[a_aLe]] | [(lq_tmp_x_163 = ds_dLl);
                                                   (len([lq_tmp_x_163]) >= 0);
                                                   (len([lq_tmp_x_163]) >= 0)]}
bind 12 lq_anf__dLn : {lq_tmp_x_163 : [[a_aLe]] | [(lq_tmp_x_163 = ds_dLl);
                                                   (len([lq_tmp_x_163]) >= 0);
                                                   (? Set_emp([llElts([lq_tmp_x_163])]));
                                                   (? Set_emp([listElts([lq_tmp_x_163])]));
                                                   (len([lq_tmp_x_163]) = 0);
                                                   ((? null([lq_tmp_x_163])) <=> true);
                                                   (lq_tmp_x_163 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (? Set_emp([llElts([lq_tmp_x_163])]));
                                                   (? Set_emp([listElts([lq_tmp_x_163])]));
                                                   (len([lq_tmp_x_163]) = 0);
                                                   ((? null([lq_tmp_x_163])) <=> true);
                                                   (len([lq_tmp_x_163]) >= 0)]}
bind 13 lq_tmp_x_178 : {VV : a_aLe | []}
bind 14 lq_anf__dLn : {lq_tmp_x_185 : [[a_aLe]] | [(lq_tmp_x_185 = ds_dLl);
                                                   (len([lq_tmp_x_185]) >= 0);
                                                   (len([lq_tmp_x_185]) >= 0)]}
bind 15 ds_dLm : {lq_tmp_x_181 : [a_aLe] | [(len([lq_tmp_x_181]) >= 0)]}
bind 16 xs#aL3 : {lq_tmp_x_195 : [[a_aLe]] | [(len([lq_tmp_x_195]) >= 0)]}
bind 17 lq_anf__dLn : {lq_tmp_x_185 : [[a_aLe]] | [(lq_tmp_x_185 = ds_dLl);
                                                   (len([lq_tmp_x_185]) >= 0);
                                                   (llElts([lq_tmp_x_185]) = Set_cup([listElts([ds_dLm]);
                                                                                      llElts([xs#aL3])]));
                                                   (listElts([lq_tmp_x_185]) = Set_cup([Set_sng([ds_dLm]);
                                                                                        listElts([xs#aL3])]));
                                                   (len([lq_tmp_x_185]) = (1 + len([xs#aL3])));
                                                   ((? null([lq_tmp_x_185])) <=> false);
                                                   (xsListSelector([lq_tmp_x_185]) = xs#aL3);
                                                   (xListSelector([lq_tmp_x_185]) = ds_dLm);
                                                   (lq_tmp_x_185 = fix#GHC.Types.#58##35#64([ds_dLm;
                                                                                             xs#aL3]));
                                                   (llElts([lq_tmp_x_185]) = Set_cup([listElts([ds_dLm]);
                                                                                      llElts([xs#aL3])]));
                                                   (listElts([lq_tmp_x_185]) = Set_cup([Set_sng([ds_dLm]);
                                                                                        listElts([xs#aL3])]));
                                                   (len([lq_tmp_x_185]) = (1 + len([xs#aL3])));
                                                   ((? null([lq_tmp_x_185])) <=> false);
                                                   (xsListSelector([lq_tmp_x_185]) = xs#aL3);
                                                   (xListSelector([lq_tmp_x_185]) = ds_dLm);
                                                   (len([lq_tmp_x_185]) >= 0)]}
bind 18 lq_anf__dLo : {lq_tmp_x_205 : [a_aLe] | [(lq_tmp_x_205 = ds_dLm);
                                                 (len([lq_tmp_x_205]) >= 0)]}
bind 19 lq_anf__dLo : {lq_tmp_x_208 : [a_aLe] | [(lq_tmp_x_208 = ds_dLm);
                                                 (len([lq_tmp_x_208]) >= 0);
                                                 (len([lq_tmp_x_208]) >= 0)]}
bind 20 lq_anf__dLo : {lq_tmp_x_208 : [a_aLe] | [(lq_tmp_x_208 = ds_dLm);
                                                 (len([lq_tmp_x_208]) >= 0);
                                                 (? Set_emp([listElts([lq_tmp_x_208])]));
                                                 (len([lq_tmp_x_208]) = 0);
                                                 ((? null([lq_tmp_x_208])) <=> true);
                                                 (lq_tmp_x_208 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (? Set_emp([listElts([lq_tmp_x_208])]));
                                                 (len([lq_tmp_x_208]) = 0);
                                                 ((? null([lq_tmp_x_208])) <=> true);
                                                 (len([lq_tmp_x_208]) >= 0)]}
bind 21 lq_anf__dLo : {lq_tmp_x_235 : [a_aLe] | [(lq_tmp_x_235 = ds_dLm);
                                                 (len([lq_tmp_x_235]) >= 0);
                                                 (len([lq_tmp_x_235]) >= 0)]}
bind 22 y#aL4 : {VV : a_aLe | []}
bind 23 ys#aL5 : {lq_tmp_x_245 : [a_aLe] | [(len([lq_tmp_x_245]) >= 0)]}
bind 24 lq_anf__dLo : {lq_tmp_x_235 : [a_aLe] | [(lq_tmp_x_235 = ds_dLm);
                                                 (len([lq_tmp_x_235]) >= 0);
                                                 (listElts([lq_tmp_x_235]) = Set_cup([Set_sng([y#aL4]);
                                                                                      listElts([ys#aL5])]));
                                                 (len([lq_tmp_x_235]) = (1 + len([ys#aL5])));
                                                 ((? null([lq_tmp_x_235])) <=> false);
                                                 (xsListSelector([lq_tmp_x_235]) = ys#aL5);
                                                 (xListSelector([lq_tmp_x_235]) = y#aL4);
                                                 (lq_tmp_x_235 = fix#GHC.Types.#58##35#64([y#aL4;
                                                                                           ys#aL5]));
                                                 (listElts([lq_tmp_x_235]) = Set_cup([Set_sng([y#aL4]);
                                                                                      listElts([ys#aL5])]));
                                                 (len([lq_tmp_x_235]) = (1 + len([ys#aL5])));
                                                 ((? null([lq_tmp_x_235])) <=> false);
                                                 (xsListSelector([lq_tmp_x_235]) = ys#aL5);
                                                 (xListSelector([lq_tmp_x_235]) = y#aL4);
                                                 (len([lq_tmp_x_235]) >= 0)]}
bind 25 lq_tmp_x_284 : {VV#285 : [a_aLe] | [(len([VV#285]) >= 0)]}
bind 26 lq_anf__dLp : {lq_tmp_x_257 : [[a_aLe]] | [(llElts([lq_tmp_x_257]) = Set_cup([listElts([ys#aL5]);
                                                                                      llElts([xs#aL3])]));
                                                   (listElts([lq_tmp_x_257]) = Set_cup([Set_sng([ys#aL5]);
                                                                                        listElts([xs#aL3])]));
                                                   (len([lq_tmp_x_257]) = (1 + len([xs#aL3])));
                                                   ((? null([lq_tmp_x_257])) <=> false);
                                                   (xsListSelector([lq_tmp_x_257]) = xs#aL3);
                                                   (xListSelector([lq_tmp_x_257]) = ys#aL5);
                                                   (len([lq_tmp_x_257]) >= 0)]}
bind 27 VV#314 : {VV#314 : [a_aLe] | [(listElts([VV#314]) = llElts([lq_anf__dLp]));
                                      (len([VV#314]) >= 0)]}
bind 28 VV#314 : {VV#314 : [a_aLe] | [(listElts([VV#314]) = llElts([lq_anf__dLp]));
                                      (len([VV#314]) >= 0)]}
bind 29 VV#305 : {VV#305 : a_aLe | [$k__306[lq_tmp_x_148:=lq_anf__dLp][v:=VV#314]]}
bind 30 fldList : {VV : a_aLe | []}
bind 31 VV#305 : {VV#305 : a_aLe | []}
bind 32 VV#320 : {VV#320 : [[a_aLe]] | [(VV#320 = lq_anf__dLp);
                                        (len([VV#320]) >= 0)]}
bind 33 VV#320 : {VV#320 : [[a_aLe]] | [(VV#320 = lq_anf__dLp);
                                        (len([VV#320]) >= 0)]}
bind 34 VV#323 : {VV#323 : [a_aLe] | [$k__270[VV#269:=VV#323][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#323][lq_tmp_x_257:=VV#320][lq_tmp_x_313:=VV#320][lq_tmp_x_309:=VV#323];
                                      (len([VV#323]) >= 0)]}
bind 35 VV#323 : {VV#323 : [a_aLe] | [$k__270[VV#269:=VV#323][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#323][lq_tmp_x_257:=VV#320][lq_tmp_x_313:=VV#320][lq_tmp_x_309:=VV#323];
                                      (len([VV#323]) >= 0)]}
bind 36 VV#262 : {VV#262 : a_aLe | [$k__263[VV#269:=VV#323][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#323][lq_tmp_x_257:=VV#320][lq_tmp_x_313:=VV#320][lq_tmp_x_309:=VV#323]]}
bind 37 fldList : {VV : a_aLe | []}
bind 38 VV#266 : {VV#266 : a_aLe | [$k__267[lq_tmp_x_265:=fldList][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_272:=fldList][lq_tmp_x_257:=VV#320][lq_tmp_x_313:=VV#320][lq_tmp_x_308:=fldList]]}
bind 39 fldList : {VV#329 : [a_aLe] | [(len([VV#329]) >= 0)]}
bind 40 VV#330 : {VV#330 : [a_aLe] | [$k__282[lq_tmp_x_284:=fldList][VV#281:=VV#330][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#330][lq_tmp_x_256:=fldList][lq_tmp_x_310:=fldList][lq_tmp_x_312:=VV#330];
                                      (len([VV#330]) >= 0)]}
bind 41 VV#330 : {VV#330 : [a_aLe] | [$k__282[lq_tmp_x_284:=fldList][VV#281:=VV#330][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#330][lq_tmp_x_256:=fldList][lq_tmp_x_310:=fldList][lq_tmp_x_312:=VV#330];
                                      (len([VV#330]) >= 0)]}
bind 42 VV#262 : {VV#262 : a_aLe | [$k__275[lq_tmp_x_284:=fldList][VV#274:=VV#262][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#330][lq_tmp_x_256:=fldList][lq_tmp_x_310:=fldList][lq_tmp_x_312:=VV#330]]}
bind 43 fix#_LIQUID_dummy : {VV : a_aLe | []}
bind 44 VV#266 : {VV#266 : a_aLe | [$k__279[lq_tmp_x_284:=fldList][VV#278:=VV#266][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_272:=fix#_LIQUID_dummy][lq_tmp_x_256:=fldList][lq_tmp_x_310:=fldList][lq_tmp_x_311:=fix#_LIQUID_dummy]]}
bind 45 VV#336 : {VV#336 : [[a_aLe]] | [(VV#336 = xs#aL3);
                                        (len([VV#336]) >= 0)]}
bind 46 VV#336 : {VV#336 : [[a_aLe]] | [(VV#336 = xs#aL3);
                                        (len([VV#336]) >= 0)]}
bind 47 VV#339 : {VV#339 : [a_aLe] | [(len([VV#339]) >= 0)]}
bind 48 VV#339 : {VV#339 : [a_aLe] | [(len([VV#339]) >= 0)]}
bind 49 VV : {VV : a_aLe | []}
bind 50 lq_tmp_x_272 : {VV : a_aLe | []}
bind 51 VV : {VV : a_aLe | []}
bind 52 lq_tmp_x_254 : {VV#345 : [a_aLe] | [(len([VV#345]) >= 0)]}
bind 53 VV#346 : {VV#346 : [a_aLe] | [(len([VV#346]) >= 0)]}
bind 54 VV#346 : {VV#346 : [a_aLe] | [(len([VV#346]) >= 0)]}
bind 55 VV : {VV : a_aLe | []}
bind 56 lq_tmp_x_272 : {VV : a_aLe | []}
bind 57 VV : {VV : a_aLe | []}
bind 58 VV#352 : {VV#352 : [a_aLe] | [(VV#352 = ys#aL5);
                                      (len([VV#352]) >= 0)]}
bind 59 VV#352 : {VV#352 : [a_aLe] | [(VV#352 = ys#aL5);
                                      (len([VV#352]) >= 0)]}
bind 60 VV : {VV : a_aLe | []}
bind 61 lq_tmp_x_272 : {VV : a_aLe | []}
bind 62 VV : {VV : a_aLe | []}
bind 63 VV#358 : {VV#358 : [a_aLe] | [(listElts([VV#358]) = llElts([xs#aL3]));
                                      (len([VV#358]) >= 0)]}
bind 64 VV#358 : {VV#358 : [a_aLe] | [(listElts([VV#358]) = llElts([xs#aL3]));
                                      (len([VV#358]) >= 0)]}
bind 65 VV#225 : {VV#225 : a_aLe | [$k__226[lq_tmp_x_148:=xs#aL3][v:=VV#358]]}
bind 66 fldList : {VV : a_aLe | []}
bind 67 VV#225 : {VV#225 : a_aLe | []}
bind 68 VV#364 : {VV#364 : [[a_aLe]] | [(VV#364 = xs#aL3);
                                        (len([VV#364]) >= 0)]}
bind 69 VV#364 : {VV#364 : [[a_aLe]] | [(VV#364 = xs#aL3);
                                        (len([VV#364]) >= 0)]}
bind 70 VV#367 : {VV#367 : [a_aLe] | [(len([VV#367]) >= 0)]}
bind 71 VV#367 : {VV#367 : [a_aLe] | [(len([VV#367]) >= 0)]}
bind 72 VV : {VV : a_aLe | []}
bind 73 fldList : {VV : a_aLe | []}
bind 74 VV : {VV : a_aLe | []}
bind 75 fldList : {VV#373 : [a_aLe] | [(len([VV#373]) >= 0)]}
bind 76 VV#374 : {VV#374 : [a_aLe] | [(len([VV#374]) >= 0)]}
bind 77 VV#374 : {VV#374 : [a_aLe] | [(len([VV#374]) >= 0)]}
bind 78 VV : {VV : a_aLe | []}
bind 79 fix#_LIQUID_dummy : {VV : a_aLe | []}
bind 80 VV : {VV : a_aLe | []}
bind 81 VV#380 : {VV#380 : [a_aLe] | [(? Set_emp([listElts([VV#380])]));
                                      (len([VV#380]) = 0);
                                      ((? null([VV#380])) <=> true);
                                      (len([VV#380]) >= 0)]}
bind 82 VV#380 : {VV#380 : [a_aLe] | [(? Set_emp([listElts([VV#380])]));
                                      (len([VV#380]) = 0);
                                      ((? null([VV#380])) <=> true);
                                      (len([VV#380]) >= 0)]}
bind 83 VV#172 : {VV#172 : a_aLe | [$k__173[lq_tmp_x_171:=VV#380]]}
bind 84 fldList : {VV : a_aLe | []}
bind 85 VV#172 : {VV#172 : a_aLe | [$k__176[lq_tmp_x_178:=fldList][VV#175:=VV#172][lq_tmp_x_170:=fldList]]}
bind 86 VV#281 : {VV#281 : [a_aLe] | [$k__282;
                                      (len([VV#281]) >= 0)]}
bind 87 lq_tmp_x_277 : {VV : a_aLe | []}
bind 88 VV#269 : {VV#269 : [a_aLe] | [$k__270;
                                      (len([VV#269]) >= 0)]}
bind 89 lq_tmp_x_265 : {VV : a_aLe | []}




constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       59;
       61;
       14;
       62;
       15]
  grd true
  lhs {VV#F16 : a_aLe | []}
  rhs {VV#F16 : a_aLe | [$k__267[lq_tmp_x_265:=lq_tmp_x_272][VV#266:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]
  // META constraint id 16 : ListConcat.hs:15:30-31


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       26;
       27;
       14;
       15]
  grd true
  lhs {VV#F1 : [a_aLe] | [(listElts([VV#F1]) = llElts([lq_anf__dLp]));
                          (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [a_aLe] | [(listElts([VV#F1]) = llElts([ds_dLl]))]}
  id 1 tag [1]
  // META constraint id 1 : ListConcat.hs:15:22-35


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       14;
       15;
       63]
  grd true
  lhs {VV#F17 : [a_aLe] | [(listElts([VV#F17]) = llElts([xs#aL3]));
                           (len([VV#F17]) >= 0)]}
  rhs {VV#F17 : [a_aLe] | [(listElts([VV#F17]) = llElts([ds_dLl]))]}
  id 17 tag [1]
  // META constraint id 17 : ListConcat.hs:14:22-30


constraint:
  env [0;
       16;
       32;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       26;
       14;
       15]
  grd true
  lhs {VV#F2 : [[a_aLe]] | [(VV#F2 = lq_anf__dLp);
                            (len([VV#F2]) >= 0)]}
  rhs {VV#F2 : [[a_aLe]] | [(len([VV#F2]) < len([ds_dLl]))]}
  id 2 tag [1]
  // META constraint id 2 : ListConcat.hs:15:30-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       68;
       5;
       6;
       7;
       8;
       9;
       10;
       14;
       15]
  grd true
  lhs {VV#F18 : [[a_aLe]] | [(VV#F18 = xs#aL3);
                             (len([VV#F18]) >= 0)]}
  rhs {VV#F18 : [[a_aLe]] | [(len([VV#F18]) < len([ds_dLl]))]}
  id 18 tag [1]
  // META constraint id 18 : ListConcat.hs:14:29-30


constraint:
  env [0;
       16;
       32;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       26;
       14;
       15]
  grd true
  lhs {VV#F3 : [[a_aLe]] | [(VV#F3 = lq_anf__dLp);
                            (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [[a_aLe]] | [(len([VV#F3]) >= 0)]}
  id 3 tag [1]
  // META constraint id 3 : ListConcat.hs:15:30-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       68;
       5;
       6;
       7;
       8;
       9;
       10;
       14;
       15]
  grd true
  lhs {VV#F19 : [[a_aLe]] | [(VV#F19 = xs#aL3);
                             (len([VV#F19]) >= 0)]}
  rhs {VV#F19 : [[a_aLe]] | [(len([VV#F19]) >= 0)]}
  id 19 tag [1]
  // META constraint id 19 : ListConcat.hs:14:29-30


constraint:
  env [0;
       16;
       1;
       17;
       33;
       2;
       18;
       3;
       35;
       4;
       36;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       26;
       14;
       15]
  grd true
  lhs {VV#F4 : a_aLe | [$k__263[VV#269:=VV#323][lq_tmp_x_260:=ys#aL5][lq_tmp_x_261:=xs#aL3][lq_tmp_x_273:=VV#323][lq_tmp_x_257:=VV#320][lq_tmp_x_313:=VV#320][lq_tmp_x_309:=VV#323][VV#262:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : a_aLe | [$k__306[VV:=VV#320][VV:=VV#323][VV#305:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : ListConcat.hs:15:30-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       69;
       6;
       7;
       71;
       8;
       72;
       9;
       10;
       14;
       15]
  grd true
  lhs {VV#F20 : a_aLe | []}
  rhs {VV#F20 : a_aLe | [$k__226[VV:=VV#364][VV:=VV#367][VV#225:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [1]
  // META constraint id 20 : ListConcat.hs:14:29-30


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15;
       47]
  grd true
  lhs {VV#F5 : [a_aLe] | [(len([VV#F5]) >= 0)]}
  rhs {VV#F5 : [a_aLe] | [$k__270[VV#269:=VV#F5][lq_tmp_x_260:=ys#aL5][lq_tmp_x_255:=VV#336][lq_tmp_x_273:=VV#F5][VV#339:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]
  // META constraint id 5 : ListConcat.hs:15:33-34


constraint:
  env [0; 1; 81; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F21 : [a_aLe] | [(? Set_emp([listElts([VV#F21])]));
                           (len([VV#F21]) = 0);
                           ((? null([VV#F21])) <=> true);
                           (len([VV#F21]) >= 0)]}
  rhs {VV#F21 : [a_aLe] | [(listElts([VV#F21]) = llElts([ds_dLl]))]}
  id 21 tag [1]
  // META constraint id 21 : ListConcat.hs:13:22-23


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15;
       47]
  grd true
  lhs {VV#F6 : [a_aLe] | [(len([VV#F6]) >= 0)]}
  rhs {VV#F6 : [a_aLe] | [$k__282[lq_tmp_x_284:=ys#aL5][VV#281:=VV#F6][lq_tmp_x_260:=ys#aL5][lq_tmp_x_255:=VV#336][lq_tmp_x_273:=VV#F6][VV#339:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       48;
       1;
       17;
       49;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F7 : a_aLe | []}
  rhs {VV#F7 : a_aLe | [$k__263[VV#269:=VV#339][lq_tmp_x_260:=ys#aL5][lq_tmp_x_255:=VV#336][lq_tmp_x_273:=VV#339][VV#262:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       48;
       1;
       17;
       49;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F8 : a_aLe | []}
  rhs {VV#F8 : a_aLe | [$k__275[lq_tmp_x_284:=ys#aL5][VV#274:=VV#F8][lq_tmp_x_260:=ys#aL5][lq_tmp_x_255:=VV#336][lq_tmp_x_273:=VV#339][VV#262:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       48;
       1;
       17;
       2;
       18;
       50;
       3;
       51;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F9 : a_aLe | []}
  rhs {VV#F9 : a_aLe | [$k__267[lq_tmp_x_265:=lq_tmp_x_272][lq_tmp_x_260:=ys#aL5][lq_tmp_x_255:=VV#336][VV#266:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       48;
       1;
       17;
       2;
       18;
       50;
       3;
       51;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F10 : a_aLe | []}
  rhs {VV#F10 : a_aLe | [$k__279[lq_tmp_x_284:=ys#aL5][VV#278:=VV#F10][lq_tmp_x_260:=ys#aL5][lq_tmp_x_255:=VV#336][VV#266:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       52;
       5;
       21;
       53;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F11 : [a_aLe] | [(len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [a_aLe] | [$k__282[lq_tmp_x_284:=lq_tmp_x_254][VV#281:=VV#F11][lq_tmp_x_260:=ys#aL5][lq_tmp_x_273:=VV#F11][VV#346:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       52;
       5;
       21;
       6;
       22;
       54;
       7;
       23;
       55;
       8;
       24;
       9;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F12 : a_aLe | []}
  rhs {VV#F12 : a_aLe | [$k__275[lq_tmp_x_284:=lq_tmp_x_254][VV#274:=VV#F12][lq_tmp_x_260:=ys#aL5][lq_tmp_x_273:=VV#346][VV#262:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       52;
       5;
       21;
       6;
       22;
       54;
       7;
       23;
       8;
       24;
       56;
       9;
       57;
       10;
       14;
       46;
       15]
  grd true
  lhs {VV#F13 : a_aLe | []}
  rhs {VV#F13 : a_aLe | [$k__279[lq_tmp_x_284:=lq_tmp_x_254][VV#278:=VV#F13][lq_tmp_x_260:=ys#aL5][VV#266:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : ListConcat.hs:15:33-34


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       58;
       14;
       15]
  grd true
  lhs {VV#F14 : [a_aLe] | [(VV#F14 = ys#aL5); (len([VV#F14]) >= 0)]}
  rhs {VV#F14 : [a_aLe] | [$k__270[VV#269:=VV#F14][lq_tmp_x_273:=VV#F14][VV#352:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : ListConcat.hs:15:30-31


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       59;
       60;
       14;
       15]
  grd true
  lhs {VV#F15 : a_aLe | []}
  rhs {VV#F15 : a_aLe | [$k__263[VV#269:=VV#352][lq_tmp_x_273:=VV#352][VV#262:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : ListConcat.hs:15:30-31




wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       26;
       14;
       15]
  reft {VV#305 : a_aLe | [$k__306]}
  
  // META wf  : ListConcat.hs:15:22-27


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       14;
       15]
  reft {VV#281 : [a_aLe] | [$k__282]}
  
  // META wf  : ListConcat.hs:15:32


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       86;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       14;
       15]
  reft {VV#274 : a_aLe | [$k__275]}
  
  // META wf  : ListConcat.hs:15:32


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       87;
       8;
       24;
       9;
       25;
       10;
       14;
       15]
  reft {VV#278 : a_aLe | [$k__279]}
  
  // META wf  : ListConcat.hs:15:32


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       14;
       15]
  reft {VV#269 : [a_aLe] | [$k__270]}
  
  // META wf  : ListConcat.hs:15:32


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       88;
       9;
       10;
       14;
       15]
  reft {VV#262 : a_aLe | [$k__263]}
  
  // META wf  : ListConcat.hs:15:32


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       89;
       10;
       14;
       15]
  reft {VV#266 : a_aLe | [$k__267]}
  
  // META wf  : ListConcat.hs:15:32


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9; 10; 14; 15]
  reft {VV#225 : a_aLe | [$k__226]}
  
  // META wf  : ListConcat.hs:14:22-27


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#175 : a_aLe | [$k__176]}
  
  // META wf  : ListConcat.hs:13:22-23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#172 : a_aLe | [$k__173]}
  
  // META wf  : ListConcat.hs:13:22-23







