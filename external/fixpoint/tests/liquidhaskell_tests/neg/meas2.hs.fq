qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Enum.#36#fEnumInt#35#riS : {VV#179 : (GHC.Enum.Enum  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#182 : GHC.Types.Ordering | [(VV#182 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#183 : GHC.Types.Ordering | [(VV#183 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#184 : GHC.Types.Ordering | [(VV#184 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#224 : GHC.Types.Ordering | [(cmp([VV#224]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#225 : GHC.Types.Ordering | [(cmp([VV#225]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#226 : GHC.Types.Ordering | [(cmp([VV#226]) = GHC.Types.GT#6W)]}
bind 10 ds_d1aS : {VV#230 : a_a1aB | [$k__231]}
bind 11 ms#a1ai : {VV#247 : [a_a1at] | [$k__248;
                                        (len([VV#247]) >= 0)]}
bind 12 lq_anf__d1aU : {lq_tmp_x_255 : [a_a1at] | [(lq_tmp_x_255 = ms#a1ai);
                                                   (len([lq_tmp_x_255]) >= 0)]}
bind 13 lq_anf__d1aU : {lq_tmp_x_258 : [a_a1at] | [(lq_tmp_x_258 = ms#a1ai);
                                                   (len([lq_tmp_x_258]) >= 0);
                                                   (len([lq_tmp_x_258]) >= 0)]}
bind 14 lq_anf__d1aU : {lq_tmp_x_258 : [a_a1at] | [(lq_tmp_x_258 = ms#a1ai);
                                                   (len([lq_tmp_x_258]) >= 0);
                                                   (len([lq_tmp_x_258]) = 0);
                                                   ((? null([lq_tmp_x_258])) <=> true);
                                                   (lq_tmp_x_258 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (len([lq_tmp_x_258]) = 0);
                                                   ((? null([lq_tmp_x_258])) <=> true);
                                                   (len([lq_tmp_x_258]) >= 0)]}
bind 15 lq_anf__d1aU : {lq_tmp_x_271 : [a_a1at] | [(lq_tmp_x_271 = ms#a1ai);
                                                   (len([lq_tmp_x_271]) >= 0);
                                                   (len([lq_tmp_x_271]) >= 0)]}
bind 16 n#a1aj : {VV#240 : a_a1at | [$k__241[VV#247:=lq_anf__d1aU][lq_tmp_x_255:=lq_anf__d1aU][lq_tmp_x_271:=lq_anf__d1aU]]}
bind 17 ns#a1ak : {lq_tmp_x_281 : [a_a1at] | [(len([lq_tmp_x_281]) >= 0)]}
bind 18 lq_anf__d1aU : {lq_tmp_x_271 : [a_a1at] | [(lq_tmp_x_271 = ms#a1ai);
                                                   (len([lq_tmp_x_271]) >= 0);
                                                   (len([lq_tmp_x_271]) = (1 + len([ns#a1ak])));
                                                   ((? null([lq_tmp_x_271])) <=> false);
                                                   (xsListSelector([lq_tmp_x_271]) = ns#a1ak);
                                                   (xListSelector([lq_tmp_x_271]) = n#a1aj);
                                                   (lq_tmp_x_271 = fix#GHC.Types.#58##35#64([n#a1aj;
                                                                                             ns#a1ak]));
                                                   (len([lq_tmp_x_271]) = (1 + len([ns#a1ak])));
                                                   ((? null([lq_tmp_x_271])) <=> false);
                                                   (xsListSelector([lq_tmp_x_271]) = ns#a1ak);
                                                   (xListSelector([lq_tmp_x_271]) = n#a1aj);
                                                   (len([lq_tmp_x_271]) >= 0)]}
bind 19 lq_anf__d1aV : {lq_tmp_x_319 : int | [(lq_tmp_x_319 = (1  :  int))]}
bind 20 lq_anf__d1aW : {lq_tmp_x_325 : int | [(lq_tmp_x_325 = (100  :  int))]}
bind 21 Meas.zs#r12i : {VV#315 : [int] | [$k__316;
                                          (len([VV#315]) >= 0)]}
bind 22 n2#a1al : {lq_tmp_x_351 : int | [$k__252[VV#251:=lq_tmp_x_351][ms#a1ai:=Meas.zs#r12i][lq_tmp_x_353:=Meas.zs#r12i]]}
bind 23 lq_anf__d1aX : {lq_tmp_x_364 : int | [(lq_tmp_x_364 = (0  :  int))]}
bind 24 lq_anf__d1aY : {lq_tmp_x_371 : GHC.Types.Bool | [((? Prop([lq_tmp_x_371])) <=> (n2#a1al = lq_anf__d1aX))]}
bind 25 Meas.prop2#r12j : {VV#346 : GHC.Types.Bool | [$k__347]}
bind 26 VV#385 : {VV#385 : GHC.Types.Bool | [(? Prop([VV#385]))]}
bind 27 VV#385 : {VV#385 : GHC.Types.Bool | [(? Prop([VV#385]))]}
bind 28 VV#388 : {VV#388 : GHC.Types.Bool | [(VV#388 = lq_anf__d1aY)]}
bind 29 VV#388 : {VV#388 : GHC.Types.Bool | [(VV#388 = lq_anf__d1aY)]}
bind 30 VV#391 : {VV#391 : int | [(VV#391 = lq_anf__d1aX)]}
bind 31 VV#391 : {VV#391 : int | [(VV#391 = lq_anf__d1aX)]}
bind 32 VV#394 : {VV#394 : int | [(VV#394 = n2#a1al)]}
bind 33 VV#394 : {VV#394 : int | [(VV#394 = n2#a1al)]}
bind 34 VV#397 : {VV#397 : int | [(VV#397 = 0)]}
bind 35 VV#397 : {VV#397 : int | [(VV#397 = 0)]}
bind 36 VV#400 : {VV#400 : [int] | [(VV#400 = Meas.zs#r12i);
                                    (len([VV#400]) >= 0)]}
bind 37 VV#400 : {VV#400 : [int] | [(VV#400 = Meas.zs#r12i);
                                    (len([VV#400]) >= 0)]}
bind 38 VV#403 : {VV#403 : int | [$k__309[VV#308:=VV#403][VV#315:=VV#400][lq_tmp_x_361:=VV#400][lq_tmp_x_358:=VV#403]]}
bind 39 VV#403 : {VV#403 : int | [$k__309[VV#308:=VV#403][VV#315:=VV#400][lq_tmp_x_361:=VV#400][lq_tmp_x_358:=VV#403]]}
bind 40 lq_tmp_x_349 : {VV#406 : int | []}
bind 41 VV#407 : {VV#407 : int | [$k__313[VV#312:=VV#407][lq_tmp_x_311:=lq_tmp_x_349][lq_tmp_x_359:=lq_tmp_x_349][lq_tmp_x_360:=VV#407]]}
bind 42 VV#407 : {VV#407 : int | [$k__313[VV#312:=VV#407][lq_tmp_x_311:=lq_tmp_x_349][lq_tmp_x_359:=lq_tmp_x_349][lq_tmp_x_360:=VV#407]]}
bind 43 VV#410 : {VV#410 : [int] | [(len([VV#410]) >= 0)]}
bind 44 VV#410 : {VV#410 : [int] | [(len([VV#410]) >= 0)]}
bind 45 VV#413 : {VV#413 : int | []}
bind 46 VV#413 : {VV#413 : int | []}
bind 47 lq_tmp_x_311 : {VV#416 : int | []}
bind 48 VV#417 : {VV#417 : int | []}
bind 49 VV#417 : {VV#417 : int | []}
bind 50 VV#420 : {VV#420 : int | [(VV#420 = lq_anf__d1aW)]}
bind 51 VV#420 : {VV#420 : int | [(VV#420 = lq_anf__d1aW)]}
bind 52 VV#423 : {VV#423 : int | [(VV#423 = lq_anf__d1aV)]}
bind 53 VV#423 : {VV#423 : int | [(VV#423 = lq_anf__d1aV)]}
bind 54 VV#426 : {VV#426 : int | [(VV#426 = 100)]}
bind 55 VV#426 : {VV#426 : int | [(VV#426 = 100)]}
bind 56 VV#429 : {VV#429 : int | [(VV#429 = 1)]}
bind 57 VV#429 : {VV#429 : int | [(VV#429 = 1)]}
bind 58 VV#432 : {VV#432 : int | [(VV#432 = (1  :  int))]}
bind 59 VV#432 : {VV#432 : int | [(VV#432 = (1  :  int))]}
bind 60 VV#435 : {VV#435 : [a_a1at] | [(VV#435 = ns#a1ak);
                                       (len([VV#435]) >= 0)]}
bind 61 VV#435 : {VV#435 : [a_a1at] | [(VV#435 = ns#a1ak);
                                       (len([VV#435]) >= 0)]}
bind 62 VV#240 : {VV#240 : a_a1at | [$k__241[VV#247:=lq_anf__d1aU][lq_tmp_x_255:=lq_anf__d1aU][lq_tmp_x_271:=lq_anf__d1aU][lq_tmp_x_278:=n#a1aj][lq_tmp_x_281:=VV#435][lq_tmp_x_306:=VV#435];
                                     $k__245[lq_tmp_x_243:=n#a1aj][lq_tmp_x_254:=n#a1aj][lq_tmp_x_270:=n#a1aj][VV#244:=VV#240][lq_tmp_x_278:=n#a1aj][lq_tmp_x_281:=VV#435][lq_tmp_x_306:=VV#435]]}
bind 63 lq_tmp_x_303 : {VV : a_a1at | []}
bind 64 VV#240 : {VV#240 : a_a1at | [$k__245[lq_tmp_x_243:=lq_tmp_x_303][lq_tmp_x_254:=lq_tmp_x_303][lq_tmp_x_270:=lq_tmp_x_303][VV#244:=VV#240][lq_tmp_x_278:=n#a1aj][lq_tmp_x_280:=lq_tmp_x_303][lq_tmp_x_305:=lq_tmp_x_303]]}
bind 65 VV#441 : {VV#441 : int | [(VV#441 = (0  :  int))]}
bind 66 VV#441 : {VV#441 : int | [(VV#441 = (0  :  int))]}
bind 67 VV#444 : {VV#444 : int | [(VV#444 = 0)]}
bind 68 VV#444 : {VV#444 : int | [(VV#444 = 0)]}
bind 69 VV#447 : {VV#447 : int | [(VV#447 = 1)]}
bind 70 VV#447 : {VV#447 : int | [(VV#447 = 1)]}
bind 71 VV#354 : {VV#354 : int | [$k__355]}
bind 72 VV#346 : {VV#346 : GHC.Types.Bool | [$k__347]}
bind 73 VV#315 : {VV#315 : [int] | [$k__316; (len([VV#315]) >= 0)]}
bind 74 VV#308 : {VV#308 : int | [$k__309]}
bind 75 lq_tmp_x_311 : {VV#454 : int | []}
bind 76 VV#312 : {VV#312 : int | [$k__313]}
bind 77 VV#247 : {VV#247 : [a_a1at] | [$k__248;
                                       (len([VV#247]) >= 0)]}
bind 78 lq_tmp_x_243 : {VV : a_a1at | []}
bind 79 VV#300 : {VV#300 : [a_a1at] | [$k__301;
                                       (len([VV#300]) >= 0)]}
bind 80 lq_tmp_x_296 : {VV : a_a1at | []}
bind 81 VV#251 : {VV#251 : int | [$k__252]}




constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 26]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__347[VV#346:=VV#F1][VV#385:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : meas2.hs:18:9-33


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 24; 9; 28]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d1aY)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [4]
  // META constraint id 2 : meas2.hs:18:24-32


constraint:
  env [0; 1; 2; 3; 4; 36; 5; 21; 6; 7; 8; 9]
  grd true
  lhs {VV#F3 : [int] | [(VV#F3 = Meas.zs#r12i); (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [int] | [$k__248[VV#247:=VV#F3][lq_tmp_x_350:=VV#F3][VV#400:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : meas2.hs:19:18-19


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 37; 6; 38; 7; 8; 9]
  grd true
  lhs {VV#F4 : int | [$k__309[VV#308:=VV#F4][VV#315:=VV#400][lq_tmp_x_361:=VV#400][lq_tmp_x_358:=VV#F4][VV#403:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__355[VV#354:=VV#F4][lq_tmp_x_350:=VV#400][lq_tmp_x_357:=VV#F4][VV#403:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : meas2.hs:19:18-19


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 37; 6; 38; 7; 8; 9]
  grd true
  lhs {VV#F5 : int | [$k__309[VV#308:=VV#F5][VV#315:=VV#400][lq_tmp_x_361:=VV#400][lq_tmp_x_358:=VV#F5][VV#403:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__241[VV#247:=VV#400][VV#240:=VV#F5][lq_tmp_x_350:=VV#400][lq_tmp_x_357:=VV#F5][VV#403:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : meas2.hs:19:18-19


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 37; 6; 7; 8; 40; 9; 41]
  grd true
  lhs {VV#F6 : int | [$k__313[VV#312:=VV#F6][lq_tmp_x_311:=lq_tmp_x_349][lq_tmp_x_359:=lq_tmp_x_349][lq_tmp_x_360:=VV#F6][VV#407:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__245[lq_tmp_x_243:=lq_tmp_x_349][VV#244:=VV#F6][lq_tmp_x_357:=VV#F6][VV#407:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : meas2.hs:19:18-19


constraint:
  env [0; 1; 2; 3; 19; 4; 20; 5; 6; 7; 8; 9; 43]
  grd true
  lhs {VV#F7 : [int] | [(len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [int] | [$k__316[VV#315:=VV#F7][VV#410:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : meas2.hs:16:6-13


constraint:
  env [0; 1; 2; 3; 19; 4; 20; 5; 6; 7; 8; 9; 44; 45]
  grd true
  lhs {VV#F8 : int | []}
  rhs {VV#F8 : int | [$k__309[VV#315:=VV#410][VV#308:=VV#F8][VV#413:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : meas2.hs:16:6-13


constraint:
  env [0; 48; 1; 2; 3; 19; 4; 20; 5; 6; 7; 8; 9; 44; 47]
  grd true
  lhs {VV#F9 : int | []}
  rhs {VV#F9 : int | [$k__313[VV#312:=VV#F9][VV#417:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : meas2.hs:16:6-13


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 58; 11; 12; 15]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = (1  :  int))]}
  rhs {VV#F10 : int | [$k__252[VV#251:=VV#F10][VV#432:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [3]
  // META constraint id 10 : meas2.hs:13:22-27


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 11; 12; 60; 15]
  grd true
  lhs {VV#F11 : [a_a1at] | [(VV#F11 = ns#a1ak);
                            (len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [a_a1at] | [$k__301[VV#300:=VV#F11][lq_tmp_x_304:=VV#F11][VV#435:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [3]
  // META constraint id 11 : meas2.hs:13:26-27


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 11; 12; 60; 15]
  grd true
  lhs {VV#F12 : [a_a1at] | [(VV#F12 = ns#a1ak);
                            (len([VV#F12]) >= 0)]}
  rhs {VV#F12 : [a_a1at] | [$k__231[VV#230:=VV#F12][lq_tmp_x_304:=VV#F12][VV#435:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [3]
  // META constraint id 12 : meas2.hs:13:26-27


constraint:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 11; 12; 61; 62; 15]
  grd true
  lhs {VV#F13 : a_a1at | [$k__241[VV#247:=lq_anf__d1aU][lq_tmp_x_255:=lq_anf__d1aU][lq_tmp_x_271:=lq_anf__d1aU][lq_tmp_x_278:=n#a1aj][lq_tmp_x_281:=VV#435][lq_tmp_x_306:=VV#435][VV#240:=VV#F13][VV#F:=VV#F13];
                          $k__245[lq_tmp_x_243:=n#a1aj][lq_tmp_x_254:=n#a1aj][lq_tmp_x_270:=n#a1aj][VV#244:=VV#F13][lq_tmp_x_278:=n#a1aj][lq_tmp_x_281:=VV#435][lq_tmp_x_306:=VV#435][VV#240:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : a_a1at | [$k__294[VV#300:=VV#435][lq_tmp_x_304:=VV#435][VV#293:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [3]
  // META constraint id 13 : meas2.hs:13:26-27


constraint:
  env [0;
       16;
       64;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       11;
       12;
       61;
       15;
       63]
  grd true
  lhs {VV#F14 : a_a1at | [$k__245[lq_tmp_x_243:=lq_tmp_x_303][lq_tmp_x_254:=lq_tmp_x_303][lq_tmp_x_270:=lq_tmp_x_303][VV#244:=VV#F14][lq_tmp_x_278:=n#a1aj][lq_tmp_x_280:=lq_tmp_x_303][lq_tmp_x_305:=lq_tmp_x_303][VV#240:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : a_a1at | [$k__298[lq_tmp_x_296:=lq_tmp_x_303][VV#297:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [3]
  // META constraint id 14 : meas2.hs:13:26-27


constraint:
  env [0; 1; 65; 2; 3; 4; 5; 6; 7; 8; 9; 11; 12; 13; 14]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = (0  :  int))]}
  rhs {VV#F15 : int | [$k__252[VV#251:=VV#F15][VV#441:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [3]
  // META constraint id 15 : meas2.hs:12:22




wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 9]
  reft {VV#354 : int | [$k__355]}
  
  // META wf  : meas2.hs:19:14-16


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 9]
  reft {VV#346 : GHC.Types.Bool | [$k__347]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#315 : [int] | [$k__316]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 73]
  reft {VV#308 : int | [$k__309]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 75]
  reft {VV#312 : int | [$k__313]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#247 : [a_a1at] | [$k__248]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 77]
  reft {VV#240 : a_a1at | [$k__241]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 78]
  reft {VV#244 : a_a1at | [$k__245]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 11; 12; 15]
  reft {VV#300 : [a_a1at] | [$k__301]}
  
  // META wf  : meas2.hs:13:22-24


wf:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 11; 12; 15; 79]
  reft {VV#293 : a_a1at | [$k__294]}
  
  // META wf  : meas2.hs:13:22-24


wf:
  env [0; 16; 80; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 11; 12; 15]
  reft {VV#297 : a_a1at | [$k__298]}
  
  // META wf  : meas2.hs:13:22-24


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11]
  reft {VV#251 : int | [$k__252]}
  
  // META wf  : meas2.hs:(11,10)-(13,27)


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#230 : a_a1aB | [$k__231]}
  
  // META wf  : <no location info>







