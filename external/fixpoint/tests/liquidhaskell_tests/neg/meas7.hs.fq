qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v = 0) // "meas7.hs" (line 14, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v = 0) // "meas7.hs" (line 14, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)


cut $k__181
cut $k__171
cut $k__175
cut $k__178


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant strLen : (func(0, [int; int]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Prim.void##0l : {VV#133 : GHC.Prim.Void# | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#138 : (GHC.Num.Num  int) | []}
bind 3 GHC.Types.EQ#6U : {VV#139 : GHC.Types.Ordering | [(VV#139 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#140 : GHC.Types.Ordering | [(VV#140 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#141 : GHC.Types.Ordering | [(VV#141 = GHC.Types.GT#6W)]}
bind 6 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 7 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 8 GHC.Types.EQ#6U : {VV#164 : GHC.Types.Ordering | [(cmp([VV#164]) = GHC.Types.EQ#6U)]}
bind 9 GHC.Types.LT#6S : {VV#165 : GHC.Types.Ordering | [(cmp([VV#165]) = GHC.Types.LT#6S)]}
bind 10 GHC.Types.GT#6W : {VV#166 : GHC.Types.Ordering | [(cmp([VV#166]) = GHC.Types.GT#6W)]}
bind 11 ds_dMb : {VV#177 : [a_aLZ] | [$k__178;
                                      (len([VV#177]) >= 0)]}
bind 12 lq_anf__dMg : {lq_tmp_x_188 : [a_aLZ] | [(lq_tmp_x_188 = ds_dMb);
                                                 (len([lq_tmp_x_188]) >= 0)]}
bind 13 lq_anf__dMg : {lq_tmp_x_191 : [a_aLZ] | [(lq_tmp_x_191 = ds_dMb);
                                                 (len([lq_tmp_x_191]) >= 0);
                                                 (len([lq_tmp_x_191]) >= 0)]}
bind 14 lq_anf__dMg : {lq_tmp_x_191 : [a_aLZ] | [(lq_tmp_x_191 = ds_dMb);
                                                 (len([lq_tmp_x_191]) >= 0);
                                                 (len([lq_tmp_x_191]) = 0);
                                                 ((? null([lq_tmp_x_191])) <=> true);
                                                 (lq_tmp_x_191 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (len([lq_tmp_x_191]) = 0);
                                                 ((? null([lq_tmp_x_191])) <=> true);
                                                 (len([lq_tmp_x_191]) >= 0)]}
bind 15 lq_anf__dMg : {lq_tmp_x_204 : [a_aLZ] | [(lq_tmp_x_204 = ds_dMb);
                                                 (len([lq_tmp_x_204]) >= 0);
                                                 (len([lq_tmp_x_204]) >= 0)]}
bind 16 ds_dMc : {VV : a_aLZ | [$k__171[VV#170:=VV][VV#177:=lq_anf__dMg][lq_tmp_x_188:=lq_anf__dMg][lq_tmp_x_204:=lq_anf__dMg]]}
bind 17 xs#aLI : {lq_tmp_x_214 : [a_aLZ] | [(len([lq_tmp_x_214]) >= 0)]}
bind 18 lq_anf__dMg : {lq_tmp_x_204 : [a_aLZ] | [(lq_tmp_x_204 = ds_dMb);
                                                 (len([lq_tmp_x_204]) >= 0);
                                                 (len([lq_tmp_x_204]) = (1 + len([xs#aLI])));
                                                 ((? null([lq_tmp_x_204])) <=> false);
                                                 (xsListSelector([lq_tmp_x_204]) = xs#aLI);
                                                 (xListSelector([lq_tmp_x_204]) = ds_dMc);
                                                 (lq_tmp_x_204 = fix#GHC.Types.#58##35#64([ds_dMc;
                                                                                           xs#aLI]));
                                                 (len([lq_tmp_x_204]) = (1 + len([xs#aLI])));
                                                 ((? null([lq_tmp_x_204])) <=> false);
                                                 (xsListSelector([lq_tmp_x_204]) = xs#aLI);
                                                 (xListSelector([lq_tmp_x_204]) = ds_dMc);
                                                 (len([lq_tmp_x_204]) >= 0)]}
bind 19 lq_anf__dMh : {lq_tmp_x_224 : int | [(lq_tmp_x_224 = (1  :  int))]}
bind 20 lq_anf__dMi : {VV#180 : int | [$k__181[ds_dMb:=xs#aLI][lq_tmp_x_183:=xs#aLI][lq_tmp_x_184:=xs#aLI]]}
bind 21 zs#aLJ : {VV#254 : [a_aLR] | [(len([VV#254]) >= 0)]}
bind 22 lq_anf__dMj : {lq_tmp_x_256 : [a_aLR] | [(lq_tmp_x_256 = zs#aLJ);
                                                 (len([lq_tmp_x_256]) >= 0)]}
bind 23 lq_anf__dMj : {lq_tmp_x_259 : [a_aLR] | [(lq_tmp_x_259 = zs#aLJ);
                                                 (len([lq_tmp_x_259]) >= 0);
                                                 (len([lq_tmp_x_259]) >= 0)]}
bind 24 lq_anf__dMj : {lq_tmp_x_259 : [a_aLR] | [(lq_tmp_x_259 = zs#aLJ);
                                                 (len([lq_tmp_x_259]) >= 0);
                                                 (len([lq_tmp_x_259]) = 0);
                                                 ((? null([lq_tmp_x_259])) <=> true);
                                                 (lq_tmp_x_259 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (len([lq_tmp_x_259]) = 0);
                                                 ((? null([lq_tmp_x_259])) <=> true);
                                                 (len([lq_tmp_x_259]) >= 0)]}
bind 25 lq_anf__dMj : {lq_tmp_x_272 : [a_aLR] | [(lq_tmp_x_272 = zs#aLJ);
                                                 (len([lq_tmp_x_272]) >= 0);
                                                 (len([lq_tmp_x_272]) >= 0)]}
bind 26 lq_anf__dMk : {VV : a_aLR | []}
bind 27 lq_anf__dMl : {lq_tmp_x_282 : [a_aLR] | [(len([lq_tmp_x_282]) >= 0)]}
bind 28 lq_anf__dMj : {lq_tmp_x_272 : [a_aLR] | [(lq_tmp_x_272 = zs#aLJ);
                                                 (len([lq_tmp_x_272]) >= 0);
                                                 (len([lq_tmp_x_272]) = (1 + len([lq_anf__dMl])));
                                                 ((? null([lq_tmp_x_272])) <=> false);
                                                 (xsListSelector([lq_tmp_x_272]) = lq_anf__dMl);
                                                 (xListSelector([lq_tmp_x_272]) = lq_anf__dMk);
                                                 (lq_tmp_x_272 = fix#GHC.Types.#58##35#64([lq_anf__dMk;
                                                                                           lq_anf__dMl]));
                                                 (len([lq_tmp_x_272]) = (1 + len([lq_anf__dMl])));
                                                 ((? null([lq_tmp_x_272])) <=> false);
                                                 (xsListSelector([lq_tmp_x_272]) = lq_anf__dMl);
                                                 (xListSelector([lq_tmp_x_272]) = lq_anf__dMk);
                                                 (len([lq_tmp_x_272]) >= 0)]}
bind 29 ds_dMf : {VV#291 : GHC.Prim.Void# | [$k__292]}
bind 30 VV#307 : {VV#307 : int | [$k__181[ds_dMb:=zs#aLJ][lq_tmp_x_183:=zs#aLJ][VV#180:=VV#307][lq_tmp_x_184:=zs#aLJ][lq_tmp_x_299:=zs#aLJ][ds_dMf:=GHC.Prim.void##0l][lq_tmp_x_297:=VV#307]]}
bind 31 VV#307 : {VV#307 : int | [$k__181[ds_dMb:=zs#aLJ][lq_tmp_x_183:=zs#aLJ][VV#180:=VV#307][lq_tmp_x_184:=zs#aLJ][lq_tmp_x_299:=zs#aLJ][ds_dMf:=GHC.Prim.void##0l][lq_tmp_x_297:=VV#307]]}
bind 32 VV#310 : {VV#310 : GHC.Prim.Void# | [(VV#310 = GHC.Prim.void##0l)]}
bind 33 VV#310 : {VV#310 : GHC.Prim.Void# | [(VV#310 = GHC.Prim.void##0l)]}
bind 34 VV#313 : {VV#313 : [a_aLR] | [(VV#313 = zs#aLJ);
                                      (len([VV#313]) >= 0)]}
bind 35 VV#313 : {VV#313 : [a_aLR] | [(VV#313 = zs#aLJ);
                                      (len([VV#313]) >= 0)]}
bind 36 VV : {VV : a_aLR | []}
bind 37 lq_tmp_x_295 : {VV : a_aLR | []}
bind 38 VV : {VV : a_aLR | []}
bind 39 VV#319 : {VV#319 : int | [(VV#319 = (0  :  int))]}
bind 40 VV#319 : {VV#319 : int | [(VV#319 = (0  :  int))]}
bind 41 VV#322 : {VV#322 : int | [(VV#322 = 0)]}
bind 42 VV#322 : {VV#322 : int | [(VV#322 = 0)]}
bind 43 VV#325 : {VV#325 : int | [(VV#325 = (lq_anf__dMh + lq_anf__dMi))]}
bind 44 VV#325 : {VV#325 : int | [(VV#325 = (lq_anf__dMh + lq_anf__dMi))]}
bind 45 VV#328 : {VV#328 : int | [(VV#328 = lq_anf__dMi)]}
bind 46 VV#328 : {VV#328 : int | [(VV#328 = lq_anf__dMi)]}
bind 47 VV#331 : {VV#331 : int | [(VV#331 = lq_anf__dMh)]}
bind 48 VV#331 : {VV#331 : int | [(VV#331 = lq_anf__dMh)]}
bind 49 VV#334 : {VV#334 : [a_aLZ] | [(VV#334 = xs#aLI);
                                      (len([VV#334]) >= 0)]}
bind 50 VV#334 : {VV#334 : [a_aLZ] | [(VV#334 = xs#aLI);
                                      (len([VV#334]) >= 0)]}
bind 51 VV : {VV : a_aLZ | [$k__171[VV#170:=VV][VV#177:=lq_anf__dMg][lq_tmp_x_188:=lq_anf__dMg][lq_tmp_x_204:=lq_anf__dMg][lq_tmp_x_211:=ds_dMc][lq_tmp_x_214:=VV#334][lq_tmp_x_238:=VV#334];
                            $k__175[VV#174:=VV][lq_tmp_x_173:=ds_dMc][lq_tmp_x_187:=ds_dMc][lq_tmp_x_203:=ds_dMc][lq_tmp_x_211:=ds_dMc][lq_tmp_x_214:=VV#334][lq_tmp_x_238:=VV#334]]}
bind 52 lq_tmp_x_173 : {VV : a_aLZ | []}
bind 53 VV : {VV : a_aLZ | [$k__175[VV#174:=VV][lq_tmp_x_173:=lq_tmp_x_173][lq_tmp_x_187:=lq_tmp_x_173][lq_tmp_x_203:=lq_tmp_x_173][lq_tmp_x_211:=ds_dMc][lq_tmp_x_213:=lq_tmp_x_173][lq_tmp_x_237:=lq_tmp_x_173]]}
bind 54 VV#340 : {VV#340 : int | [(VV#340 = 1)]}
bind 55 VV#340 : {VV#340 : int | [(VV#340 = 1)]}
bind 56 VV#343 : {VV#343 : int | [(VV#343 = (0  :  int))]}
bind 57 VV#343 : {VV#343 : int | [(VV#343 = (0  :  int))]}
bind 58 VV#346 : {VV#346 : int | [(VV#346 = 0)]}
bind 59 VV#346 : {VV#346 : int | [(VV#346 = 0)]}
bind 60 VV#291 : {VV#291 : GHC.Prim.Void# | [$k__292]}
bind 61 VV#177 : {VV#177 : [a_aLZ] | [$k__178;
                                      (len([VV#177]) >= 0)]}
bind 62 lq_tmp_x_173 : {VV : a_aLZ | []}
bind 63 ds_dMb : {VV#177 : [a_aLZ] | [$k__178;
                                      (len([VV#177]) >= 0)]}
bind 64 VV#180 : {VV#180 : int | [$k__181]}




constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 25; 10; 26; 27; 28; 30]
  grd true
  lhs {VV#F1 : int | [$k__181[ds_dMb:=zs#aLJ][lq_tmp_x_183:=zs#aLJ][VV#180:=VV#F1][lq_tmp_x_184:=zs#aLJ][lq_tmp_x_299:=zs#aLJ][ds_dMf:=GHC.Prim.void##0l][lq_tmp_x_297:=VV#F1][VV#307:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : int | [(VV#F1 = 0)]}
  id 1 tag [2]
  // META constraint id 1 : meas7.hs:(14,10)-(16,25)


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 25; 10; 26; 27; 28]
  grd true
  lhs {VV#F2 : GHC.Prim.Void# | [(VV#F2 = GHC.Prim.void##0l)]}
  rhs {VV#F2 : GHC.Prim.Void# | [$k__292[VV#291:=VV#F2][VV#310:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : meas7.hs:(14,10)-(16,25)


constraint:
  env [0;
       1;
       2;
       34;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       25;
       10;
       26;
       27;
       28;
       29]
  grd true
  lhs {VV#F3 : [a_aLR] | [(VV#F3 = zs#aLJ); (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [a_aLR] | [$k__178[VV#177:=VV#F3][lq_tmp_x_296:=VV#F3][VV#313:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : meas7.hs:16:24-25


constraint:
  env [0;
       1;
       2;
       3;
       35;
       4;
       36;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       25;
       10;
       26;
       27;
       28;
       29]
  grd true
  lhs {VV#F4 : a_aLR | []}
  rhs {VV#F4 : a_aLR | [$k__301[lq_tmp_x_296:=VV#313][VV#300:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : meas7.hs:16:24-25


constraint:
  env [0;
       1;
       2;
       3;
       35;
       4;
       36;
       5;
       21;
       6;
       22;
       7;
       8;
       9;
       25;
       10;
       26;
       27;
       28;
       29]
  grd true
  lhs {VV#F5 : a_aLR | []}
  rhs {VV#F5 : a_aLR | [$k__171[VV#177:=VV#313][VV#170:=VV#F5][lq_tmp_x_296:=VV#313][VV#300:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : meas7.hs:16:24-25


constraint:
  env [0;
       1;
       2;
       3;
       35;
       4;
       5;
       21;
       37;
       6;
       22;
       38;
       7;
       8;
       9;
       25;
       10;
       26;
       27;
       28;
       29]
  grd true
  lhs {VV#F6 : a_aLR | []}
  rhs {VV#F6 : a_aLR | [$k__175[lq_tmp_x_173:=lq_tmp_x_295][VV#174:=VV#F6][VV#300:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : meas7.hs:16:24-25


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 39; 8; 24; 9; 10]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = (0  :  int))]}
  rhs {VV#F7 : int | [(VV#F7 = 0)]}
  id 7 tag [2]
  // META constraint id 7 : meas7.hs:15:18


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       43;
       12;
       15]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = (lq_anf__dMh + lq_anf__dMi))]}
  rhs {VV#F8 : int | [$k__181[ds_dMb:=ds_dMb][lq_tmp_x_183:=ds_dMb][lq_tmp_x_184:=ds_dMb][VV#180:=VV#F8][VV#325:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : meas7.hs:9:18-29


constraint:
  env [0;
       16;
       1;
       17;
       49;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F9 : [a_aLZ] | [(VV#F9 = xs#aLI); (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [a_aLZ] | [$k__178[VV#177:=VV#F9][VV#334:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : meas7.hs:9:28-29


constraint:
  env [0;
       16;
       1;
       17;
       49;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F10 : [a_aLZ] | [(VV#F10 = xs#aLI); (len([VV#F10]) >= 0)]}
  rhs {VV#F10 : [a_aLZ] | [(len([VV#F10]) < len([ds_dMb]))]}
  id 10 tag [1]
  // META constraint id 10 : meas7.hs:9:28-29


constraint:
  env [0;
       16;
       1;
       17;
       49;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F11 : [a_aLZ] | [(VV#F11 = xs#aLI); (len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [a_aLZ] | [(len([VV#F11]) >= 0)]}
  id 11 tag [1]
  // META constraint id 11 : meas7.hs:9:28-29


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       50;
       3;
       19;
       51;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F12 : a_aLZ | [$k__171[VV#170:=VV#F12][VV#177:=lq_anf__dMg][lq_tmp_x_188:=lq_anf__dMg][lq_tmp_x_204:=lq_anf__dMg][lq_tmp_x_211:=ds_dMc][lq_tmp_x_214:=VV#334][lq_tmp_x_238:=VV#334][VV:=VV#F12][VV#F:=VV#F12];
                         $k__175[VV#174:=VV#F12][lq_tmp_x_173:=ds_dMc][lq_tmp_x_187:=ds_dMc][lq_tmp_x_203:=ds_dMc][lq_tmp_x_211:=ds_dMc][lq_tmp_x_214:=VV#334][lq_tmp_x_238:=VV#334][VV:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : a_aLZ | [$k__235[VV#177:=VV#334][VV#234:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : meas7.hs:9:28-29


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       50;
       3;
       19;
       51;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F13 : a_aLZ | [$k__171[VV#170:=VV#F13][VV#177:=lq_anf__dMg][lq_tmp_x_188:=lq_anf__dMg][lq_tmp_x_204:=lq_anf__dMg][lq_tmp_x_211:=ds_dMc][lq_tmp_x_214:=VV#334][lq_tmp_x_238:=VV#334][VV:=VV#F13][VV#F:=VV#F13];
                         $k__175[VV#174:=VV#F13][lq_tmp_x_173:=ds_dMc][lq_tmp_x_187:=ds_dMc][lq_tmp_x_203:=ds_dMc][lq_tmp_x_211:=ds_dMc][lq_tmp_x_214:=VV#334][lq_tmp_x_238:=VV#334][VV:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : a_aLZ | [$k__171[VV#170:=VV#F13][VV#177:=VV#334][VV#234:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : meas7.hs:9:28-29


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       50;
       3;
       19;
       4;
       52;
       5;
       53;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F14 : a_aLZ | [$k__175[VV#174:=VV#F14][lq_tmp_x_173:=lq_tmp_x_173][lq_tmp_x_187:=lq_tmp_x_173][lq_tmp_x_203:=lq_tmp_x_173][lq_tmp_x_211:=ds_dMc][lq_tmp_x_213:=lq_tmp_x_173][lq_tmp_x_237:=lq_tmp_x_173][VV:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : a_aLZ | [$k__175[VV#174:=VV#F14][VV#234:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : meas7.hs:9:28-29


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 56; 9; 10; 11; 12; 13; 14]
  grd true
  lhs {VV#F15 : int | [(VV#F15 = (0  :  int))]}
  rhs {VV#F15 : int | [$k__181[ds_dMb:=ds_dMb][lq_tmp_x_183:=ds_dMb][lq_tmp_x_184:=ds_dMb][VV#180:=VV#F15][VV#343:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : meas7.hs:8:18




wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 25; 10; 26; 27; 28]
  reft {VV#291 : GHC.Prim.Void# | [$k__292]}
  
  // META wf  : meas7.hs:(14,10)-(16,25)


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 25; 10; 26; 27; 28; 29]
  reft {VV#300 : a_aLR | [$k__301]}
  
  // META wf  : meas7.hs:16:18-22


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 10; 11; 12; 15]
  reft {VV#234 : a_aLZ | [$k__235]}
  
  // META wf  : meas7.hs:9:22-26


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#177 : [a_aLZ] | [$k__178]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 61]
  reft {VV#170 : a_aLZ | [$k__171]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 62]
  reft {VV#174 : a_aLZ | [$k__175]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 63]
  reft {VV#180 : int | [$k__181]}
  
  // META wf  : <no location info>







