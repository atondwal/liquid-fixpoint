qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 GHC.Types.False#68 : {VV#178 : GHC.Types.Bool | []}
bind 1 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 2 GHC.Types.True#6u : {VV#181 : GHC.Types.Bool | []}
bind 3 GHC.Types.EQ#6U : {VV#187 : GHC.Types.Ordering | [(VV#187 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#188 : GHC.Types.Ordering | [(VV#188 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#189 : GHC.Types.Ordering | [(VV#189 = GHC.Types.GT#6W)]}
bind 6 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 7 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 8 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 9 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 10 GHC.Types.EQ#6U : {VV#232 : GHC.Types.Ordering | [(cmp([VV#232]) = GHC.Types.EQ#6U)]}
bind 11 GHC.Types.LT#6S : {VV#233 : GHC.Types.Ordering | [(cmp([VV#233]) = GHC.Types.LT#6S)]}
bind 12 GHC.Types.GT#6W : {VV#234 : GHC.Types.Ordering | [(cmp([VV#234]) = GHC.Types.GT#6W)]}
bind 13 lq_anf__d14c : {lq_tmp_x_242 : int | [(lq_tmp_x_242 = (0  :  int))]}
bind 14 Poly0.x#r12i : {VV#238 : int | [$k__239]}
bind 15 x#a13u : {VV#253 : t_a13J | [$k__254]}
bind 16 y#a13v : {VV#257 : t_a13K | [$k__258]}
bind 17 x#a13t : {VV#262 : int | [$k__263]}
bind 18 lq_anf__d14d : {lq_tmp_x_270 : int | [(lq_tmp_x_270 = (0  :  int))]}
bind 19 lq_anf__d14e : {lq_tmp_x_277 : GHC.Types.Bool | [((? Prop([lq_tmp_x_277])) <=> (x#a13t > lq_anf__d14d))]}
bind 20 lq_anf__d14f : {lq_tmp_x_285 : GHC.Types.Bool | [(lq_tmp_x_285 = lq_anf__d14e)]}
bind 21 lq_anf__d14f : {lq_tmp_x_287 : GHC.Types.Bool | [(lq_tmp_x_287 = lq_anf__d14e)]}
bind 22 lq_anf__d14f : {lq_tmp_x_287 : GHC.Types.Bool | [(lq_tmp_x_287 = lq_anf__d14e);
                                                         (~ ((? Prop([lq_tmp_x_287]))));
                                                         (~ ((? Prop([lq_tmp_x_287]))));
                                                         (~ ((? Prop([lq_tmp_x_287]))))]}
bind 23 lq_anf__d14g : {lq_tmp_x_293 : int | [(lq_tmp_x_293 = (0  :  int))]}
bind 24 lq_anf__d14f : {lq_tmp_x_307 : GHC.Types.Bool | [(lq_tmp_x_307 = lq_anf__d14e)]}
bind 25 lq_anf__d14f : {lq_tmp_x_307 : GHC.Types.Bool | [(lq_tmp_x_307 = lq_anf__d14e);
                                                         (? Prop([lq_tmp_x_307]));
                                                         (? Prop([lq_tmp_x_307]));
                                                         (? Prop([lq_tmp_x_307]))]}
bind 26 lq_tmp_x_333 : {VV#334 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | []}
bind 27 lq_anf__d14h : {lq_tmp_x_318 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [(len([lq_tmp_x_318]) = 0);
                                                                              ((? null([lq_tmp_x_318])) <=> true);
                                                                              (len([lq_tmp_x_318]) >= 0)]}
bind 28 lq_anf__d14j : {lq_tmp_x_374 : int | [$k__267[VV#266:=lq_tmp_x_374][x#a13t:=Poly0.x#r12i][lq_tmp_x_376:=Poly0.x#r12i]]}
bind 29 fix#x#39##35#a13w : {lq_tmp_x_392 : int | [$k__390[VV#389:=lq_tmp_x_392][lq_tmp_x_383:=lq_anf__d14i][lq_tmp_x_384:=lq_anf__d14j]]}
bind 30 lq_anf__d14k : {lq_tmp_x_400 : int | [(lq_tmp_x_400 = (10  :  int))]}
bind 31 lq_anf__d14l : {lq_tmp_x_407 : GHC.Types.Bool | [((? Prop([lq_tmp_x_407])) <=> (fix#x#39##35#a13w >= lq_anf__d14k))]}
bind 32 Poly0.prop_id6#r12j : {VV#314 : GHC.Types.Bool | [$k__315]}
bind 33 VV#421 : {VV#421 : GHC.Types.Bool | [(? Prop([VV#421]))]}
bind 34 VV#421 : {VV#421 : GHC.Types.Bool | [(? Prop([VV#421]))]}
bind 35 VV#424 : {VV#424 : GHC.Types.Bool | [(VV#424 = lq_anf__d14l)]}
bind 36 VV#424 : {VV#424 : GHC.Types.Bool | [(VV#424 = lq_anf__d14l)]}
bind 37 VV#427 : {VV#427 : int | [(VV#427 = lq_anf__d14k)]}
bind 38 VV#427 : {VV#427 : int | [(VV#427 = lq_anf__d14k)]}
bind 39 VV#430 : {VV#430 : int | [(VV#430 = fix#x#39##35#a13w)]}
bind 40 VV#430 : {VV#430 : int | [(VV#430 = fix#x#39##35#a13w)]}
bind 41 VV#433 : {VV#433 : int | [(VV#433 = 10)]}
bind 42 VV#433 : {VV#433 : int | [(VV#433 = 10)]}
bind 43 VV#436 : {VV#436 : int | [(VV#436 = lq_anf__d14j)]}
bind 44 VV#436 : {VV#436 : int | [(VV#436 = lq_anf__d14j)]}
bind 45 VV#440 : {VV#440 : int | [$k__386[VV#385:=VV#440][lq_tmp_x_388:=VV#440]]}
bind 46 VV#440 : {VV#440 : int | [$k__386[VV#385:=VV#440][lq_tmp_x_388:=VV#440]]}
bind 47 lq_tmp_x_382 : {lq_tmp_x_388 : int | [$k__386[VV#385:=lq_tmp_x_388]]}
bind 48 VV#444 : {VV#444 : int | [$k__363[VV#362:=VV#444][lq_tmp_x_338:=lq_anf__d14h][lq_tmp_x_365:=VV#444][lq_tmp_x_339:=lq_tmp_x_382][lq_tmp_x_396:=lq_tmp_x_382][lq_tmp_x_394:=VV#444];
                                  (VV#444 = lq_tmp_x_382)]}
bind 49 VV#444 : {VV#444 : int | [$k__363[VV#362:=VV#444][lq_tmp_x_338:=lq_anf__d14h][lq_tmp_x_365:=VV#444][lq_tmp_x_339:=lq_tmp_x_382][lq_tmp_x_396:=lq_tmp_x_382][lq_tmp_x_394:=VV#444];
                                  (VV#444 = lq_tmp_x_382)]}
bind 50 VV#447 : {VV#447 : int | [(VV#447 = Poly0.x#r12i)]}
bind 51 VV#447 : {VV#447 : int | [(VV#447 = Poly0.x#r12i)]}
bind 52 VV#450 : {VV#450 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [(VV#450 = lq_anf__d14h);
                                                                  (len([VV#450]) >= 0)]}
bind 53 VV#450 : {VV#450 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [(VV#450 = lq_anf__d14h);
                                                                  (len([VV#450]) >= 0)]}
bind 54 VV#453 : {VV#453 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__323[VV#322:=VV#453][lq_tmp_x_326:=VV#453][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#453]]}
bind 55 VV#453 : {VV#453 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__323[VV#322:=VV#453][lq_tmp_x_326:=VV#453][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#453]]}
bind 56 VV#456 : {VV#456 : fix#GHC.Prim.#42# | [$k__320[VV#319:=VV#456][VV#322:=VV#453][lq_tmp_x_325:=VV#456][lq_tmp_x_326:=VV#453][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#453][lq_tmp_x_366:=VV#456]]}
bind 57 VV#456 : {VV#456 : fix#GHC.Prim.#42# | [$k__320[VV#319:=VV#456][VV#322:=VV#453][lq_tmp_x_325:=VV#456][lq_tmp_x_326:=VV#453][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#453][lq_tmp_x_366:=VV#456]]}
bind 58 VV#459 : {VV#459 : fix#GHC.Prim.#42# | [$k__341[VV#340:=VV#459][VV#343:=VV#453][VV#353:=VV#450][lq_tmp_x_361:=VV#450][lq_tmp_x_357:=VV#453][lq_tmp_x_356:=VV#459]]}
bind 59 VV#459 : {VV#459 : fix#GHC.Prim.#42# | [$k__341[VV#340:=VV#459][VV#343:=VV#453][VV#353:=VV#450][lq_tmp_x_361:=VV#450][lq_tmp_x_357:=VV#453][lq_tmp_x_356:=VV#459]]}
bind 60 lq_tmp_x_358 : {VV#462 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | []}
bind 61 VV#463 : {VV#463 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__331[lq_tmp_x_333:=lq_tmp_x_358][VV#330:=VV#463][lq_tmp_x_326:=VV#463][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#463]]}
bind 62 VV#463 : {VV#463 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__331[lq_tmp_x_333:=lq_tmp_x_358][VV#330:=VV#463][lq_tmp_x_326:=VV#463][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#463]]}
bind 63 VV#466 : {VV#466 : fix#GHC.Prim.#42# | [$k__328[lq_tmp_x_333:=lq_tmp_x_358][VV#327:=VV#466][lq_tmp_x_325:=VV#466][lq_tmp_x_326:=VV#463][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#463][lq_tmp_x_369:=VV#466]]}
bind 64 VV#466 : {VV#466 : fix#GHC.Prim.#42# | [$k__328[lq_tmp_x_333:=lq_tmp_x_358][VV#327:=VV#466][lq_tmp_x_325:=VV#466][lq_tmp_x_326:=VV#463][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#463][lq_tmp_x_369:=VV#466]]}
bind 65 VV#469 : {VV#469 : fix#GHC.Prim.#42# | [$k__348[VV#347:=VV#469][VV#350:=VV#463][lq_tmp_x_346:=lq_tmp_x_358][lq_tmp_x_360:=VV#463][lq_tmp_x_359:=VV#469]]}
bind 66 VV#469 : {VV#469 : fix#GHC.Prim.#42# | [$k__348[VV#347:=VV#469][VV#350:=VV#463][lq_tmp_x_346:=lq_tmp_x_358][lq_tmp_x_360:=VV#463][lq_tmp_x_359:=VV#469]]}
bind 67 VV#472 : {VV#472 : int | [(VV#472 = x#a13t)]}
bind 68 VV#472 : {VV#472 : int | [(VV#472 = x#a13t)]}
bind 69 VV#475 : {VV#475 : int | [(VV#475 = (lq_anf__d14g - x#a13t))]}
bind 70 VV#475 : {VV#475 : int | [(VV#475 = (lq_anf__d14g - x#a13t))]}
bind 71 VV#478 : {VV#478 : int | [(VV#478 = x#a13t)]}
bind 72 VV#478 : {VV#478 : int | [(VV#478 = x#a13t)]}
bind 73 VV#481 : {VV#481 : int | [(VV#481 = lq_anf__d14g)]}
bind 74 VV#481 : {VV#481 : int | [(VV#481 = lq_anf__d14g)]}
bind 75 VV#484 : {VV#484 : int | [(VV#484 = 0)]}
bind 76 VV#484 : {VV#484 : int | [(VV#484 = 0)]}
bind 77 VV#487 : {VV#487 : int | [(VV#487 = lq_anf__d14d)]}
bind 78 VV#487 : {VV#487 : int | [(VV#487 = lq_anf__d14d)]}
bind 79 VV#490 : {VV#490 : int | [(VV#490 = x#a13t)]}
bind 80 VV#490 : {VV#490 : int | [(VV#490 = x#a13t)]}
bind 81 VV#493 : {VV#493 : int | [(VV#493 = 0)]}
bind 82 VV#493 : {VV#493 : int | [(VV#493 = 0)]}
bind 83 VV#496 : {VV#496 : int | []}
bind 84 VV#496 : {VV#496 : int | []}
bind 85 VV#499 : {VV#499 : int | [(VV#499 = lq_anf__d14c)]}
bind 86 VV#499 : {VV#499 : int | [(VV#499 = lq_anf__d14c)]}
bind 87 VV#502 : {VV#502 : int | [(VV#502 = 0)]}
bind 88 VV#502 : {VV#502 : int | [(VV#502 = 0)]}
bind 89 VV#389 : {VV#389 : int | [$k__390]}
bind 90 VV#385 : {VV#385 : int | [$k__386]}
bind 91 VV#362 : {VV#362 : int | [$k__363]}
bind 92 VV#353 : {VV#353 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [$k__354;
                                                                  (len([VV#353]) >= 0)]}
bind 93 VV#343 : {VV#343 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__344]}
bind 94 VV#340 : {VV#340 : fix#GHC.Prim.#42# | [$k__341]}
bind 95 lq_tmp_x_346 : {VV#511 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | []}
bind 96 VV#350 : {VV#350 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__351]}
bind 97 VV#347 : {VV#347 : fix#GHC.Prim.#42# | [$k__348]}
bind 98 VV#330 : {VV#330 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__331]}
bind 99 VV#327 : {VV#327 : fix#GHC.Prim.#42# | [$k__328]}
bind 100 VV#322 : {VV#322 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__323]}
bind 101 VV#319 : {VV#319 : fix#GHC.Prim.#42# | [$k__320]}
bind 102 VV#314 : {VV#314 : GHC.Types.Bool | [$k__315]}
bind 103 VV#262 : {VV#262 : int | [$k__263]}
bind 104 VV#266 : {VV#266 : int | [$k__267]}
bind 105 VV#238 : {VV#238 : int | [$k__239]}




constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       67;
       4;
       20;
       5;
       6;
       7;
       8;
       24;
       9;
       25;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = x#a13t)]}
  rhs {VV#F16 : int | [$k__267[VV#266:=VV#F16][VV#472:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [3]
  // META constraint id 16 : poly2.hs:5:31


constraint:
  env [0;
       1;
       33;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       27;
       12;
       28;
       29;
       14;
       30;
       31]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__315[VV#314:=VV#F1][VV#421:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : poly2.hs:13:12-38


constraint:
  env [0;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       69;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       14]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = (lq_anf__d14g - x#a13t))]}
  rhs {VV#F17 : int | [$k__267[VV#266:=VV#F17][VV#475:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [3]
  // META constraint id 17 : poly2.hs:5:38-48


constraint:
  env [0;
       1;
       2;
       3;
       35;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       27;
       12;
       28;
       29;
       14;
       30;
       31]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | [(VV#F2 = lq_anf__d14l)]}
  rhs {VV#F2 : GHC.Types.Bool | [(? Prop([VV#F2]))]}
  id 2 tag [4]
  // META constraint id 2 : poly2.hs:13:27-37


constraint:
  env [0; 1; 2; 3; 83; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  grd true
  lhs {VV#F18 : int | []}
  rhs {VV#F18 : int | [$k__239[VV#238:=VV#F18][VV#496:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [1]
  // META constraint id 18 : poly2.hs:11:5-12


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 43; 12; 28; 14]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = lq_anf__d14j)]}
  rhs {VV#F3 : int | [$k__386[VV#385:=VV#F3][lq_tmp_x_383:=lq_anf__d14i][lq_tmp_x_388:=VV#F3][VV#436:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : poly2.hs:14:25-31


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 45; 14]
  grd true
  lhs {VV#F4 : int | [$k__386[VV#385:=VV#F4][lq_tmp_x_388:=VV#F4][VV#440:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__363[VV#362:=VV#F4][lq_tmp_x_338:=lq_anf__d14h][lq_tmp_x_365:=VV#F4][lq_tmp_x_393:=VV#F4][VV#440:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : poly2.hs:14:14-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 45; 14]
  grd true
  lhs {VV#F5 : int | [$k__386[VV#385:=VV#F5][lq_tmp_x_388:=VV#F5][VV#440:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__258[x#a13u:=lq_anf__d14h][VV#257:=VV#F5][lq_tmp_x_338:=lq_anf__d14h][lq_tmp_x_365:=VV#F5][lq_tmp_x_393:=VV#F5][VV#440:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : poly2.hs:14:14-21


constraint:
  env [0; 48; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 14; 47]
  grd true
  lhs {VV#F6 : int | [$k__363[VV#362:=VV#F6][lq_tmp_x_338:=lq_anf__d14h][lq_tmp_x_365:=VV#F6][lq_tmp_x_339:=lq_tmp_x_382][lq_tmp_x_396:=lq_tmp_x_382][lq_tmp_x_394:=VV#F6][VV#444:=VV#F6][VV#F:=VV#F6];
                      (VV#F6 = lq_tmp_x_382)]}
  rhs {VV#F6 : int | [$k__390[VV#389:=VV#F6][lq_tmp_x_392:=VV#F6][VV#444:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : poly2.hs:14:14-21


constraint:
  env [0; 1; 2; 50; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = Poly0.x#r12i)]}
  rhs {VV#F7 : int | [$k__263[VV#262:=VV#F7][lq_tmp_x_373:=VV#F7][VV#447:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [4]
  // META constraint id 7 : poly2.hs:14:31


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14]
  grd true
  lhs {VV#F8 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [(VV#F8 = lq_anf__d14h);
                                                      (len([VV#F8]) >= 0)]}
  rhs {VV#F8 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [$k__354[VV#353:=VV#F8][lq_tmp_x_361:=VV#F8][VV#450:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [4]
  // META constraint id 8 : poly2.hs:14:20-21


constraint:
  env [0; 1; 2; 3; 4; 52; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14]
  grd true
  lhs {VV#F9 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [(VV#F9 = lq_anf__d14h);
                                                      (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [$k__254[VV#253:=VV#F9][lq_tmp_x_361:=VV#F9][VV#450:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [4]
  // META constraint id 9 : poly2.hs:14:20-21


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 54; 7; 8; 9; 10; 11; 27; 12; 14]
  grd true
  lhs {VV#F10 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__323[VV#322:=VV#F10][lq_tmp_x_326:=VV#F10][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#F10][VV#453:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__344[VV#343:=VV#F10][VV#353:=VV#450][lq_tmp_x_361:=VV#450][lq_tmp_x_357:=VV#F10][VV#453:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [4]
  // META constraint id 10 : poly2.hs:14:20-21


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 55; 8; 56; 9; 10; 11; 27; 12; 14]
  grd true
  lhs {VV#F11 : fix#GHC.Prim.#42# | [$k__320[VV#319:=VV#F11][VV#322:=VV#453][lq_tmp_x_325:=VV#F11][lq_tmp_x_326:=VV#453][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#453][lq_tmp_x_366:=VV#F11][VV#456:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : fix#GHC.Prim.#42# | [$k__341[VV#340:=VV#F11][VV#343:=VV#453][VV#353:=VV#450][lq_tmp_x_361:=VV#450][lq_tmp_x_357:=VV#453][lq_tmp_x_356:=VV#F11][VV#456:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [4]
  // META constraint id 11 : poly2.hs:14:20-21


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 55; 8; 9; 10; 58; 11; 27; 12; 14]
  grd true
  lhs {VV#F12 : fix#GHC.Prim.#42# | [$k__341[VV#340:=VV#F12][VV#343:=VV#453][VV#353:=VV#450][lq_tmp_x_361:=VV#450][lq_tmp_x_357:=VV#453][lq_tmp_x_356:=VV#F12][VV#459:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : fix#GHC.Prim.#42# | [$k__320[VV#319:=VV#F12][VV#322:=VV#453][lq_tmp_x_325:=VV#F12][lq_tmp_x_326:=VV#453][lq_tmp_x_318:=VV#450][lq_tmp_x_371:=VV#450][lq_tmp_x_367:=VV#453][lq_tmp_x_366:=VV#F12][VV#459:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [4]
  // META constraint id 12 : poly2.hs:14:20-21


constraint:
  env [0; 1; 2; 3; 4; 5; 53; 6; 7; 8; 9; 10; 11; 27; 12; 60; 61; 14]
  grd true
  lhs {VV#F13 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__331[lq_tmp_x_333:=lq_tmp_x_358][VV#330:=VV#F13][lq_tmp_x_326:=VV#F13][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#F13][VV#463:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__351[VV#350:=VV#F13][lq_tmp_x_346:=lq_tmp_x_358][lq_tmp_x_360:=VV#F13][VV#463:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [4]
  // META constraint id 13 : poly2.hs:14:20-21


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       53;
       6;
       7;
       8;
       9;
       10;
       11;
       27;
       12;
       60;
       14;
       62;
       63]
  grd true
  lhs {VV#F14 : fix#GHC.Prim.#42# | [$k__328[lq_tmp_x_333:=lq_tmp_x_358][VV#327:=VV#F14][lq_tmp_x_325:=VV#F14][lq_tmp_x_326:=VV#463][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#463][lq_tmp_x_369:=VV#F14][VV#466:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : fix#GHC.Prim.#42# | [$k__348[VV#347:=VV#F14][VV#350:=VV#463][lq_tmp_x_346:=lq_tmp_x_358][lq_tmp_x_360:=VV#463][lq_tmp_x_359:=VV#F14][VV#466:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [4]
  // META constraint id 14 : poly2.hs:14:20-21


constraint:
  env [0;
       1;
       65;
       2;
       3;
       4;
       5;
       53;
       6;
       7;
       8;
       9;
       10;
       11;
       27;
       12;
       60;
       14;
       62]
  grd true
  lhs {VV#F15 : fix#GHC.Prim.#42# | [$k__348[VV#347:=VV#F15][VV#350:=VV#463][lq_tmp_x_346:=lq_tmp_x_358][lq_tmp_x_360:=VV#463][lq_tmp_x_359:=VV#F15][VV#469:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : fix#GHC.Prim.#42# | [$k__328[lq_tmp_x_333:=lq_tmp_x_358][VV#327:=VV#F15][lq_tmp_x_325:=VV#F15][lq_tmp_x_326:=VV#463][lq_tmp_x_317:=lq_tmp_x_358][lq_tmp_x_368:=lq_tmp_x_358][lq_tmp_x_370:=VV#463][lq_tmp_x_369:=VV#F15][VV#469:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [4]
  // META constraint id 15 : poly2.hs:14:20-21




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 14]
  reft {VV#389 : int | [$k__390]}
  
  // META wf  : poly2.hs:14:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 14]
  reft {VV#385 : int | [$k__386]}
  
  // META wf  : poly2.hs:14:23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14]
  reft {VV#362 : int | [$k__363]}
  
  // META wf  : poly2.hs:14:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14]
  reft {VV#353 : [(GHC.Prim.Any  fix#GHC.Prim.#42#)] | [$k__354]}
  
  // META wf  : poly2.hs:14:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 92; 14]
  reft {VV#343 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__344]}
  
  // META wf  : poly2.hs:14:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 92; 93; 14]
  reft {VV#340 : fix#GHC.Prim.#42# | [$k__341]}
  
  // META wf  : poly2.hs:14:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14; 95]
  reft {VV#350 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__351]}
  
  // META wf  : poly2.hs:14:14-18


wf:
  env [0; 96; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 14; 95]
  reft {VV#347 : fix#GHC.Prim.#42# | [$k__348]}
  
  // META wf  : poly2.hs:14:14-18


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 14]
  reft {VV#330 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__331]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 98; 3; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 14]
  reft {VV#327 : fix#GHC.Prim.#42# | [$k__328]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#322 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__323]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 100; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#319 : fix#GHC.Prim.#42# | [$k__320]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#314 : GHC.Types.Bool | [$k__315]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#262 : int | [$k__263]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#266 : int | [$k__267]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14]
  reft {VV#253 : t_a13J | [$k__254]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 14; 15]
  reft {VV#257 : t_a13K | [$k__258]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#238 : int | [$k__239]}
  
  // META wf  : <no location info>







