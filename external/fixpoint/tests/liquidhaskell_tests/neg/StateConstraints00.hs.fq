qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_aNA): (? papp1([r;
                                   VV])) // "StateConstraints00.hs" (line 9, column 19)
qualif Auto(VV : a_aNA): (? papp1([r;
                                   VV])) // "StateConstraints00.hs" (line 9, column 19)
qualif Auto(VV : a_aO3, fix##126#A0 : a_aO3): (VV > fix##126#A0) // "StateConstraints00.hs" (line 30, column 1)
qualif Auto(VV : a_aOo, fix##126#A0 : a_aOo): (fix##126#A0 = VV) // "StateConstraints00.hs" (line 25, column 3)
qualif Auto(VV : a_apF): (? papp1([r;
                                   VV])) // "StateConstraints00.hs" (line 9, column 15)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_aNA): (? papp1([r;
                                   VV])) // "StateConstraints00.hs" (line 9, column 19)
qualif Auto(VV : a_aNA): (? papp1([r;
                                   VV])) // "StateConstraints00.hs" (line 9, column 19)
qualif Auto(VV : a_aO3, fix##126#A0 : a_aO3): (VV > fix##126#A0) // "StateConstraints00.hs" (line 30, column 1)
qualif Auto(VV : a_aOo, fix##126#A0 : a_aOo): (fix##126#A0 = VV) // "StateConstraints00.hs" (line 25, column 3)
qualif Auto(VV : a_apF): (? papp1([r;
                                   VV])) // "StateConstraints00.hs" (line 9, column 15)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant fix#GHC.Tuple.#40##44##41##35#74 : (func(2, [@(0);
                                                      @(1);
                                                      (Tuple  @(0)  @(1))]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#Compose.D#58#Foo#35#rq0 : (func(1, [func(1, [@(0);
                                                          (@(0)  @(0))]);
                                                 (Compose.Foo  @(0))]))
constant fix#GHC.Tuple.#40##44##41##35#74 : (func(2, [@(0);
                                                      @(1);
                                                      (Tuple  @(0)  @(1))]))
constant Compose.ST#rpx : (func(2, [func(0, [@(0);
                                             (Tuple  @(1)  @(0))]);
                                    (Compose.ST  @(0)  @(1))]))


bind 0 GHC.Types.True#6u : {VV#175 : GHC.Types.Bool | []}
bind 1 GHC.Types.EQ#6U : {VV#181 : GHC.Types.Ordering | [(VV#181 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#182 : GHC.Types.Ordering | [(VV#182 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#183 : GHC.Types.Ordering | [(VV#183 = GHC.Types.GT#6W)]}
bind 4 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#208 : GHC.Types.Ordering | [(cmp([VV#208]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#209 : GHC.Types.Ordering | [(cmp([VV#209]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#210 : GHC.Types.Ordering | [(cmp([VV#210]) = GHC.Types.GT#6W)]}
bind 10 r : {VV#217 : (Pred  a_aNA) | []}
bind 11 ds_dOy : {VV#218 : (Compose.ST  s_aNz  a_aNA) | []}
bind 12 lq_anf__dOA : {lq_tmp_x_219 : (Compose.ST  s_aNz  a_aNA) | [(lq_tmp_x_219 = ds_dOy)]}
bind 13 lq_anf__dOA : {lq_tmp_x_221 : (Compose.ST  s_aNz  a_aNA) | [(lq_tmp_x_221 = ds_dOy)]}
bind 14 lq_anf__dOA : {lq_tmp_x_221 : (Compose.ST  s_aNz  a_aNA) | [(lq_tmp_x_221 = ds_dOy)]}
bind 15 x#aNh : {VV : a_aOo | []}
bind 16 s#aNi : {VV#261 : s_aNg | [$k__262]}
bind 17 lq_tmp_x_280 : {VV : a_aOo | []}
bind 18 fix#Compose.#36#fFooST#35#rqo : {VV : func(1, [(Compose.Foo  (Compose.ST  @(0)))]) | []}
bind 19 x#aNf : {VV : a_aO3 | []}
bind 20 lq_anf__dOE : {VV#344 : (Compose.Foo  (Compose.ST  GHC.Types.Bool)) | []}
bind 21 lq_anf__dOF : {lq_tmp_x_349 : int | [(lq_tmp_x_349 = 0)]}
bind 22 lq_anf__dOG : {lq_tmp_x_352 : (Compose.ST  GHC.Types.Bool  int) | []}
bind 23 Compose.bar#rpA : {VV#384 : (Tuple  int  GHC.Types.Bool) | []}
bind 24 VV#385 : {VV#385 : (Tuple  int  GHC.Types.Bool) | []}
bind 25 VV#385 : {VV#385 : (Tuple  int  GHC.Types.Bool) | []}
bind 26 VV#388 : {VV#388 : int | [$k__373[VV#372:=VV#388][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_367:=GHC.Types.True#6u][lq_tmp_x_363:=VV#385][lq_tmp_x_375:=VV#388];
                                  $k__377[VV#376:=VV#388][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_367:=GHC.Types.True#6u][lq_tmp_x_363:=VV#385][lq_tmp_x_375:=VV#388]]}
bind 27 VV#388 : {VV#388 : int | [$k__373[VV#372:=VV#388][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_367:=GHC.Types.True#6u][lq_tmp_x_363:=VV#385][lq_tmp_x_375:=VV#388];
                                  $k__377[VV#376:=VV#388][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_367:=GHC.Types.True#6u][lq_tmp_x_363:=VV#385][lq_tmp_x_375:=VV#388]]}
bind 28 VV#391 : {VV#391 : GHC.Types.Bool | [$k__369[VV#368:=VV#391][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_367:=GHC.Types.True#6u][lq_tmp_x_363:=VV#385][lq_tmp_x_371:=VV#391]]}
bind 29 VV#391 : {VV#391 : GHC.Types.Bool | [$k__369[VV#368:=VV#391][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_367:=GHC.Types.True#6u][lq_tmp_x_363:=VV#385][lq_tmp_x_371:=VV#391]]}
bind 30 fld_Tuple : {VV#394 : int | []}
bind 31 VV#395 : {VV#395 : GHC.Types.Bool | []}
bind 32 VV#395 : {VV#395 : GHC.Types.Bool | []}
bind 33 VV#398 : {VV#398 : GHC.Types.Bool | [(VV#398 = GHC.Types.True#6u)]}
bind 34 VV#398 : {VV#398 : GHC.Types.Bool | [(VV#398 = GHC.Types.True#6u)]}
bind 35 VV#401 : {VV#401 : (Compose.ST  GHC.Types.Bool  int) | [(VV#401 = lq_anf__dOG)]}
bind 36 VV#401 : {VV#401 : (Compose.ST  GHC.Types.Bool  int) | [(VV#401 = lq_anf__dOG)]}
bind 37 VV#404 : {VV#404 : GHC.Types.Bool | []}
bind 38 VV#404 : {VV#404 : GHC.Types.Bool | []}
bind 39 VV#407 : {VV#407 : GHC.Types.Bool | [$k__369[VV#368:=VV#407][lq_tmp_x_361:=VV#401][lq_tmp_x_371:=VV#407]]}
bind 40 VV#407 : {VV#407 : GHC.Types.Bool | [$k__369[VV#368:=VV#407][lq_tmp_x_361:=VV#401][lq_tmp_x_371:=VV#407]]}
bind 41 VV#410 : {VV#410 : int | [$k__356[VV#355:=VV#410][lq_tmp_x_354:=lq_anf__dOF][lq_tmp_x_358:=VV#410][lq_tmp_x_352:=VV#401][lq_tmp_x_382:=VV#401][lq_tmp_x_380:=VV#410]]}
bind 42 VV#410 : {VV#410 : int | [$k__356[VV#355:=VV#410][lq_tmp_x_354:=lq_anf__dOF][lq_tmp_x_358:=VV#410][lq_tmp_x_352:=VV#401][lq_tmp_x_382:=VV#401][lq_tmp_x_380:=VV#410]]}
bind 43 VV#413 : {VV#413 : int | [(VV#413 > lq_anf__dOF)]}
bind 44 VV#413 : {VV#413 : int | [(VV#413 > lq_anf__dOF)]}
bind 45 VV#416 : {VV#416 : int | [(VV#416 = lq_anf__dOF)]}
bind 46 VV#416 : {VV#416 : int | [(VV#416 = lq_anf__dOF)]}
bind 47 VV#419 : {VV#419 : (Compose.ST  GHC.Types.Bool  a_aO3) | []}
bind 48 VV#419 : {VV#419 : (Compose.ST  GHC.Types.Bool  a_aO3) | []}
bind 49 VV#422 : {VV#422 : GHC.Types.Bool | []}
bind 50 VV#422 : {VV#422 : GHC.Types.Bool | []}
bind 51 VV#425 : {VV#425 : GHC.Types.Bool | []}
bind 52 VV#425 : {VV#425 : GHC.Types.Bool | []}
bind 53 VV#345 : {VV#345 : a_aO3 | [$k__346[x:=x#aNf][VV:=VV#419]]}
bind 54 VV#345 : {VV#345 : a_aO3 | [(x#aNf = VV#345)]}
bind 55 VV : {VV : a_aO3 | [(VV = x#aNf)]}
bind 56 VV#431 : {VV#431 : (Compose.ST  s_aNg  a_aOo) | [$k__319[VV#318:=VV#431][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC][lq_tmp_x_321:=VV#431]]}
bind 57 VV#431 : {VV#431 : (Compose.ST  s_aNg  a_aOo) | [$k__319[VV#318:=VV#431][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC][lq_tmp_x_321:=VV#431]]}
bind 58 VV#309 : {VV#309 : s_aNg | [$k__310[VV#318:=VV#431][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC][lq_tmp_x_321:=VV#431]]}
bind 59 VV : {VV : s_aNg | []}
bind 60 VV#312 : {VV#312 : a_aOo | [$k__313[VV#318:=VV#431][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC][lq_tmp_x_321:=VV#431]]}
bind 61 VV#315 : {VV#315 : a_aOo | [$k__316[lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC]]}
bind 62 VV#290 : {VV#290 : s_aNg | [$k__291[lq_tmp_x_287:=lq_anf__dOB]]}
bind 63 lq_tmp_x_289 : {VV#290 : s_aNg | [$k__291[lq_tmp_x_287:=lq_anf__dOB]]}
bind 64 VV#441 : {VV#441 : (Tuple  a_aOo  s_aNg) | [(snd([VV#441]) = lq_tmp_x_289);
                                                    (fst([VV#441]) = x#aNh);
                                                    (x_Tuple22([VV#441]) = lq_tmp_x_289);
                                                    (x_Tuple21([VV#441]) = x#aNh)]}
bind 65 VV#441 : {VV#441 : (Tuple  a_aOo  s_aNg) | [(snd([VV#441]) = lq_tmp_x_289);
                                                    (fst([VV#441]) = x#aNh);
                                                    (x_Tuple22([VV#441]) = lq_tmp_x_289);
                                                    (x_Tuple21([VV#441]) = x#aNh)]}
bind 66 VV#271 : {VV#271 : a_aOo | [$k__272[lq_tmp_x_269:=x#aNh][lq_tmp_x_270:=lq_tmp_x_289][lq_tmp_x_266:=VV#441][s#aNi:=lq_tmp_x_289][lq_tmp_x_332:=lq_tmp_x_289][lq_tmp_x_330:=VV#441]]}
bind 67 VV#274 : {VV#274 : s_aNg | [$k__275[lq_tmp_x_269:=x#aNh][lq_tmp_x_270:=lq_tmp_x_289][lq_tmp_x_266:=VV#441][s#aNi:=lq_tmp_x_289][lq_tmp_x_332:=lq_tmp_x_289][lq_tmp_x_330:=VV#441]]}
bind 68 lq_tmp_x_306 : {VV : a_aOo | []}
bind 69 VV#274 : {VV#274 : s_aNg | [$k__278[lq_tmp_x_280:=lq_tmp_x_306][VV#277:=VV#274][lq_tmp_x_269:=x#aNh][lq_tmp_x_270:=lq_tmp_x_289][lq_tmp_x_265:=lq_tmp_x_306][s#aNi:=lq_tmp_x_289][lq_tmp_x_332:=lq_tmp_x_289][lq_tmp_x_329:=lq_tmp_x_306]]}
bind 70 VV#251 : {VV#251 : s_aNg | [$k__252]}
bind 71 lq_tmp_x_327 : {VV#251 : s_aNg | [$k__252]}
bind 72 VV#452 : {VV#452 : (Tuple  a_aOo  s_aNg) | [$k__304[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452]]}
bind 73 VV#452 : {VV#452 : (Tuple  a_aOo  s_aNg) | [$k__304[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452]]}
bind 74 VV#293 : {VV#293 : a_aOo | [$k__294[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452]]}
bind 75 VV#296 : {VV#296 : s_aNg | [$k__297[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452]]}
bind 76 lq_tmp_x_322 : {VV : a_aOo | []}
bind 77 VV#300 : {VV#300 : s_aNg | [$k__301[lq_tmp_x_299:=lq_tmp_x_322][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_306:=lq_tmp_x_322]]}
bind 78 VV#460 : {VV#460 : (Compose.ST  s_aNg  a_aOo) | []}
bind 79 VV#460 : {VV#460 : (Compose.ST  s_aNg  a_aOo) | []}
bind 80 VV#251 : {VV#251 : s_aNg | [$k__252[lq_tmp_x_247:=VV#460][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286][lq_tmp_x_325:=VV#460]]}
bind 81 VV#309 : {VV#309 : s_aNg | [$k__310[VV#318:=VV#460][lq_tmp_x_321:=VV#460]]}
bind 82 VV#254 : {VV#254 : a_aOo | [$k__255[lq_tmp_x_247:=VV#460][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286][lq_tmp_x_325:=VV#460]]}
bind 83 VV#254 : {VV#254 : a_aOo | [$k__258[VV#257:=VV#254][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286]]}
bind 84 VV#261 : {VV#261 : s_aNg | [(VV#261 = s#aNi)]}
bind 85 VV : {VV : a_aOo | [(VV = x#aNh)]}
bind 86 VV : {VV : s_aNz | []}
bind 87 lq_tmp_x_216 : {VV : s_aNz | []}
bind 88 VV#472 : {VV#472 : (Tuple  a_aNA  s_aNz) | []}
bind 89 VV#472 : {VV#472 : (Tuple  a_aNA  s_aNz) | []}
bind 90 VV : {VV : a_aNA | [(? papp1([r; VV]))]}
bind 91 VV : {VV : s_aNz | []}
bind 92 fld_Tuple : {VV : a_aNA | []}
bind 93 VV : {VV : s_aNz | []}
bind 94 VV#376 : {VV#376 : int | [$k__377]}
bind 95 VV#372 : {VV#372 : int | [$k__373]}
bind 96 VV#368 : {VV#368 : GHC.Types.Bool | [$k__369]}
bind 97 VV#355 : {VV#355 : int | [$k__356]}
bind 98 VV#318 : {VV#318 : (Compose.ST  s_aNg  a_aOo) | [$k__319]}
bind 99 lq_tmp_x_289 : {VV#290 : s_aNg | [$k__291]}
bind 100 VV#303 : {VV#303 : (Tuple  a_aOo  s_aNg) | [$k__304]}
bind 101 lq_tmp_x_299 : {VV : a_aOo | []}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 71; 8; 9; 73; 74; 15]
  grd true
  lhs {VV#F16 : a_aOo | [$k__294[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452][VV#293:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : a_aOo | [$k__255[lq_tmp_x_245:=VV#452][lq_tmp_x_249:=lq_tmp_x_327][lq_tmp_x_323:=VV#452][VV#254:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [2]
  // META constraint id 16 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 33; 2; 18; 3; 4; 5; 21; 6; 22; 7; 8; 9]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [(VV#F1 = GHC.Types.True#6u)]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__369[VV#368:=VV#F1][lq_tmp_x_366:=lq_anf__dOG][lq_tmp_x_371:=VV#F1][VV#398:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [5]
  // META constraint id 1 : StateConstraints00.hs:33:24-27


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 71; 8; 9; 73; 74; 15]
  grd true
  lhs {VV#F17 : a_aOo | [$k__294[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452][VV#293:=VV#F17][VV#F:=VV#F17]]}
  rhs {VV#F17 : a_aOo | [$k__258[VV#257:=VV#F17][lq_tmp_x_245:=VV#452][lq_tmp_x_249:=lq_tmp_x_327][lq_tmp_x_323:=VV#452][VV#254:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [2]
  // META constraint id 17 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 2; 18; 3; 4; 36; 5; 21; 37; 6; 22; 7; 8; 9]
  grd true
  lhs {VV#F2 : GHC.Types.Bool | []}
  rhs {VV#F2 : GHC.Types.Bool | [$k__369[VV#368:=VV#F2][lq_tmp_x_361:=VV#401][lq_tmp_x_371:=VV#F2][VV#404:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [5]
  // META constraint id 2 : StateConstraints00.hs:33:17-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 71; 8; 9; 73; 75; 15]
  grd true
  lhs {VV#F18 : s_aNg | [$k__297[VV#303:=VV#452][lq_tmp_x_289:=lq_tmp_x_327][lq_tmp_x_307:=VV#452][VV#296:=VV#F18][VV#F:=VV#F18]]}
  rhs {VV#F18 : s_aNg | [$k__252[lq_tmp_x_245:=VV#452][lq_tmp_x_249:=lq_tmp_x_327][lq_tmp_x_323:=VV#452][VV#251:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [2]
  // META constraint id 18 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 2; 18; 3; 4; 36; 5; 21; 6; 22; 7; 8; 9; 41]
  grd true
  lhs {VV#F3 : int | [$k__356[VV#355:=VV#F3][lq_tmp_x_354:=lq_anf__dOF][lq_tmp_x_358:=VV#F3][lq_tmp_x_352:=VV#401][lq_tmp_x_382:=VV#401][lq_tmp_x_380:=VV#F3][VV#410:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__373[VV#372:=VV#F3][lq_tmp_x_361:=VV#401][lq_tmp_x_375:=VV#F3][VV#410:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [5]
  // META constraint id 3 : StateConstraints00.hs:33:17-21


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 78; 15]
  grd true
  lhs {VV#F19 : (Compose.ST  s_aNg  a_aOo) | []}
  rhs {VV#F19 : (Compose.ST  s_aNg  a_aOo) | [$k__319[VV#318:=VV#F19][lq_tmp_x_321:=VV#F19][VV#460:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [2]
  // META constraint id 19 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 2; 18; 3; 4; 36; 5; 21; 6; 22; 7; 8; 9; 43]
  grd true
  lhs {VV#F4 : int | [(VV#F4 > lq_anf__dOF)]}
  rhs {VV#F4 : int | [$k__377[VV#376:=VV#F4][lq_tmp_x_375:=VV#F4][VV#413:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [5]
  // META constraint id 4 : StateConstraints00.hs:33:17-21


constraint:
  env [0; 80; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15; 79]
  grd true
  lhs {VV#F20 : s_aNg | [$k__252[lq_tmp_x_247:=VV#460][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286][lq_tmp_x_325:=VV#460][VV#251:=VV#F20][VV#F:=VV#F20]]}
  rhs {VV#F20 : s_aNg | [$k__310[VV#318:=VV#460][lq_tmp_x_321:=VV#460][VV#309:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [2]
  // META constraint id 20 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 2; 18; 3; 4; 5; 21; 6; 7; 8; 9; 45]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = lq_anf__dOF)]}
  rhs {VV#F5 : int | [$k__356[VV#355:=VV#F5][lq_tmp_x_358:=VV#F5][VV#416:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [5]
  // META constraint id 5 : StateConstraints00.hs:33:21


constraint:
  env [0; 1; 81; 2; 3; 4; 5; 6; 7; 8; 9; 15; 79]
  grd true
  lhs {VV#F21 : s_aNg | [$k__310[VV#318:=VV#460][lq_tmp_x_321:=VV#460][VV#309:=VV#F21][VV#F:=VV#F21]]}
  rhs {VV#F21 : s_aNg | [$k__252[lq_tmp_x_247:=VV#460][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286][lq_tmp_x_325:=VV#460][VV#251:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [2]
  // META constraint id 21 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 48; 1; 2; 18; 3; 19; 4; 20; 5; 6; 54; 7; 8; 9]
  grd true
  lhs {VV#F6 : a_aO3 | [(x#aNf = VV#F6)]}
  rhs {VV#F6 : a_aO3 | [(VV#F6 > x#aNf)]}
  id 6 tag [4]
  // META constraint id 6 : StateConstraints00.hs:30:9-16


constraint:
  env [0; 1; 2; 82; 3; 4; 5; 6; 7; 8; 9; 15; 79]
  grd true
  lhs {VV#F22 : a_aOo | [$k__255[lq_tmp_x_247:=VV#460][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286][lq_tmp_x_325:=VV#460][VV#254:=VV#F22][VV#F:=VV#F22]]}
  rhs {VV#F22 : a_aOo | [$k__313[VV#318:=VV#460][lq_tmp_x_321:=VV#460][VV#312:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [2]
  // META constraint id 22 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 20; 5; 6; 7; 55; 8; 9]
  grd true
  lhs {VV#F7 : a_aO3 | [(VV#F7 = x#aNf)]}
  rhs {VV#F7 : a_aO3 | [$k__346[VV#345:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [4]
  // META constraint id 7 : StateConstraints00.hs:30:16


constraint:
  env [0; 1; 2; 3; 83; 4; 5; 6; 7; 8; 9; 15; 79]
  grd true
  lhs {VV#F23 : a_aOo | [$k__258[VV#257:=VV#F23][lq_tmp_x_250:=lq_tmp_x_286][lq_tmp_x_328:=lq_tmp_x_286][VV#254:=VV#F23][VV#F:=VV#F23]]}
  rhs {VV#F23 : a_aOo | [$k__316[VV#315:=VV#F23][VV#F:=VV#F23]]}
  id 23 tag [2]
  // META constraint id 23 : StateConstraints00.hs:25:18-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 59; 15]
  grd true
  lhs {VV#F8 : s_aNg | []}
  rhs {VV#F8 : s_aNg | [$k__310[VV#318:=VV#431][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC][lq_tmp_x_321:=VV#431][VV#309:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : StateConstraints00.hs:25:18-34


constraint:
  env [0; 16; 1; 2; 3; 4; 84; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F24 : s_aNg | [(VV#F24 = s#aNi)]}
  rhs {VV#F24 : s_aNg | [$k__275[lq_tmp_x_269:=x#aNh][VV#274:=VV#F24][VV#F:=VV#F24]]}
  id 24 tag [2]
  // META constraint id 24 : StateConstraints00.hs:25:33


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 61; 15]
  grd true
  lhs {VV#F9 : a_aOo | [$k__316[lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_288:=lq_anf__dOC][VV#315:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : a_aOo | [(x#aNh = VV#F9)]}
  id 9 tag [2]
  // META constraint id 9 : StateConstraints00.hs:25:18-34


constraint:
  env [0; 16; 1; 2; 3; 4; 84; 5; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F25 : s_aNg | [(VV#F25 = s#aNi)]}
  rhs {VV#F25 : s_aNg | [$k__278[lq_tmp_x_280:=x#aNh][VV#277:=VV#F25][lq_tmp_x_269:=x#aNh][VV#274:=VV#F25][VV#F:=VV#F25]]}
  id 25 tag [2]
  // META constraint id 25 : StateConstraints00.hs:25:33


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 62; 15]
  grd true
  lhs {VV#F10 : s_aNg | [$k__291[lq_tmp_x_287:=lq_anf__dOB][VV#290:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : s_aNg | [$k__262[VV#261:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : StateConstraints00.hs:25:23-34


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 85; 6; 7; 8; 9; 15]
  grd true
  lhs {VV#F26 : a_aOo | [(VV#F26 = x#aNh)]}
  rhs {VV#F26 : a_aOo | [$k__272[VV#271:=VV#F26][VV#F:=VV#F26]]}
  id 26 tag [2]
  // META constraint id 26 : StateConstraints00.hs:25:30


constraint:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15; 63]
  grd true
  lhs {VV#F11 : (Tuple  a_aOo  s_aNg) | [(snd([VV#F11]) = lq_tmp_x_289);
                                         (fst([VV#F11]) = x#aNh);
                                         (x_Tuple22([VV#F11]) = lq_tmp_x_289);
                                         (x_Tuple21([VV#F11]) = x#aNh)]}
  rhs {VV#F11 : (Tuple  a_aOo  s_aNg) | [$k__304[VV#303:=VV#F11][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_307:=VV#F11][VV#441:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : StateConstraints00.hs:25:23-34


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 87; 8; 9; 89; 10; 90; 11; 12; 13; 14]
  grd true
  lhs {VV#F27 : a_aNA | [(? papp1([r; VV#F27]))]}
  rhs {VV#F27 : a_aNA | [(? papp1([r; VV#F27]))]}
  id 27 tag [1]
  // META constraint id 27 : StateConstraints00.hs:9:19-26


constraint:
  env [0; 1; 65; 2; 66; 3; 4; 5; 6; 7; 8; 9; 15; 63]
  grd true
  lhs {VV#F12 : a_aOo | [$k__272[lq_tmp_x_269:=x#aNh][lq_tmp_x_270:=lq_tmp_x_289][lq_tmp_x_266:=VV#441][s#aNi:=lq_tmp_x_289][lq_tmp_x_332:=lq_tmp_x_289][lq_tmp_x_330:=VV#441][VV#271:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : a_aOo | [$k__294[VV#303:=VV#441][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_307:=VV#441][VV#293:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : StateConstraints00.hs:25:23-34


constraint:
  env [0; 1; 65; 2; 3; 67; 4; 5; 6; 7; 8; 9; 15; 63]
  grd true
  lhs {VV#F13 : s_aNg | [$k__275[lq_tmp_x_269:=x#aNh][lq_tmp_x_270:=lq_tmp_x_289][lq_tmp_x_266:=VV#441][s#aNi:=lq_tmp_x_289][lq_tmp_x_332:=lq_tmp_x_289][lq_tmp_x_330:=VV#441][VV#274:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : s_aNg | [$k__297[VV#303:=VV#441][lq_tmp_x_287:=lq_anf__dOB][lq_tmp_x_307:=VV#441][VV#296:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [2]
  // META constraint id 13 : StateConstraints00.hs:25:23-34


constraint:
  env [0; 1; 65; 2; 3; 4; 68; 5; 69; 6; 7; 8; 9; 15; 63]
  grd true
  lhs {VV#F14 : s_aNg | [$k__278[lq_tmp_x_280:=lq_tmp_x_306][VV#277:=VV#F14][lq_tmp_x_269:=x#aNh][lq_tmp_x_270:=lq_tmp_x_289][lq_tmp_x_265:=lq_tmp_x_306][s#aNi:=lq_tmp_x_289][lq_tmp_x_332:=lq_tmp_x_289][lq_tmp_x_329:=lq_tmp_x_306][VV#274:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : s_aNg | [$k__301[lq_tmp_x_299:=lq_tmp_x_306][lq_tmp_x_287:=lq_anf__dOB][VV#300:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [2]
  // META constraint id 14 : StateConstraints00.hs:25:23-34


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 15]
  grd true
  lhs {VV#F15 : s_aNg | [$k__252[VV#251:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : s_aNg | [$k__291[VV#290:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [2]
  // META constraint id 15 : StateConstraints00.hs:25:18-19




wf:
  env [0; 1; 2; 18; 3; 4; 5; 21; 6; 22; 7; 8; 9]
  reft {VV#376 : int | [$k__377]}
  
  // META wf  : StateConstraints00.hs:33:7-14


wf:
  env [0; 1; 2; 18; 3; 4; 5; 21; 6; 22; 7; 8; 9]
  reft {VV#372 : int | [$k__373]}
  
  // META wf  : StateConstraints00.hs:33:7-14


wf:
  env [0; 1; 2; 18; 3; 4; 5; 21; 6; 22; 7; 8; 9]
  reft {VV#368 : GHC.Types.Bool | [$k__369]}
  
  // META wf  : StateConstraints00.hs:33:7-14


wf:
  env [0; 1; 2; 18; 3; 4; 5; 21; 6; 7; 8; 9]
  reft {VV#355 : int | [$k__356]}
  
  // META wf  : StateConstraints00.hs:33:17-19


wf:
  env [0; 1; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9]
  reft {VV#345 : a_aO3 | [$k__346]}
  
  // META wf  : StateConstraints00.hs:30:9-14


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#318 : (Compose.ST  s_aNg  a_aOo) | [$k__319]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 98; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#309 : s_aNg | [$k__310]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 98; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#312 : a_aOo | [$k__313]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#315 : a_aOo | [$k__316]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#290 : s_aNg | [$k__291]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 99; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#303 : (Tuple  a_aOo  s_aNg) | [$k__304]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 99; 4; 100; 5; 6; 7; 8; 9; 15]
  reft {VV#293 : a_aOo | [$k__294]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 99; 4; 100; 5; 6; 7; 8; 9; 15]
  reft {VV#296 : s_aNg | [$k__297]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 99; 4; 5; 101; 6; 7; 8; 9; 15]
  reft {VV#300 : s_aNg | [$k__301]}
  
  // META wf  : StateConstraints00.hs:25:21


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#261 : s_aNg | [$k__262]}
  
  // META wf  : StateConstraints00.hs:25:3-8


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#277 : s_aNg | [$k__278]}
  
  // META wf  : StateConstraints00.hs:25:29-34


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#274 : s_aNg | [$k__275]}
  
  // META wf  : StateConstraints00.hs:25:29-34


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#271 : a_aOo | [$k__272]}
  
  // META wf  : StateConstraints00.hs:25:29-34


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#257 : a_aOo | [$k__258]}
  
  // META wf  : StateConstraints00.hs:25:3-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#254 : a_aOo | [$k__255]}
  
  // META wf  : StateConstraints00.hs:25:3-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 15]
  reft {VV#251 : s_aNg | [$k__252]}
  
  // META wf  : StateConstraints00.hs:25:3-8







