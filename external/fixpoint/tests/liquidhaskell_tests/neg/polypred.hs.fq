qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 fix#GHC.Classes.#36#fEqInt#35#rse : {VV#157 : (GHC.Classes.Eq  int) | []}
bind 1 GHC.Types.EQ#6U : {VV#158 : GHC.Types.Ordering | [(VV#158 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#159 : GHC.Types.Ordering | [(VV#159 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#160 : GHC.Types.Ordering | [(VV#160 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#202 : GHC.Types.Ordering | [(cmp([VV#202]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#203 : GHC.Types.Ordering | [(cmp([VV#203]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#204 : GHC.Types.Ordering | [(cmp([VV#204]) = GHC.Types.GT#6W)]}
bind 9 longVarName#a12Y : {VV#208 : a_a136 | [$k__209]}
bind 10 lq_anf__d13l : {lq_tmp_x_216 : int | [(lq_tmp_x_216 = (20  :  int))]}
bind 11 x#a12X : {VV#227 : int | [$k__228]}
bind 12 lq_anf__d13m : {lq_tmp_x_235 : int | [(lq_tmp_x_235 = (0  :  int))]}
bind 13 lq_anf__d13n : {lq_tmp_x_241 : GHC.Types.Bool | [((? Prop([lq_tmp_x_241])) <=> (x#a12X = lq_anf__d13m))]}
bind 14 lq_anf__d13p : {lq_tmp_x_277 : int | [$k__213[VV#212:=lq_tmp_x_277][longVarName#a12Y:=lq_anf__d13o][lq_tmp_x_279:=lq_anf__d13o]]}
bind 15 Concat.propSAFE#r12i : {VV#263 : GHC.Types.Bool | [$k__264]}
bind 16 VV#311 : {VV#311 : GHC.Types.Bool | [$k__232[VV#231:=VV#311][x#a12X:=lq_anf__d13p][lq_tmp_x_308:=lq_anf__d13p][lq_tmp_x_306:=VV#311]]}
bind 17 VV#311 : {VV#311 : GHC.Types.Bool | [$k__232[VV#231:=VV#311][x#a12X:=lq_anf__d13p][lq_tmp_x_308:=lq_anf__d13p][lq_tmp_x_306:=VV#311]]}
bind 18 VV#314 : {VV#314 : int | [(VV#314 = lq_anf__d13p)]}
bind 19 VV#314 : {VV#314 : int | [(VV#314 = lq_anf__d13p)]}
bind 20 VV#318 : {VV#318 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285[VV#284:=VV#318][lq_tmp_x_294:=VV#318]]}
bind 21 VV#318 : {VV#318 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285[VV#284:=VV#318][lq_tmp_x_294:=VV#318]]}
bind 22 VV#321 : {VV#321 : fix#GHC.Prim.#42# | [$k__282[VV#281:=VV#321][VV#284:=VV#318][lq_tmp_x_294:=VV#318][lq_tmp_x_293:=VV#321]]}
bind 23 VV#321 : {VV#321 : fix#GHC.Prim.#42# | [$k__282[VV#281:=VV#321][VV#284:=VV#318][lq_tmp_x_294:=VV#318][lq_tmp_x_293:=VV#321]]}
bind 24 VV#324 : {VV#324 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#324][VV#271:=VV#318][lq_tmp_x_274:=VV#324][lq_tmp_x_275:=VV#318][lq_tmp_x_299:=VV#318][lq_tmp_x_298:=VV#324]]}
bind 25 VV#324 : {VV#324 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#324][VV#271:=VV#318][lq_tmp_x_274:=VV#324][lq_tmp_x_275:=VV#318][lq_tmp_x_299:=VV#318][lq_tmp_x_298:=VV#324]]}
bind 26 lq_tmp_x_280 : {lq_tmp_x_294 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285[VV#284:=lq_tmp_x_294]]}
bind 27 VV#328 : {VV#328 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__272[VV#271:=VV#328][lq_tmp_x_275:=VV#328][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#328];
                                                                (VV#328 = lq_tmp_x_280)]}
bind 28 VV#328 : {VV#328 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__272[VV#271:=VV#328][lq_tmp_x_275:=VV#328][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#328];
                                                                (VV#328 = lq_tmp_x_280)]}
bind 29 VV#331 : {VV#331 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#331][VV#271:=VV#328][lq_tmp_x_274:=VV#331][lq_tmp_x_275:=VV#328][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#328][lq_tmp_x_300:=VV#331]]}
bind 30 VV#331 : {VV#331 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#331][VV#271:=VV#328][lq_tmp_x_274:=VV#331][lq_tmp_x_275:=VV#328][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#328][lq_tmp_x_300:=VV#331]]}
bind 31 VV#334 : {VV#334 : fix#GHC.Prim.#42# | [$k__288[VV#287:=VV#334][VV#290:=VV#328][lq_tmp_x_296:=VV#328][lq_tmp_x_295:=VV#334]]}
bind 32 VV#334 : {VV#334 : fix#GHC.Prim.#42# | [$k__288[VV#287:=VV#334][VV#290:=VV#328][lq_tmp_x_296:=VV#328][lq_tmp_x_295:=VV#334]]}
bind 33 VV#337 : {VV#337 : GHC.Types.Bool | [(? Prop([VV#337]))]}
bind 34 VV#337 : {VV#337 : GHC.Types.Bool | [(? Prop([VV#337]))]}
bind 35 VV#340 : {VV#340 : GHC.Types.Bool | [(VV#340 = lq_anf__d13n)]}
bind 36 VV#340 : {VV#340 : GHC.Types.Bool | [(VV#340 = lq_anf__d13n)]}
bind 37 VV#343 : {VV#343 : int | [(VV#343 = lq_anf__d13m)]}
bind 38 VV#343 : {VV#343 : int | [(VV#343 = lq_anf__d13m)]}
bind 39 VV#346 : {VV#346 : int | [(VV#346 = x#a12X)]}
bind 40 VV#346 : {VV#346 : int | [(VV#346 = x#a12X)]}
bind 41 VV#349 : {VV#349 : int | [(VV#349 = 0)]}
bind 42 VV#349 : {VV#349 : int | [(VV#349 = 0)]}
bind 43 VV#352 : {VV#352 : int | []}
bind 44 VV#352 : {VV#352 : int | []}
bind 45 VV#355 : {VV#355 : int | [(VV#355 = lq_anf__d13l)]}
bind 46 VV#355 : {VV#355 : int | [(VV#355 = lq_anf__d13l)]}
bind 47 VV#358 : {VV#358 : int | [(VV#358 = 20)]}
bind 48 VV#358 : {VV#358 : int | [(VV#358 = 20)]}
bind 49 VV#284 : {VV#284 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285]}
bind 50 VV#281 : {VV#281 : fix#GHC.Prim.#42# | [$k__282]}
bind 51 lq_tmp_x_280 : {VV#284 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285]}
bind 52 VV#290 : {VV#290 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__291]}
bind 53 VV#287 : {VV#287 : fix#GHC.Prim.#42# | [$k__288]}
bind 54 VV#271 : {VV#271 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__272]}
bind 55 VV#268 : {VV#268 : fix#GHC.Prim.#42# | [$k__269]}
bind 56 VV#263 : {VV#263 : GHC.Types.Bool | [$k__264]}
bind 57 VV#227 : {VV#227 : int | [$k__228]}
bind 58 VV#248 : {VV#248 : int | [$k__249]}
bind 59 VV#231 : {VV#231 : GHC.Types.Bool | [$k__232]}
bind 60 VV#212 : {VV#212 : int | [$k__213]}




constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 14]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [$k__232[VV#231:=VV#F1][x#a12X:=lq_anf__d13p][lq_tmp_x_308:=lq_anf__d13p][lq_tmp_x_306:=VV#F1][VV#311:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__264[VV#263:=VV#F1][VV#311:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [3]
  // META constraint id 1 : polypred.hs:12:12-24


constraint:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 14]
  grd true
  lhs {VV#F2 : int | [(VV#F2 = lq_anf__d13p)]}
  rhs {VV#F2 : int | [$k__228[VV#227:=VV#F2][lq_tmp_x_305:=VV#F2][VV#314:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [3]
  // META constraint id 2 : polypred.hs:12:18-23


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F3 : func(0, [(GHC.Prim.Any  fix#GHC.Prim.#42#);
                        (GHC.Prim.Any  fix#GHC.Prim.#42#)]) | []}
  rhs {VV#F3 : func(0, [(GHC.Prim.Any  fix#GHC.Prim.#42#);
                        (GHC.Prim.Any  fix#GHC.Prim.#42#)]) | [$k__209[VV#208:=VV#F3][lq_tmp_x_297:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]
  // META constraint id 3 : polypred.hs:12:22-23


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7; 8]
  grd true
  lhs {VV#F4 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285[VV#284:=VV#F4][lq_tmp_x_294:=VV#F4][VV#318:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__272[VV#271:=VV#F4][lq_tmp_x_275:=VV#F4][lq_tmp_x_299:=VV#F4][VV#318:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : polypred.hs:12:22-23


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8]
  grd true
  lhs {VV#F5 : fix#GHC.Prim.#42# | [$k__282[VV#281:=VV#F5][VV#284:=VV#318][lq_tmp_x_294:=VV#318][lq_tmp_x_293:=VV#F5][VV#321:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#F5][VV#271:=VV#318][lq_tmp_x_274:=VV#F5][lq_tmp_x_275:=VV#318][lq_tmp_x_299:=VV#318][lq_tmp_x_298:=VV#F5][VV#321:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : polypred.hs:12:22-23


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 24]
  grd true
  lhs {VV#F6 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#F6][VV#271:=VV#318][lq_tmp_x_274:=VV#F6][lq_tmp_x_275:=VV#318][lq_tmp_x_299:=VV#318][lq_tmp_x_298:=VV#F6][VV#324:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : fix#GHC.Prim.#42# | [$k__282[VV#281:=VV#F6][VV#284:=VV#318][lq_tmp_x_294:=VV#318][lq_tmp_x_293:=VV#F6][VV#324:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : polypred.hs:12:22-23


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 26; 27]
  grd true
  lhs {VV#F7 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__272[VV#271:=VV#F7][lq_tmp_x_275:=VV#F7][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#F7][VV#328:=VV#F7][VV#F:=VV#F7];
                                                    (VV#F7 = lq_tmp_x_280)]}
  rhs {VV#F7 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__291[VV#290:=VV#F7][lq_tmp_x_296:=VV#F7][VV#328:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : polypred.hs:12:22-23


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 26; 28; 29]
  grd true
  lhs {VV#F8 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#F8][VV#271:=VV#328][lq_tmp_x_274:=VV#F8][lq_tmp_x_275:=VV#328][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#328][lq_tmp_x_300:=VV#F8][VV#331:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : fix#GHC.Prim.#42# | [$k__288[VV#287:=VV#F8][VV#290:=VV#328][lq_tmp_x_296:=VV#328][lq_tmp_x_295:=VV#F8][VV#331:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [3]
  // META constraint id 8 : polypred.hs:12:22-23


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 26; 28; 31]
  grd true
  lhs {VV#F9 : fix#GHC.Prim.#42# | [$k__288[VV#287:=VV#F9][VV#290:=VV#328][lq_tmp_x_296:=VV#328][lq_tmp_x_295:=VV#F9][VV#334:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : fix#GHC.Prim.#42# | [$k__269[VV#268:=VV#F9][VV#271:=VV#328][lq_tmp_x_274:=VV#F9][lq_tmp_x_275:=VV#328][lq_tmp_x_267:=lq_tmp_x_280][lq_tmp_x_303:=lq_tmp_x_280][lq_tmp_x_301:=VV#328][lq_tmp_x_300:=VV#F9][VV#334:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [3]
  // META constraint id 9 : polypred.hs:12:22-23


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 11; 12; 13]
  grd true
  lhs {VV#F10 : GHC.Types.Bool | [(? Prop([VV#F10]))]}
  rhs {VV#F10 : GHC.Types.Bool | [$k__232[VV#231:=VV#F10][VV#337:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : polypred.hs:6:10-31


constraint:
  env [0; 1; 2; 3; 35; 4; 5; 6; 7; 8; 11; 12; 13]
  grd true
  lhs {VV#F11 : GHC.Types.Bool | [(VV#F11 = lq_anf__d13n)]}
  rhs {VV#F11 : GHC.Types.Bool | [(? Prop([VV#F11]))]}
  id 11 tag [2]
  // META constraint id 11 : polypred.hs:6:25-30


constraint:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 8; 11; 12]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = lq_anf__d13m)]}
  rhs {VV#F12 : int | [$k__249[VV#248:=VV#F12][lq_tmp_x_245:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_246:=x#a12X][lq_tmp_x_251:=VV#F12][VV#343:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : polypred.hs:6:30


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 39; 8; 11; 12]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = x#a12X)]}
  rhs {VV#F13 : int | [$k__249[VV#248:=VV#F13][lq_tmp_x_245:=fix#GHC.Classes.#36#fEqInt#35#rse][lq_tmp_x_251:=VV#F13][VV#346:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [2]
  // META constraint id 13 : polypred.hs:6:25


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 43]
  grd true
  lhs {VV#F14 : int | []}
  rhs {VV#F14 : int | [$k__213[VV#212:=VV#F14][VV#352:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : polypred.hs:9:19-27




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#284 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__285]}
  
  // META wf  : polypred.hs:12:18-20


wf:
  env [0; 1; 49; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#281 : fix#GHC.Prim.#42# | [$k__282]}
  
  // META wf  : polypred.hs:12:18-20


wf:
  env [0; 1; 2; 3; 51; 4; 5; 6; 7; 8]
  reft {VV#290 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__291]}
  
  // META wf  : polypred.hs:12:18-20


wf:
  env [0; 1; 2; 3; 51; 4; 52; 5; 6; 7; 8]
  reft {VV#287 : fix#GHC.Prim.#42# | [$k__288]}
  
  // META wf  : polypred.hs:12:18-20


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#271 : (GHC.Prim.Any  fix#GHC.Prim.#42#) | [$k__272]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 54; 7; 8]
  reft {VV#268 : fix#GHC.Prim.#42# | [$k__269]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#263 : GHC.Types.Bool | [$k__264]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#227 : int | [$k__228]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 11; 12]
  reft {VV#248 : int | [$k__249]}
  
  // META wf  : polypred.hs:6:27-28


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 11]
  reft {VV#231 : GHC.Types.Bool | [$k__232]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#208 : a_a136 | [$k__209]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#212 : int | [$k__213]}
  
  // META wf  : <no location info>







