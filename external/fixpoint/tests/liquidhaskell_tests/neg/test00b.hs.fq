qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Types.False#68 : {VV#173 : GHC.Types.Bool | []}
bind 1 GHC.Types.True#6u : {VV#175 : GHC.Types.Bool | []}
bind 2 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#177 : (GHC.Classes.Ord  int) | []}
bind 3 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#178 : (GHC.Num.Num  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#181 : GHC.Types.Ordering | [(VV#181 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#182 : GHC.Types.Ordering | [(VV#182 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#183 : GHC.Types.Ordering | [(VV#183 = GHC.Types.GT#6W)]}
bind 7 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 8 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 9 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 10 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 11 GHC.Types.EQ#6U : {VV#227 : GHC.Types.Ordering | [(cmp([VV#227]) = GHC.Types.EQ#6U)]}
bind 12 GHC.Types.LT#6S : {VV#228 : GHC.Types.Ordering | [(cmp([VV#228]) = GHC.Types.LT#6S)]}
bind 13 GHC.Types.GT#6W : {VV#229 : GHC.Types.Ordering | [(cmp([VV#229]) = GHC.Types.GT#6W)]}
bind 14 fix##36#dNum_a14e : {VV#233 : (GHC.Num.Num  a_a141) | []}
bind 15 a_a141 : {VV : num | []}
bind 16 fix##36#dOrd_a14f : {VV#234 : (GHC.Classes.Ord  a_a141) | []}
bind 17 z#a13L : {VV#235 : a_a141 | [$k__236]}
bind 18 lq_anf__d14K : {lq_tmp_x_242 : int | [(lq_tmp_x_242 = 0)]}
bind 19 lq_anf__d14L : {VV : a_a141 | [(VV = lq_anf__d14K)]}
bind 20 lq_anf__d14M : {lq_tmp_x_255 : GHC.Types.Bool | [((? Prop([lq_tmp_x_255])) <=> (z#a13L > lq_anf__d14L))]}
bind 21 fix##36#dNum_a14m : {VV#273 : (GHC.Num.Num  a_a14d) | []}
bind 22 a_a14d : {VV : num | []}
bind 23 x#a13K : {VV#274 : a_a14d | [$k__275]}
bind 24 lq_anf__d14N : {lq_tmp_x_281 : int | [(lq_tmp_x_281 = 0)]}
bind 25 lq_anf__d14O : {VV : a_a14d | [(VV = lq_anf__d14N)]}
bind 26 lq_anf__d14P : {lq_tmp_x_307 : int | [(lq_tmp_x_307 = (0  :  int))]}
bind 27 Test0.x#rZN : {VV#303 : int | [$k__304]}
bind 28 lq_anf__d14Q : {lq_tmp_x_322 : int | [(lq_tmp_x_322 = (0  :  int))]}
bind 29 lq_anf__d14R : {lq_tmp_x_328 : GHC.Types.Bool | [((? Prop([lq_tmp_x_328])) <=> (Test0.x#rZN > lq_anf__d14Q))]}
bind 30 lq_anf__d14S : {lq_tmp_x_344 : GHC.Types.Bool | [(lq_tmp_x_344 = lq_anf__d14R)]}
bind 31 lq_anf__d14S : {lq_tmp_x_346 : GHC.Types.Bool | [(lq_tmp_x_346 = lq_anf__d14R)]}
bind 32 lq_anf__d14S : {lq_tmp_x_346 : GHC.Types.Bool | [(lq_tmp_x_346 = lq_anf__d14R);
                                                         (~ ((? Prop([lq_tmp_x_346]))));
                                                         (~ ((? Prop([lq_tmp_x_346]))));
                                                         (~ ((? Prop([lq_tmp_x_346]))))]}
bind 33 lq_anf__d14S : {lq_tmp_x_352 : GHC.Types.Bool | [(lq_tmp_x_352 = lq_anf__d14R)]}
bind 34 lq_anf__d14S : {lq_tmp_x_352 : GHC.Types.Bool | [(lq_tmp_x_352 = lq_anf__d14R);
                                                         (? Prop([lq_tmp_x_352]));
                                                         (? Prop([lq_tmp_x_352]));
                                                         (? Prop([lq_tmp_x_352]))]}
bind 35 lq_anf__d14T : {lq_tmp_x_363 : int | [$k__279[fix##36#dNum_a14m:=fix#GHC.Num.#36#fNumInt#35#rhy][x#a13K:=Test0.x#rZN][VV#278:=lq_tmp_x_363][lq_tmp_x_360:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_361:=Test0.x#rZN]]}
bind 36 Test0.prop_abs#r12i : {VV#318 : GHC.Types.Bool | [$k__319]}
bind 37 VV#385 : {VV#385 : GHC.Types.Bool | [$k__240[VV#239:=VV#385][fix##36#dNum_a14e:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dOrd_a14f:=fix#GHC.Classes.#36#fOrdInt#35#rhx][z#a13L:=lq_anf__d14T][lq_tmp_x_374:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_375:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_376:=lq_anf__d14T][lq_tmp_x_370:=VV#385]]}
bind 38 VV#385 : {VV#385 : GHC.Types.Bool | [$k__240[VV#239:=VV#385][fix##36#dNum_a14e:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dOrd_a14f:=fix#GHC.Classes.#36#fOrdInt#35#rhx][z#a13L:=lq_anf__d14T][lq_tmp_x_374:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_375:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_376:=lq_anf__d14T][lq_tmp_x_370:=VV#385]]}
bind 39 VV#388 : {VV#388 : int | [(VV#388 = lq_anf__d14T)]}
bind 40 VV#388 : {VV#388 : int | [(VV#388 = lq_anf__d14T)]}
bind 41 VV#391 : {VV#391 : int | [(VV#391 = Test0.x#rZN)]}
bind 42 VV#391 : {VV#391 : int | [(VV#391 = Test0.x#rZN)]}
bind 43 VV#394 : {VV#394 : GHC.Types.Bool | [(VV#394 = GHC.Types.False#68)]}
bind 44 VV#394 : {VV#394 : GHC.Types.Bool | [(VV#394 = GHC.Types.False#68)]}
bind 45 VV#397 : {VV#397 : int | [(VV#397 = lq_anf__d14Q)]}
bind 46 VV#397 : {VV#397 : int | [(VV#397 = lq_anf__d14Q)]}
bind 47 VV#400 : {VV#400 : int | [(VV#400 = Test0.x#rZN)]}
bind 48 VV#400 : {VV#400 : int | [(VV#400 = Test0.x#rZN)]}
bind 49 VV#403 : {VV#403 : int | [(VV#403 = 0)]}
bind 50 VV#403 : {VV#403 : int | [(VV#403 = 0)]}
bind 51 VV#406 : {VV#406 : int | []}
bind 52 VV#406 : {VV#406 : int | []}
bind 53 VV#409 : {VV#409 : int | [(VV#409 = lq_anf__d14P)]}
bind 54 VV#409 : {VV#409 : int | [(VV#409 = lq_anf__d14P)]}
bind 55 VV#412 : {VV#412 : int | [(VV#412 = 0)]}
bind 56 VV#412 : {VV#412 : int | [(VV#412 = 0)]}
bind 57 VV : {VV : a_a14d | [(VV = (lq_anf__d14O - x#a13K))]}
bind 58 VV#274 : {VV#274 : a_a14d | [(VV#274 = x#a13K)]}
bind 59 VV : {VV : a_a14d | [(VV = lq_anf__d14O)]}
bind 60 VV#418 : {VV#418 : int | [(VV#418 = lq_anf__d14N)]}
bind 61 VV#418 : {VV#418 : int | [(VV#418 = lq_anf__d14N)]}
bind 62 VV#421 : {VV#421 : GHC.Types.Bool | [(? Prop([VV#421]))]}
bind 63 VV#421 : {VV#421 : GHC.Types.Bool | [(? Prop([VV#421]))]}
bind 64 VV#424 : {VV#424 : GHC.Types.Bool | [(VV#424 = lq_anf__d14M)]}
bind 65 VV#424 : {VV#424 : GHC.Types.Bool | [(VV#424 = lq_anf__d14M)]}
bind 66 VV : {VV : a_a141 | [(VV = lq_anf__d14L)]}
bind 67 VV#235 : {VV#235 : a_a141 | [(VV#235 = z#a13L)]}
bind 68 VV#429 : {VV#429 : int | [(VV#429 = lq_anf__d14K)]}
bind 69 VV#429 : {VV#429 : int | [(VV#429 = lq_anf__d14K)]}
bind 70 VV#335 : {VV#335 : int | [$k__336]}
bind 71 VV#318 : {VV#318 : GHC.Types.Bool | [$k__319]}
bind 72 VV#303 : {VV#303 : int | [$k__304]}
bind 73 VV#239 : {VV#239 : GHC.Types.Bool | [$k__240]}




constraint:
  env [0;
       1;
       33;
       2;
       34;
       3;
       35;
       4;
       5;
       37;
       6;
       7;
       8;
       9;
       10;
       11;
       27;
       12;
       28;
       13;
       29;
       30]
  grd true
  lhs {VV#F1 : GHC.Types.Bool | [$k__240[VV#239:=VV#F1][fix##36#dNum_a14e:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dOrd_a14f:=fix#GHC.Classes.#36#fOrdInt#35#rhx][z#a13L:=lq_anf__d14T][lq_tmp_x_374:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_375:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_376:=lq_anf__d14T][lq_tmp_x_370:=VV#F1][VV#385:=VV#F1][VV#F:=VV#F1]]}
  rhs {VV#F1 : GHC.Types.Bool | [$k__319[VV#318:=VV#F1][VV#385:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : test00b.hs:11:26-36


constraint:
  env [0;
       1;
       33;
       2;
       34;
       3;
       35;
       4;
       5;
       6;
       7;
       39;
       8;
       9;
       10;
       11;
       27;
       12;
       28;
       13;
       29;
       30]
  grd true
  lhs {VV#F2 : int | [(VV#F2 = lq_anf__d14T)]}
  rhs {VV#F2 : int | [$k__236[fix##36#dNum_a14e:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dOrd_a14f:=fix#GHC.Classes.#36#fOrdInt#35#rhx][VV#235:=VV#F2][lq_tmp_x_374:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_375:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_378:=VV#F2][VV#388:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [4]
  // META constraint id 2 : test00b.hs:11:31-35


constraint:
  env [0;
       1;
       33;
       2;
       34;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       41;
       10;
       11;
       27;
       12;
       28;
       13;
       29;
       30]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = Test0.x#rZN)]}
  rhs {VV#F3 : int | [$k__275[fix##36#dNum_a14m:=fix#GHC.Num.#36#fNumInt#35#rhy][VV#274:=VV#F3][lq_tmp_x_360:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_363:=VV#F3][VV#391:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : test00b.hs:11:35


constraint:
  env [0;
       32;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       27;
       43;
       12;
       28;
       13;
       29;
       30;
       31]
  grd true
  lhs {VV#F4 : GHC.Types.Bool | [(VV#F4 = GHC.Types.False#68)]}
  rhs {VV#F4 : GHC.Types.Bool | [$k__319[VV#318:=VV#F4][VV#394:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : test00b.hs:11:43-47


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 13; 45]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = lq_anf__d14Q)]}
  rhs {VV#F5 : int | [$k__336[VV#335:=VV#F5][lq_tmp_x_332:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_333:=Test0.x#rZN][lq_tmp_x_338:=VV#F5][VV#397:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : test00b.hs:11:19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 13; 47]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = Test0.x#rZN)]}
  rhs {VV#F6 : int | [$k__336[VV#335:=VV#F6][lq_tmp_x_332:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_338:=VV#F6][VV#400:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : test00b.hs:11:15


constraint:
  env [0; 1; 2; 3; 51; 4; 5; 6; 7; 8; 9; 10; 26; 11; 12; 13]
  grd true
  lhs {VV#F7 : int | []}
  rhs {VV#F7 : int | [$k__304[VV#303:=VV#F7][VV#406:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [3]
  // META constraint id 7 : test00b.hs:5:5-12


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       25;
       57;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F8 : a_a14d | [(VV#F8 = (lq_anf__d14O - x#a13K))]}
  rhs {VV#F8 : a_a14d | [$k__279[VV#278:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : test00b.hs:8:9-13


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       62;
       15]
  grd true
  lhs {VV#F9 : GHC.Types.Bool | [(? Prop([VV#F9]))]}
  rhs {VV#F9 : GHC.Types.Bool | [$k__240[VV#239:=VV#F9][VV#421:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : test00b.hs:14:9-29


constraint:
  env [0;
       16;
       64;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F10 : GHC.Types.Bool | [(VV#F10 = lq_anf__d14M)]}
  rhs {VV#F10 : GHC.Types.Bool | [(? Prop([VV#F10]))]}
  id 10 tag [1]
  // META constraint id 10 : test00b.hs:14:24-28


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       66;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F11 : a_a141 | [(VV#F11 = lq_anf__d14L)]}
  rhs {VV#F11 : a_a141 | [$k__263[lq_tmp_x_259:=fix##36#dOrd_a14f][lq_tmp_x_260:=z#a13L][VV#262:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : test00b.hs:14:28


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       67;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F12 : a_a141 | [(VV#F12 = z#a13L)]}
  rhs {VV#F12 : a_a141 | [$k__263[lq_tmp_x_259:=fix##36#dOrd_a14f][VV#262:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : test00b.hs:14:24




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 28; 13]
  reft {VV#335 : int | [$k__336]}
  
  // META wf  : test00b.hs:11:17


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 27; 12; 13]
  reft {VV#318 : GHC.Types.Bool | [$k__319]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#303 : int | [$k__304]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#274 : a_a14d | [$k__275]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 22; 7; 23; 8; 9; 10; 11; 12; 13]
  reft {VV#278 : a_a14d | [$k__279]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#235 : a_a141 | [$k__236]}
  
  // META wf  : <no location info>


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#262 : a_a141 | [$k__263]}
  
  // META wf  : test00b.hs:14:26


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#239 : GHC.Types.Bool | [$k__240]}
  
  // META wf  : <no location info>







