qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_aY3, fix##126#A0 : int): (? papp2([p;
                                                      VV;
                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(vv : int, fix##126#A0 : int): (vv = fix##126#A0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : int, fix##126#A0 : int): (VV = (fix##126#A0 + 1)) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : a_aY3, fix##126#A0 : int): (? papp2([p;
                                                      VV;
                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(vv : int, fix##126#A0 : int): (vv = fix##126#A0) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : int): (v >= 0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : int): (VV = 0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : a_aY3, fix##126#A0 : int): (? papp2([p;
                                                      VV;
                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(vv : int, fix##126#A0 : int): (vv = fix##126#A0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : a_aY3): false // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      (fix##126#A0 + 1)])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int)): (? papp2([fix##126#P;
                                                                   v;
                                                                   0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : a_aY3, fix##126#A0 : int): (? papp2([p;
                                                      VV;
                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(vv : int, fix##126#A0 : int): (vv = fix##126#A0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : int, fix##126#A0 : int): (VV = (fix##126#A0 + 1)) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : a_aY3, fix##126#A0 : int): (? papp2([p;
                                                      VV;
                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(vv : int, fix##126#A0 : int): (vv = fix##126#A0) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : int): (v >= 0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : int): (VV = 0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : a_aY3, fix##126#A0 : int): (? papp2([p;
                                                      VV;
                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(vv : int, fix##126#A0 : int): (vv = fix##126#A0) // "foldN1.hs" (line 11, column 1)
qualif Auto(VV : a_aY3): false // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      (fix##126#A0 + 1)])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int)): (? papp2([fix##126#P;
                                                                   v;
                                                                   0])) // "foldN1.hs" (line 11, column 1)
qualif Auto(v : a_aY3, fix##126#P : (Pred  a_aY3  int), fix##126#A0 : int): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#A0])) // "foldN1.hs" (line 11, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)


cut $k__177
cut $k__180
cut $k__183


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant GHC.Types.False#68 : (GHC.Types.Bool)
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant GHC.Types.True#6u : (GHC.Types.Bool)
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))




bind 0 GHC.Prim.void##0l : {VV#125 : GHC.Prim.Void# | []}
bind 1 GHC.Types.False#68 : {VV#126 : GHC.Types.Bool | []}
bind 2 GHC.Types.True#6u : {VV#128 : GHC.Types.Bool | []}
bind 3 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#131 : (GHC.Classes.Ord  int) | []}
bind 4 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#132 : (GHC.Num.Num  int) | []}
bind 5 GHC.Types.EQ#6U : {VV#133 : GHC.Types.Ordering | [(VV#133 = GHC.Types.EQ#6U)]}
bind 6 GHC.Types.LT#6S : {VV#134 : GHC.Types.Ordering | [(VV#134 = GHC.Types.LT#6S)]}
bind 7 GHC.Types.GT#6W : {VV#135 : GHC.Types.Ordering | [(VV#135 = GHC.Types.GT#6W)]}
bind 8 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 9 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 10 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 11 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 12 GHC.Types.EQ#6U : {VV#161 : GHC.Types.Ordering | [(cmp([VV#161]) = GHC.Types.EQ#6U)]}
bind 13 GHC.Types.LT#6S : {VV#162 : GHC.Types.Ordering | [(cmp([VV#162]) = GHC.Types.LT#6S)]}
bind 14 GHC.Types.GT#6W : {VV#163 : GHC.Types.Ordering | [(cmp([VV#163]) = GHC.Types.GT#6W)]}
bind 15 p : {VV#172 : (Pred  a_aY3  int) | []}
bind 16 x0 : {VV#173 : int | []}
bind 17 n#aXS : {v : int | [(v >= 0)]}
bind 18 i#aXU : {VV#176 : int | [$k__177]}
bind 19 x#aXV : {VV#179 : a_aY3 | [$k__180[i#aXU:=i#aXU][lq_tmp_x_185:=i#aXU][lq_tmp_x_187:=i#aXU]]}
bind 20 lq_anf__dYo : {lq_tmp_x_193 : GHC.Types.Bool | [((? Prop([lq_tmp_x_193])) <=> (i#aXU < n#aXS))]}
bind 21 lq_anf__dYp : {lq_tmp_x_209 : GHC.Types.Bool | [(lq_tmp_x_209 = lq_anf__dYo)]}
bind 22 lq_anf__dYp : {lq_tmp_x_211 : GHC.Types.Bool | [(lq_tmp_x_211 = lq_anf__dYo)]}
bind 23 lq_anf__dYp : {lq_tmp_x_211 : GHC.Types.Bool | [(lq_tmp_x_211 = lq_anf__dYo);
                                                        (~ ((? Prop([lq_tmp_x_211]))));
                                                        (~ ((? Prop([lq_tmp_x_211]))));
                                                        (~ ((? Prop([lq_tmp_x_211]))))]}
bind 24 ds_dYn : {VV#216 : GHC.Prim.Void# | [$k__217]}
bind 25 lq_anf__dYp : {lq_tmp_x_221 : GHC.Types.Bool | [(lq_tmp_x_221 = lq_anf__dYo)]}
bind 26 lq_anf__dYp : {lq_tmp_x_221 : GHC.Types.Bool | [(lq_tmp_x_221 = lq_anf__dYo);
                                                        (? Prop([lq_tmp_x_221]));
                                                        (? Prop([lq_tmp_x_221]));
                                                        (? Prop([lq_tmp_x_221]))]}
bind 27 lq_anf__dYq : {lq_tmp_x_227 : int | [(lq_tmp_x_227 = (1  :  int))]}
bind 28 lq_anf__dYr : {lq_tmp_x_240 : int | [(lq_tmp_x_240 = (i#aXU + lq_anf__dYq))]}
bind 29 lq_tmp_x_254 : {lq_tmp_x_247 : int | [(lq_tmp_x_247 = (i#aXU + 1))]}
bind 30 lq_anf__dYs : {VV : a_aY3 | [(? papp2([p;
                                               VV;
                                               lq_tmp_x_254]))]}
bind 31 lq_anf__dYt : {lq_tmp_x_270 : int | [(lq_tmp_x_270 = (0  :  int))]}
bind 32 lq_tmp_x_283 : {VV#284 : int | [(VV#284 = 0)]}
bind 33 VV : {VV : a_aY3 | [(? papp2([p; VV; lq_tmp_x_283]))]}
bind 34 lq_tmp_x_286 : {VV#287 : int | [(VV#287 = 0)]}
bind 35 lq_tmp_x_171 : {VV : a_aY3 | [(? papp2([p;
                                                VV;
                                                lq_tmp_x_286]))]}
bind 36 VV#182 : {VV#182 : a_aY3 | [$k__183[i#aXU:=lq_anf__dYt][x#aXV:=lq_tmp_x_171][lq_tmp_x_185:=lq_anf__dYt][lq_tmp_x_186:=lq_tmp_x_171][lq_tmp_x_187:=lq_anf__dYt][lq_tmp_x_188:=lq_tmp_x_171][lq_tmp_x_266:=lq_anf__dYt][lq_tmp_x_267:=lq_tmp_x_171][lq_tmp_x_278:=lq_anf__dYt][lq_tmp_x_279:=lq_tmp_x_171]]}
bind 37 VV#290 : {VV#290 : int | [(VV#290 = lq_anf__dYt)]}
bind 38 VV#290 : {VV#290 : int | [(VV#290 = lq_anf__dYt)]}
bind 39 VV#293 : {VV#293 : int | [(VV#293 = 0)]}
bind 40 VV#293 : {VV#293 : int | [(VV#293 = 0)]}
bind 41 VV#182 : {VV#182 : a_aY3 | [$k__183[i#aXU:=lq_anf__dYr][x#aXV:=lq_anf__dYs][lq_tmp_x_185:=lq_anf__dYr][lq_tmp_x_186:=lq_anf__dYs][lq_tmp_x_187:=lq_anf__dYr][lq_tmp_x_188:=lq_anf__dYs]]}
bind 42 VV : {VV : a_aY3 | [(VV = lq_anf__dYs)]}
bind 43 VV#298 : {VV#298 : int | [(VV#298 = lq_anf__dYr)]}
bind 44 VV#298 : {VV#298 : int | [(VV#298 = lq_anf__dYr)]}
bind 45 VV#179 : {VV#179 : a_aY3 | [(VV#179 = x#aXV)]}
bind 46 VV#302 : {VV#302 : int | [(VV#302 = i#aXU)]}
bind 47 VV#302 : {VV#302 : int | [(VV#302 = i#aXU)]}
bind 48 VV#305 : {VV#305 : int | [(VV#305 = lq_anf__dYq)]}
bind 49 VV#305 : {VV#305 : int | [(VV#305 = lq_anf__dYq)]}
bind 50 VV#308 : {VV#308 : int | [(VV#308 = i#aXU)]}
bind 51 VV#308 : {VV#308 : int | [(VV#308 = i#aXU)]}
bind 52 VV#311 : {VV#311 : int | [(VV#311 = 1)]}
bind 53 VV#311 : {VV#311 : int | [(VV#311 = 1)]}
bind 54 VV#179 : {VV#179 : a_aY3 | [(VV#179 = x#aXV)]}
bind 55 VV#315 : {VV#315 : GHC.Prim.Void# | [(VV#315 = GHC.Prim.void##0l)]}
bind 56 VV#315 : {VV#315 : GHC.Prim.Void# | [(VV#315 = GHC.Prim.void##0l)]}
bind 57 VV#318 : {VV#318 : int | [(VV#318 = n#aXS)]}
bind 58 VV#318 : {VV#318 : int | [(VV#318 = n#aXS)]}
bind 59 VV#321 : {VV#321 : int | [(VV#321 = i#aXU)]}
bind 60 VV#321 : {VV#321 : int | [(VV#321 = i#aXU)]}
bind 61 VV#216 : {VV#216 : GHC.Prim.Void# | [$k__217]}
bind 62 VV#200 : {VV#200 : int | [$k__201]}
bind 63 VV#176 : {VV#176 : int | [$k__177]}
bind 64 i#aXU : {VV#176 : int | [$k__177]}
bind 65 x#aXV : {VV#179 : a_aY3 | [$k__180]}




constraint:
  env [0;
       16;
       32;
       1;
       17;
       33;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       31]
  grd true
  lhs {VV#F1 : a_aY3 | [(? papp2([p; VV#F1; lq_tmp_x_283]))]}
  rhs {VV#F1 : a_aY3 | [$k__180[i#aXU:=lq_anf__dYt][lq_tmp_x_185:=lq_anf__dYt][lq_tmp_x_187:=lq_anf__dYt][lq_tmp_x_266:=lq_anf__dYt][lq_tmp_x_278:=lq_anf__dYt][VV#179:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]
  // META constraint id 1 : foldN1.hs:11:13-16


constraint:
  env [0;
       16;
       1;
       17;
       2;
       34;
       3;
       35;
       4;
       36;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       31]
  grd true
  lhs {VV#F2 : a_aY3 | [$k__183[i#aXU:=lq_anf__dYt][x#aXV:=lq_tmp_x_171][lq_tmp_x_185:=lq_anf__dYt][lq_tmp_x_186:=lq_tmp_x_171][lq_tmp_x_187:=lq_anf__dYt][lq_tmp_x_188:=lq_tmp_x_171][lq_tmp_x_266:=lq_anf__dYt][lq_tmp_x_267:=lq_tmp_x_171][lq_tmp_x_278:=lq_anf__dYt][lq_tmp_x_279:=lq_tmp_x_171][VV#182:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : a_aY3 | [false]}
  id 2 tag [1]
  // META constraint id 2 : foldN1.hs:11:13-16


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       5;
       37;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       31]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = lq_anf__dYt)]}
  rhs {VV#F3 : int | [$k__177[VV#176:=VV#F3][lq_tmp_x_263:=VV#F3][lq_tmp_x_275:=VV#F3][VV#290:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : foldN1.hs:11:16


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       25;
       41;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       29;
       14;
       30;
       15]
  grd true
  lhs {VV#F4 : a_aY3 | [$k__183[i#aXU:=lq_anf__dYr][x#aXV:=lq_anf__dYs][lq_tmp_x_185:=lq_anf__dYr][lq_tmp_x_186:=lq_anf__dYs][lq_tmp_x_187:=lq_anf__dYr][lq_tmp_x_188:=lq_anf__dYs][VV#182:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : a_aY3 | [$k__183[i#aXU:=i#aXU][x#aXV:=x#aXV][lq_tmp_x_185:=i#aXU][lq_tmp_x_186:=x#aXV][lq_tmp_x_187:=i#aXU][lq_tmp_x_188:=x#aXV][VV#182:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : foldN1.hs:12:30-45


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       42;
       11;
       27;
       12;
       28;
       13;
       29;
       14;
       30;
       15]
  grd true
  lhs {VV#F5 : a_aY3 | [(VV#F5 = lq_anf__dYs)]}
  rhs {VV#F5 : a_aY3 | [$k__180[i#aXU:=lq_anf__dYr][lq_tmp_x_185:=lq_anf__dYr][lq_tmp_x_187:=lq_anf__dYr][VV#179:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]
  // META constraint id 5 : foldN1.hs:12:40-44


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       43;
       12;
       28;
       13;
       29;
       14;
       30;
       15]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = lq_anf__dYr)]}
  rhs {VV#F6 : int | [$k__177[VV#176:=VV#F6][VV#298:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : foldN1.hs:12:34-36


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       43;
       12;
       28;
       13;
       29;
       14;
       30;
       15]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = lq_anf__dYr)]}
  rhs {VV#F7 : int | [(VV#F7 < i#aXU)]}
  id 7 tag [1]
  // META constraint id 7 : foldN1.hs:12:34-36


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       43;
       12;
       28;
       13;
       29;
       14;
       30;
       15]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = lq_anf__dYr)]}
  rhs {VV#F8 : int | [(VV#F8 >= 0)]}
  id 8 tag [1]
  // META constraint id 8 : foldN1.hs:12:34-36


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       12;
       28;
       13;
       45;
       14;
       15]
  grd true
  lhs {VV#F9 : a_aY3 | [(VV#F9 = x#aXV)]}
  rhs {VV#F9 : a_aY3 | [(? papp2([p; VV#F9; i#aXU]))]}
  id 9 tag [1]
  // META constraint id 9 : foldN1.hs:12:44


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       54;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F10 : a_aY3 | [(VV#F10 = x#aXV)]}
  rhs {VV#F10 : a_aY3 | [$k__183[i#aXU:=i#aXU][x#aXV:=x#aXV][lq_tmp_x_185:=i#aXU][lq_tmp_x_186:=x#aXV][lq_tmp_x_187:=i#aXU][lq_tmp_x_188:=x#aXV][VV#182:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : foldN1.hs:(12,9)-(13,30)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       55;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F11 : GHC.Prim.Void# | [(VV#F11 = GHC.Prim.void##0l)]}
  rhs {VV#F11 : GHC.Prim.Void# | [$k__217[VV#216:=VV#F11][VV#315:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : foldN1.hs:(12,9)-(13,30)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       57;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F12 : int | [(VV#F12 = n#aXS)]}
  rhs {VV#F12 : int | [$k__201[VV#200:=VV#F12][lq_tmp_x_197:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_198:=i#aXU][lq_tmp_x_203:=VV#F12][VV#318:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : foldN1.hs:12:22


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       59;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = i#aXU)]}
  rhs {VV#F13 : int | [$k__201[VV#200:=VV#F13][lq_tmp_x_197:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_203:=VV#F13][VV#321:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : foldN1.hs:12:18




wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#216 : GHC.Prim.Void# | [$k__217]}
  
  // META wf  : foldN1.hs:(12,9)-(13,30)


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#200 : int | [$k__201]}
  
  // META wf  : foldN1.hs:12:20


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#176 : int | [$k__177]}
  
  // META wf  : foldN1.hs:11:1-5


wf:
  env [0;
       16;
       64;
       1;
       17;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#179 : a_aY3 | [$k__180]}
  
  // META wf  : foldN1.hs:11:1-5


wf:
  env [0;
       16;
       64;
       1;
       17;
       65;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#182 : a_aY3 | [$k__183]}
  
  // META wf  : foldN1.hs:11:1-5







