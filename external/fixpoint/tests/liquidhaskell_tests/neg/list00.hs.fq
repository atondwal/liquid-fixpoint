qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Integer.Type.#36#fEqInteger#35#rX4 : {VV#182 : (GHC.Classes.Eq  int) | []}
bind 2 GHC.Types.EQ#6U : {VV#183 : GHC.Types.Ordering | [(VV#183 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#184 : GHC.Types.Ordering | [(VV#184 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#185 : GHC.Types.Ordering | [(VV#185 = GHC.Types.GT#6W)]}
bind 5 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 6 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 7 GHC.Types.EQ#6U : {VV#227 : GHC.Types.Ordering | [(cmp([VV#227]) = GHC.Types.EQ#6U)]}
bind 8 GHC.Types.LT#6S : {VV#228 : GHC.Types.Ordering | [(cmp([VV#228]) = GHC.Types.LT#6S)]}
bind 9 GHC.Types.GT#6W : {VV#229 : GHC.Types.Ordering | [(cmp([VV#229]) = GHC.Types.GT#6W)]}
bind 10 lq_anf__d18B : {lq_tmp_x_236 : int | [(lq_tmp_x_236 = 0)]}
bind 11 lq_anf__d18C : {lq_tmp_x_238 : int | [(lq_tmp_x_238 = 1)]}
bind 12 lq_anf__d18D : {lq_tmp_x_241 : GHC.Types.Bool | [((? Prop([lq_tmp_x_241])) <=> (lq_anf__d18B = lq_anf__d18C))]}
bind 13 Vec0.prop0#r12k : {VV : func(1, [@(0)]) | []}
bind 14 lq_anf__d18E : {lq_tmp_x_276 : int | [(lq_tmp_x_276 = (1  :  int))]}
bind 15 lq_tmp_x_290 : {VV#291 : int | []}
bind 16 lq_anf__d18F : {lq_tmp_x_282 : [int] | [(len([lq_tmp_x_282]) = 0);
                                                ((? null([lq_tmp_x_282])) <=> true);
                                                (len([lq_tmp_x_282]) >= 0)]}
bind 17 lq_tmp_x_308 : {VV#309 : int | []}
bind 18 Vec0.xs#r12h : {VV#272 : [int] | [$k__273;
                                          (len([VV#272]) >= 0)]}
bind 19 zs#a17M : {VV#316 : t_a18f | [$k__317]}
bind 20 Vec0.ys#r12i : {lq_tmp_x_336 : [int] | [$k__331[VV#330:=lq_tmp_x_336][lq_tmp_x_322:=Vec0.xs#r12h];
                                                (lq_tmp_x_336 = Vec0.xs#r12h);
                                                (len([lq_tmp_x_336]) >= 0)]}
bind 21 Vec0.jhala#r12j : {lq_tmp_x_349 : int | [$k__347[VV#346:=lq_tmp_x_349][lq_tmp_x_345:=Vec0.ys#r12i]]}
bind 22 VV#355 : {VV#355 : [int] | [(VV#355 = Vec0.ys#r12i);
                                    (len([VV#355]) >= 0)]}
bind 23 VV#355 : {VV#355 : [int] | [(VV#355 = Vec0.ys#r12i);
                                    (len([VV#355]) >= 0)]}
bind 24 VV#358 : {VV#358 : int | [$k__324[VV#323:=VV#358][VV#330:=VV#355][lq_tmp_x_322:=Vec0.xs#r12h][lq_tmp_x_333:=VV#358][lq_tmp_x_336:=VV#355][lq_tmp_x_353:=VV#355][lq_tmp_x_350:=VV#358]]}
bind 25 VV#358 : {VV#358 : int | [$k__324[VV#323:=VV#358][VV#330:=VV#355][lq_tmp_x_322:=Vec0.xs#r12h][lq_tmp_x_333:=VV#358][lq_tmp_x_336:=VV#355][lq_tmp_x_353:=VV#355][lq_tmp_x_350:=VV#358]]}
bind 26 lq_tmp_x_342 : {VV#361 : int | []}
bind 27 VV#362 : {VV#362 : int | [$k__328[VV#327:=VV#362][lq_tmp_x_326:=lq_tmp_x_342][lq_tmp_x_322:=Vec0.xs#r12h][lq_tmp_x_335:=VV#362][lq_tmp_x_334:=lq_tmp_x_342][lq_tmp_x_351:=lq_tmp_x_342][lq_tmp_x_352:=VV#362]]}
bind 28 VV#362 : {VV#362 : int | [$k__328[VV#327:=VV#362][lq_tmp_x_326:=lq_tmp_x_342][lq_tmp_x_322:=Vec0.xs#r12h][lq_tmp_x_335:=VV#362][lq_tmp_x_334:=lq_tmp_x_342][lq_tmp_x_351:=lq_tmp_x_342][lq_tmp_x_352:=VV#362]]}
bind 29 VV#365 : {VV#365 : [int] | [(VV#365 = Vec0.xs#r12h);
                                    (len([VV#365]) >= 0)]}
bind 30 VV#365 : {VV#365 : [int] | [(VV#365 = Vec0.xs#r12h);
                                    (len([VV#365]) >= 0)]}
bind 31 VV#368 : {VV#368 : int | [$k__266[VV#265:=VV#368][VV#272:=VV#365][lq_tmp_x_340:=VV#365][lq_tmp_x_337:=VV#368]]}
bind 32 VV#368 : {VV#368 : int | [$k__266[VV#265:=VV#368][VV#272:=VV#365][lq_tmp_x_340:=VV#365][lq_tmp_x_337:=VV#368]]}
bind 33 lq_tmp_x_334 : {VV#371 : int | []}
bind 34 VV#372 : {VV#372 : int | [$k__270[VV#269:=VV#372][lq_tmp_x_268:=lq_tmp_x_334][lq_tmp_x_338:=lq_tmp_x_334][lq_tmp_x_339:=VV#372]]}
bind 35 VV#372 : {VV#372 : int | [$k__270[VV#269:=VV#372][lq_tmp_x_268:=lq_tmp_x_334][lq_tmp_x_338:=lq_tmp_x_334][lq_tmp_x_339:=VV#372]]}
bind 36 VV#375 : {VV#375 : [int] | [(len([VV#375]) = (1 + len([lq_anf__d18F])));
                                    ((? null([VV#375])) <=> false);
                                    (xsListSelector([VV#375]) = lq_anf__d18F);
                                    (xListSelector([VV#375]) = lq_anf__d18E);
                                    (len([VV#375]) >= 0)]}
bind 37 VV#375 : {VV#375 : [int] | [(len([VV#375]) = (1 + len([lq_anf__d18F])));
                                    ((? null([VV#375])) <=> false);
                                    (xsListSelector([VV#375]) = lq_anf__d18F);
                                    (xListSelector([VV#375]) = lq_anf__d18E);
                                    (len([VV#375]) >= 0)]}
bind 38 VV#378 : {VV#378 : int | [$k__302[VV#301:=VV#378][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_300:=lq_anf__d18F][lq_tmp_x_296:=VV#375][lq_tmp_x_304:=VV#378]]}
bind 39 VV#378 : {VV#378 : int | [$k__302[VV#301:=VV#378][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_300:=lq_anf__d18F][lq_tmp_x_296:=VV#375][lq_tmp_x_304:=VV#378]]}
bind 40 lq_tmp_x_268 : {VV#381 : int | []}
bind 41 VV#382 : {VV#382 : int | [$k__306[lq_tmp_x_308:=lq_tmp_x_268][VV#305:=VV#382][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_300:=lq_anf__d18F][lq_tmp_x_295:=lq_tmp_x_268][lq_tmp_x_304:=VV#382]]}
bind 42 VV#382 : {VV#382 : int | [$k__306[lq_tmp_x_308:=lq_tmp_x_268][VV#305:=VV#382][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_300:=lq_anf__d18F][lq_tmp_x_295:=lq_tmp_x_268][lq_tmp_x_304:=VV#382]]}
bind 43 VV#385 : {VV#385 : [int] | [(VV#385 = lq_anf__d18F);
                                    (len([VV#385]) >= 0)]}
bind 44 VV#385 : {VV#385 : [int] | [(VV#385 = lq_anf__d18F);
                                    (len([VV#385]) >= 0)]}
bind 45 VV#388 : {VV#388 : int | [$k__284[VV#283:=VV#388][lq_tmp_x_286:=VV#388][lq_tmp_x_282:=VV#385][lq_tmp_x_314:=VV#385][lq_tmp_x_311:=VV#388]]}
bind 46 VV#388 : {VV#388 : int | [$k__284[VV#283:=VV#388][lq_tmp_x_286:=VV#388][lq_tmp_x_282:=VV#385][lq_tmp_x_314:=VV#385][lq_tmp_x_311:=VV#388]]}
bind 47 lq_tmp_x_293 : {VV#391 : int | []}
bind 48 VV#392 : {VV#392 : int | [$k__288[lq_tmp_x_290:=lq_tmp_x_293][VV#287:=VV#392][lq_tmp_x_286:=VV#392][lq_tmp_x_281:=lq_tmp_x_293][lq_tmp_x_312:=lq_tmp_x_293][lq_tmp_x_313:=VV#392]]}
bind 49 VV#392 : {VV#392 : int | [$k__288[lq_tmp_x_290:=lq_tmp_x_293][VV#287:=VV#392][lq_tmp_x_286:=VV#392][lq_tmp_x_281:=lq_tmp_x_293][lq_tmp_x_312:=lq_tmp_x_293][lq_tmp_x_313:=VV#392]]}
bind 50 VV#395 : {VV#395 : int | [(VV#395 = lq_anf__d18E)]}
bind 51 VV#395 : {VV#395 : int | [(VV#395 = lq_anf__d18E)]}
bind 52 VV#398 : {VV#398 : int | [(VV#398 = 1)]}
bind 53 VV#398 : {VV#398 : int | [(VV#398 = 1)]}
bind 54 VV#260 : {VV#260 : a_a180 | [$k__261[lq_tmp_x_259:=lq_anf__d18D]]}
bind 55 VV#402 : {VV#402 : GHC.Types.Bool | [(VV#402 = lq_anf__d18D)]}
bind 56 VV#402 : {VV#402 : GHC.Types.Bool | [(VV#402 = lq_anf__d18D)]}
bind 57 VV#405 : {VV#405 : int | [(VV#405 = lq_anf__d18C)]}
bind 58 VV#405 : {VV#405 : int | [(VV#405 = lq_anf__d18C)]}
bind 59 VV#408 : {VV#408 : int | [(VV#408 = lq_anf__d18B)]}
bind 60 VV#408 : {VV#408 : int | [(VV#408 = lq_anf__d18B)]}
bind 61 VV#346 : {VV#346 : int | [$k__347]}
bind 62 VV#330 : {VV#330 : [int] | [$k__331; (len([VV#330]) >= 0)]}
bind 63 VV#323 : {VV#323 : int | [$k__324]}
bind 64 lq_tmp_x_326 : {VV#414 : int | []}
bind 65 VV#327 : {VV#327 : int | [$k__328]}
bind 66 VV#305 : {VV#305 : int | [$k__306]}
bind 67 VV#301 : {VV#301 : int | [$k__302]}
bind 68 VV#287 : {VV#287 : int | [$k__288]}
bind 69 VV#283 : {VV#283 : int | [$k__284]}
bind 70 VV#272 : {VV#272 : [int] | [$k__273; (len([VV#272]) >= 0)]}
bind 71 VV#265 : {VV#265 : int | [$k__266]}
bind 72 lq_tmp_x_268 : {VV#422 : int | []}
bind 73 VV#269 : {VV#269 : int | [$k__270]}
bind 74 VV#248 : {VV#248 : int | [$k__249]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 57; 10; 11]
  grd true
  lhs {VV#F16 : int | [(VV#F16 = lq_anf__d18C)]}
  rhs {VV#F16 : int | [$k__249[VV#248:=VV#F16][lq_tmp_x_245:=fix#GHC.Integer.Type.#36#fEqInteger#35#rX4][lq_tmp_x_246:=lq_anf__d18B][lq_tmp_x_251:=VV#F16][VV#405:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]
  // META constraint id 16 : list00.hs:10:21


constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 22; 7; 8; 9; 13]
  grd true
  lhs {VV#F1 : [int] | [(VV#F1 = Vec0.ys#r12i); (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [int] | [(len([VV#F1]) > 0)]}
  id 1 tag [5]
  // META constraint id 1 : list00.hs:9:14-15


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 59]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = lq_anf__d18B)]}
  rhs {VV#F17 : int | [$k__249[VV#248:=VV#F17][lq_tmp_x_245:=fix#GHC.Integer.Type.#36#fEqInteger#35#rX4][lq_tmp_x_251:=VV#F17][VV#408:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [1]
  // META constraint id 17 : list00.hs:10:16


constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 7; 23; 8; 24; 9; 13]
  grd true
  lhs {VV#F2 : int | [$k__324[VV#323:=VV#F2][VV#330:=VV#355][lq_tmp_x_322:=Vec0.xs#r12h][lq_tmp_x_333:=VV#F2][lq_tmp_x_336:=VV#355][lq_tmp_x_353:=VV#355][lq_tmp_x_350:=VV#F2][VV#358:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [$k__347[VV#346:=VV#F2][lq_tmp_x_343:=VV#355][lq_tmp_x_349:=VV#F2][VV#358:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [5]
  // META constraint id 2 : list00.hs:9:14-15


constraint:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13; 29]
  grd true
  lhs {VV#F3 : [int] | [(VV#F3 = Vec0.xs#r12h); (len([VV#F3]) >= 0)]}
  rhs {VV#F3 : [int] | [$k__331[VV#330:=VV#F3][lq_tmp_x_336:=VV#F3][VV#365:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : list00.hs:8:18-19


constraint:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13; 29]
  grd true
  lhs {VV#F4 : [int] | [(VV#F4 = Vec0.xs#r12h); (len([VV#F4]) >= 0)]}
  rhs {VV#F4 : [int] | [$k__317[VV#316:=VV#F4][lq_tmp_x_336:=VV#F4][VV#365:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [4]
  // META constraint id 4 : list00.hs:8:18-19


constraint:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13; 30; 31]
  grd true
  lhs {VV#F5 : int | [$k__266[VV#265:=VV#F5][VV#272:=VV#365][lq_tmp_x_340:=VV#365][lq_tmp_x_337:=VV#F5][VV#368:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__324[VV#323:=VV#F5][VV#330:=VV#365][lq_tmp_x_336:=VV#365][lq_tmp_x_333:=VV#F5][VV#368:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [4]
  // META constraint id 5 : list00.hs:8:18-19


constraint:
  env [0; 1; 33; 2; 18; 34; 3; 4; 5; 6; 7; 8; 9; 13; 30]
  grd true
  lhs {VV#F6 : int | [$k__270[VV#269:=VV#F6][lq_tmp_x_268:=lq_tmp_x_334][lq_tmp_x_338:=lq_tmp_x_334][lq_tmp_x_339:=VV#F6][VV#372:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__328[VV#327:=VV#F6][lq_tmp_x_326:=lq_tmp_x_334][lq_tmp_x_335:=VV#F6][VV#372:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [4]
  // META constraint id 6 : list00.hs:8:18-19


constraint:
  env [0; 16; 1; 2; 3; 4; 36; 5; 6; 7; 8; 9; 13; 14]
  grd true
  lhs {VV#F7 : [int] | [(len([VV#F7]) = (1 + len([lq_anf__d18F])));
                        ((? null([VV#F7])) <=> false);
                        (xsListSelector([VV#F7]) = lq_anf__d18F);
                        (xListSelector([VV#F7]) = lq_anf__d18E);
                        (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [int] | [$k__273[VV#272:=VV#F7][VV#375:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]
  // META constraint id 7 : list00.hs:7:9-11


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 37; 6; 38; 7; 8; 9; 13; 14]
  grd true
  lhs {VV#F8 : int | [$k__302[VV#301:=VV#F8][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_300:=lq_anf__d18F][lq_tmp_x_296:=VV#375][lq_tmp_x_304:=VV#F8][VV#378:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__266[VV#272:=VV#375][VV#265:=VV#F8][VV#378:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]
  // META constraint id 8 : list00.hs:7:9-11


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 37; 6; 7; 8; 40; 9; 41; 13; 14]
  grd true
  lhs {VV#F9 : int | [$k__306[lq_tmp_x_308:=lq_tmp_x_268][VV#305:=VV#F9][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_300:=lq_anf__d18F][lq_tmp_x_295:=lq_tmp_x_268][lq_tmp_x_304:=VV#F9][VV#382:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__270[VV#269:=VV#F9][VV#382:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]
  // META constraint id 9 : list00.hs:7:9-11


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 44; 13; 45; 14]
  grd true
  lhs {VV#F10 : int | [$k__284[VV#283:=VV#F10][lq_tmp_x_286:=VV#F10][lq_tmp_x_282:=VV#385][lq_tmp_x_314:=VV#385][lq_tmp_x_311:=VV#F10][VV#388:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : int | [$k__302[VV#301:=VV#F10][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_294:=VV#385][lq_tmp_x_304:=VV#F10][VV#388:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [2]
  // META constraint id 10 : list00.hs:7:9-11


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 44; 13; 45; 14]
  grd true
  lhs {VV#F11 : int | [$k__284[VV#283:=VV#F11][lq_tmp_x_286:=VV#F11][lq_tmp_x_282:=VV#385][lq_tmp_x_314:=VV#385][lq_tmp_x_311:=VV#F11][VV#388:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__306[lq_tmp_x_308:=lq_anf__d18E][VV#305:=VV#F11][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_294:=VV#385][lq_tmp_x_304:=VV#F11][VV#388:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]
  // META constraint id 11 : list00.hs:7:9-11


constraint:
  env [0; 16; 48; 1; 2; 3; 4; 5; 6; 7; 8; 9; 44; 13; 14; 47]
  grd true
  lhs {VV#F12 : int | [$k__288[lq_tmp_x_290:=lq_tmp_x_293][VV#287:=VV#F12][lq_tmp_x_286:=VV#F12][lq_tmp_x_281:=lq_tmp_x_293][lq_tmp_x_312:=lq_tmp_x_293][lq_tmp_x_313:=VV#F12][VV#392:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__306[lq_tmp_x_308:=lq_tmp_x_293][VV#305:=VV#F12][lq_tmp_x_299:=lq_anf__d18E][lq_tmp_x_304:=VV#F12][VV#392:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]
  // META constraint id 12 : list00.hs:7:9-11


constraint:
  env [0; 16; 1; 2; 50; 3; 4; 5; 6; 7; 8; 9; 13; 14]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__d18E)]}
  rhs {VV#F13 : int | [$k__302[VV#301:=VV#F13][lq_tmp_x_304:=VV#F13][VV#395:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [2]
  // META constraint id 13 : list00.hs:7:10


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 54; 7; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F14 : a_a180 | [$k__261[lq_tmp_x_259:=lq_anf__d18D][VV#260:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : a_a180 | [$k__234[VV#233:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : list00.hs:10:9-22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 55; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F15 : GHC.Types.Bool | [(VV#F15 = lq_anf__d18D)]}
  rhs {VV#F15 : GHC.Types.Bool | [(? Prop([VV#F15]))]}
  id 15 tag [1]
  // META constraint id 15 : list00.hs:10:16-21




wf:
  env [0; 1; 2; 18; 3; 4; 20; 5; 6; 7; 8; 9; 13]
  reft {VV#346 : int | [$k__347]}
  
  // META wf  : list00.hs:9:9-12


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13]
  reft {VV#330 : [int] | [$k__331]}
  
  // META wf  : list00.hs:8:9-16


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13; 62]
  reft {VV#323 : int | [$k__324]}
  
  // META wf  : list00.hs:8:9-16


wf:
  env [0; 64; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13]
  reft {VV#327 : int | [$k__328]}
  
  // META wf  : list00.hs:8:9-16


wf:
  env [0; 1; 2; 18; 3; 4; 5; 6; 7; 8; 9; 13]
  reft {VV#316 : t_a18f | [$k__317]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 13; 14]
  reft {VV#305 : int | [$k__306]}
  
  // META wf  : list00.hs:7:9-11


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 14]
  reft {VV#301 : int | [$k__302]}
  
  // META wf  : list00.hs:7:9-11


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 14; 15]
  reft {VV#287 : int | [$k__288]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 14]
  reft {VV#283 : int | [$k__284]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13]
  reft {VV#272 : [int] | [$k__273]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 70; 7; 8; 9; 13]
  reft {VV#265 : int | [$k__266]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 72; 9; 13]
  reft {VV#269 : int | [$k__270]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#260 : a_a180 | [$k__261]}
  
  // META wf  : list00.hs:10:9-13


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#248 : int | [$k__249]}
  
  // META wf  : list00.hs:10:18-19


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#233 : a_a180 | [$k__234]}
  
  // META wf  : <no location info>







