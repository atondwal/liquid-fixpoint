qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v > 0) // "grty3.hs" (line 5, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : int): (v > 0) // "grty3.hs" (line 5, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)


cut $k__163
cut $k__156
cut $k__160
cut $k__166


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 GHC.Types.EQ#6U : {VV#124 : GHC.Types.Ordering | [(VV#124 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#125 : GHC.Types.Ordering | [(VV#125 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#126 : GHC.Types.Ordering | [(VV#126 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#149 : GHC.Types.Ordering | [(cmp([VV#149]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#150 : GHC.Types.Ordering | [(cmp([VV#150]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#151 : GHC.Types.Ordering | [(cmp([VV#151]) = GHC.Types.GT#6W)]}
bind 9 ds_dKE : {VV#162 : [a_aKn] | [$k__163;
                                     (len([VV#162]) >= 0)]}
bind 10 lq_anf__dKF : {lq_tmp_x_173 : [a_aKn] | [(lq_tmp_x_173 = ds_dKE);
                                                 (len([lq_tmp_x_173]) >= 0)]}
bind 11 lq_anf__dKF : {lq_tmp_x_176 : [a_aKn] | [(lq_tmp_x_176 = ds_dKE);
                                                 (len([lq_tmp_x_176]) >= 0);
                                                 (len([lq_tmp_x_176]) >= 0)]}
bind 12 lq_anf__dKF : {lq_tmp_x_176 : [a_aKn] | [(lq_tmp_x_176 = ds_dKE);
                                                 (len([lq_tmp_x_176]) >= 0);
                                                 (len([lq_tmp_x_176]) = 0);
                                                 ((? null([lq_tmp_x_176])) <=> true);
                                                 (lq_tmp_x_176 = fix#GHC.Types.#91##93##35#6m([]));
                                                 (len([lq_tmp_x_176]) = 0);
                                                 ((? null([lq_tmp_x_176])) <=> true);
                                                 (len([lq_tmp_x_176]) >= 0)]}
bind 13 lq_anf__dKF : {lq_tmp_x_189 : [a_aKn] | [(lq_tmp_x_189 = ds_dKE);
                                                 (len([lq_tmp_x_189]) >= 0);
                                                 (len([lq_tmp_x_189]) >= 0)]}
bind 14 x#aKe : {VV : a_aKn | [$k__156[VV#155:=VV][VV#162:=lq_anf__dKF][lq_tmp_x_173:=lq_anf__dKF][lq_tmp_x_189:=lq_anf__dKF]]}
bind 15 xs#aKf : {lq_tmp_x_199 : [a_aKn] | [(len([lq_tmp_x_199]) >= 0)]}
bind 16 lq_anf__dKF : {lq_tmp_x_189 : [a_aKn] | [(lq_tmp_x_189 = ds_dKE);
                                                 (len([lq_tmp_x_189]) >= 0);
                                                 (len([lq_tmp_x_189]) = (1 + len([xs#aKf])));
                                                 ((? null([lq_tmp_x_189])) <=> false);
                                                 (xsListSelector([lq_tmp_x_189]) = xs#aKf);
                                                 (xListSelector([lq_tmp_x_189]) = x#aKe);
                                                 (lq_tmp_x_189 = fix#GHC.Types.#58##35#64([x#aKe;
                                                                                           xs#aKf]));
                                                 (len([lq_tmp_x_189]) = (1 + len([xs#aKf])));
                                                 ((? null([lq_tmp_x_189])) <=> false);
                                                 (xsListSelector([lq_tmp_x_189]) = xs#aKf);
                                                 (xListSelector([lq_tmp_x_189]) = x#aKe);
                                                 (len([lq_tmp_x_189]) >= 0)]}
bind 17 VV#229 : {VV#229 : [a_aKv] | [(len([VV#229]) >= 0)]}
bind 18 VV#229 : {VV#229 : [a_aKv] | [(len([VV#229]) >= 0)]}
bind 19 VV : {VV : a_aKv | []}
bind 20 lq_tmp_x_219 : {VV : a_aKv | []}
bind 21 VV : {VV : a_aKv | []}
bind 22 lq_tmp_x_218 : {VV#235 : [a_aKv] | [(len([VV#235]) >= 0)]}
bind 23 VV#236 : {VV#236 : int | [$k__166[ds_dKE:=lq_tmp_x_218][lq_tmp_x_168:=lq_tmp_x_218][VV#165:=VV#236][lq_tmp_x_169:=lq_tmp_x_218][lq_tmp_x_223:=lq_tmp_x_218][lq_tmp_x_221:=VV#236]]}
bind 24 VV#236 : {VV#236 : int | [$k__166[ds_dKE:=lq_tmp_x_218][lq_tmp_x_168:=lq_tmp_x_218][VV#165:=VV#236][lq_tmp_x_169:=lq_tmp_x_218][lq_tmp_x_223:=lq_tmp_x_218][lq_tmp_x_221:=VV#236]]}
bind 25 VV#239 : {VV#239 : int | [$k__166[ds_dKE:=xs#aKf][lq_tmp_x_168:=xs#aKf][lq_tmp_x_169:=xs#aKf][VV#165:=VV#239]]}
bind 26 VV#239 : {VV#239 : int | [$k__166[ds_dKE:=xs#aKf][lq_tmp_x_168:=xs#aKf][lq_tmp_x_169:=xs#aKf][VV#165:=VV#239]]}
bind 27 VV#242 : {VV#242 : [a_aKn] | [(VV#242 = xs#aKf);
                                      (len([VV#242]) >= 0)]}
bind 28 VV#242 : {VV#242 : [a_aKn] | [(VV#242 = xs#aKf);
                                      (len([VV#242]) >= 0)]}
bind 29 VV : {VV : a_aKn | [$k__156[VV#155:=VV][VV#162:=lq_anf__dKF][lq_tmp_x_173:=lq_anf__dKF][lq_tmp_x_189:=lq_anf__dKF][lq_tmp_x_196:=x#aKe][lq_tmp_x_199:=VV#242][lq_tmp_x_217:=VV#242];
                            $k__160[VV#159:=VV][lq_tmp_x_158:=x#aKe][lq_tmp_x_172:=x#aKe][lq_tmp_x_188:=x#aKe][lq_tmp_x_196:=x#aKe][lq_tmp_x_199:=VV#242][lq_tmp_x_217:=VV#242]]}
bind 30 lq_tmp_x_158 : {VV : a_aKn | []}
bind 31 VV : {VV : a_aKn | [$k__160[VV#159:=VV][lq_tmp_x_158:=lq_tmp_x_158][lq_tmp_x_172:=lq_tmp_x_158][lq_tmp_x_188:=lq_tmp_x_158][lq_tmp_x_196:=x#aKe][lq_tmp_x_198:=lq_tmp_x_158][lq_tmp_x_216:=lq_tmp_x_158]]}
bind 32 VV#248 : {VV#248 : int | [(VV#248 = (0  :  int))]}
bind 33 VV#248 : {VV#248 : int | [(VV#248 = (0  :  int))]}
bind 34 VV#251 : {VV#251 : int | [(VV#251 = 0)]}
bind 35 VV#251 : {VV#251 : int | [(VV#251 = 0)]}
bind 36 VV#162 : {VV#162 : [a_aKn] | [$k__163;
                                      (len([VV#162]) >= 0)]}
bind 37 lq_tmp_x_158 : {VV : a_aKn | []}
bind 38 ds_dKE : {VV#162 : [a_aKn] | [$k__163;
                                      (len([VV#162]) >= 0)]}
bind 39 VV#165 : {VV#165 : int | [$k__166]}




constraint:
  env [0; 1; 17; 2; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F1 : [a_aKv] | [(len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [a_aKv] | [$k__163[VV#162:=VV#F1][lq_tmp_x_220:=VV#F1][VV#229:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : grty3.hs:5:8-10


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F2 : a_aKv | []}
  rhs {VV#F2 : a_aKv | [$k__225[lq_tmp_x_220:=VV#229][VV#224:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : grty3.hs:5:8-10


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F3 : a_aKv | []}
  rhs {VV#F3 : a_aKv | [$k__156[VV#162:=VV#229][VV#155:=VV#F3][lq_tmp_x_220:=VV#229][VV#224:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : grty3.hs:5:8-10


constraint:
  env [0; 1; 2; 18; 3; 4; 20; 5; 21; 6; 7; 8]
  grd true
  lhs {VV#F4 : a_aKv | []}
  rhs {VV#F4 : a_aKv | [$k__160[lq_tmp_x_158:=lq_tmp_x_219][VV#159:=VV#F4][VV#224:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : grty3.hs:5:8-10


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8]
  grd true
  lhs {VV#F5 : int | [$k__166[ds_dKE:=lq_tmp_x_218][lq_tmp_x_168:=lq_tmp_x_218][VV#165:=VV#F5][lq_tmp_x_169:=lq_tmp_x_218][lq_tmp_x_223:=lq_tmp_x_218][lq_tmp_x_221:=VV#F5][VV#236:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [(VV#F5 > 0)]}
  id 5 tag [2]
  // META constraint id 5 : grty3.hs:5:8-10


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 13; 14; 15]
  grd true
  lhs {VV#F6 : int | [$k__166[ds_dKE:=xs#aKf][lq_tmp_x_168:=xs#aKf][lq_tmp_x_169:=xs#aKf][VV#165:=VV#F6][VV#239:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__166[ds_dKE:=ds_dKE][lq_tmp_x_168:=ds_dKE][lq_tmp_x_169:=ds_dKE][VV#165:=VV#F6][VV#239:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : grty3.hs:9:14-19


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 27; 13; 14; 15]
  grd true
  lhs {VV#F7 : [a_aKn] | [(VV#F7 = xs#aKf); (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [a_aKn] | [$k__163[VV#162:=VV#F7][VV#242:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : grty3.hs:9:18-19


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 27; 13; 14; 15]
  grd true
  lhs {VV#F8 : [a_aKn] | [(VV#F8 = xs#aKf); (len([VV#F8]) >= 0)]}
  rhs {VV#F8 : [a_aKn] | [(len([VV#F8]) < len([ds_dKE]))]}
  id 8 tag [1]
  // META constraint id 8 : grty3.hs:9:18-19


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 27; 13; 14; 15]
  grd true
  lhs {VV#F9 : [a_aKn] | [(VV#F9 = xs#aKf); (len([VV#F9]) >= 0)]}
  rhs {VV#F9 : [a_aKn] | [(len([VV#F9]) >= 0)]}
  id 9 tag [1]
  // META constraint id 9 : grty3.hs:9:18-19


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 28; 13; 29; 14; 15]
  grd true
  lhs {VV#F10 : a_aKn | [$k__156[VV#155:=VV#F10][VV#162:=lq_anf__dKF][lq_tmp_x_173:=lq_anf__dKF][lq_tmp_x_189:=lq_anf__dKF][lq_tmp_x_196:=x#aKe][lq_tmp_x_199:=VV#242][lq_tmp_x_217:=VV#242][VV:=VV#F10][VV#F:=VV#F10];
                         $k__160[VV#159:=VV#F10][lq_tmp_x_158:=x#aKe][lq_tmp_x_172:=x#aKe][lq_tmp_x_188:=x#aKe][lq_tmp_x_196:=x#aKe][lq_tmp_x_199:=VV#242][lq_tmp_x_217:=VV#242][VV:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : a_aKn | [$k__214[VV#162:=VV#242][VV#213:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : grty3.hs:9:18-19


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 28; 13; 29; 14; 15]
  grd true
  lhs {VV#F11 : a_aKn | [$k__156[VV#155:=VV#F11][VV#162:=lq_anf__dKF][lq_tmp_x_173:=lq_anf__dKF][lq_tmp_x_189:=lq_anf__dKF][lq_tmp_x_196:=x#aKe][lq_tmp_x_199:=VV#242][lq_tmp_x_217:=VV#242][VV:=VV#F11][VV#F:=VV#F11];
                         $k__160[VV#159:=VV#F11][lq_tmp_x_158:=x#aKe][lq_tmp_x_172:=x#aKe][lq_tmp_x_188:=x#aKe][lq_tmp_x_196:=x#aKe][lq_tmp_x_199:=VV#242][lq_tmp_x_217:=VV#242][VV:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : a_aKn | [$k__156[VV#155:=VV#F11][VV#162:=VV#242][VV#213:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : grty3.hs:9:18-19


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 28; 13; 14; 30; 15; 31]
  grd true
  lhs {VV#F12 : a_aKn | [$k__160[VV#159:=VV#F12][lq_tmp_x_158:=lq_tmp_x_158][lq_tmp_x_172:=lq_tmp_x_158][lq_tmp_x_188:=lq_tmp_x_158][lq_tmp_x_196:=x#aKe][lq_tmp_x_198:=lq_tmp_x_158][lq_tmp_x_216:=lq_tmp_x_158][VV:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : a_aKn | [$k__160[VV#159:=VV#F12][VV#213:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : grty3.hs:9:18-19


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = (0  :  int))]}
  rhs {VV#F13 : int | [$k__166[ds_dKE:=ds_dKE][lq_tmp_x_168:=ds_dKE][lq_tmp_x_169:=ds_dKE][VV#165:=VV#F13][VV#248:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : grty3.hs:10:14




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#224 : a_aKv | [$k__225]}
  
  // META wf  : grty3.hs:5:8-10


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 13; 14; 15]
  reft {VV#213 : a_aKn | [$k__214]}
  
  // META wf  : grty3.hs:9:14-16


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#162 : [a_aKn] | [$k__163]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 36; 5; 6; 7; 8]
  reft {VV#155 : a_aKn | [$k__156]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 37; 6; 7; 8]
  reft {VV#159 : a_aKn | [$k__160]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 38; 7; 8]
  reft {VV#165 : int | [$k__166]}
  
  // META wf  : <no location info>







