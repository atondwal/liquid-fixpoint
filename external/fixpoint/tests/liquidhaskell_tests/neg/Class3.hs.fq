qualif Sz(v : int, fix##126#Xs : @(0)): (v = sz([fix##126#Xs])) // "Class3.hs" (line 9, column 12)
qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : (Class.List  a_a12o)): (sz([VV]) = 0) // "Class3.hs" (line 12, column 15)
qualif Auto(v : int): (v >= 0) // "Class3.hs" (line 19, column 1)
qualif Auto(v : int, fix##126#A0 : (s_a12m  a_xo)): (v = sz([fix##126#A0])) // "Class3.hs" (line 19, column 1)
qualif Auto(VV : (Class.List  a_a12o), fix##126#A0 : (Class.List  a_a12o)): (sz([VV]) = (1 + sz([fix##126#A0]))) // "Class3.hs" (line 12, column 21)
qualif Auto(VV : (Class.List  a_a12o), fix##126#A0 : (Class.List  a_a12o)): (tl([VV]) = fix##126#A0) // "Class3.hs" (line 12, column 21)
qualif Auto(VV : (Class.List  a_a12o), fix##126#A0 : a_a12o): (hd([VV]) = fix##126#A0) // "Class3.hs" (line 12, column 21)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Sz(v : int, fix##126#Xs : @(0)): (v = sz([fix##126#Xs])) // "Class3.hs" (line 9, column 12)
qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(VV : (Class.List  a_a12o)): (sz([VV]) = 0) // "Class3.hs" (line 12, column 15)
qualif Auto(v : int): (v >= 0) // "Class3.hs" (line 19, column 1)
qualif Auto(v : int, fix##126#A0 : (s_a12m  a_xo)): (v = sz([fix##126#A0])) // "Class3.hs" (line 19, column 1)
qualif Auto(VV : (Class.List  a_a12o), fix##126#A0 : (Class.List  a_a12o)): (sz([VV]) = (1 + sz([fix##126#A0]))) // "Class3.hs" (line 12, column 21)
qualif Auto(VV : (Class.List  a_a12o), fix##126#A0 : (Class.List  a_a12o)): (tl([VV]) = fix##126#A0) // "Class3.hs" (line 12, column 21)
qualif Auto(VV : (Class.List  a_a12o), fix##126#A0 : a_a12o): (hd([VV]) = fix##126#A0) // "Class3.hs" (line 12, column 21)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)


cut $k__232
cut $k__235
cut $k__238


constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant hd : (func(1, [(Class.List  @(0)); @(0)]))
constant tl : (func(1, [(Class.List  @(0)); (Class.List  @(0))]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant sz : (func(1, [@(0); int]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant Class.Nil#r12k : (func(1, [(Class.List  @(0))]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))
constant Class.Cons#r12j : (func(1, [@(0);
                                     (Class.List  @(0));
                                     (Class.List  @(0))]))


constant fix#Class.D#58#Sized#35#r12z : (func(1, [func(1, [(@(0)  @(0));
                                                           int]);
                                                  (Class.Sized  @(0))]))
constant Class.Nil#r12k : (func(1, [(Class.List  @(0))]))
constant Class.Cons#r12j : (func(1, [@(0);
                                     (Class.List  @(0));
                                     (Class.List  @(0))]))


bind 0 Class.Nil#r12k : {VV : func(1, [(Class.List  @(0))]) | []}
bind 1 GHC.Types.EQ#6U : {VV#179 : GHC.Types.Ordering | [(VV#179 = GHC.Types.EQ#6U)]}
bind 2 GHC.Types.LT#6S : {VV#180 : GHC.Types.Ordering | [(VV#180 = GHC.Types.LT#6S)]}
bind 3 GHC.Types.GT#6W : {VV#181 : GHC.Types.Ordering | [(VV#181 = GHC.Types.GT#6W)]}
bind 4 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 5 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 6 GHC.Types.EQ#6U : {VV#222 : GHC.Types.Ordering | [(cmp([VV#222]) = GHC.Types.EQ#6U)]}
bind 7 GHC.Types.LT#6S : {VV#223 : GHC.Types.Ordering | [(cmp([VV#223]) = GHC.Types.LT#6S)]}
bind 8 GHC.Types.GT#6W : {VV#224 : GHC.Types.Ordering | [(cmp([VV#224]) = GHC.Types.GT#6W)]}
bind 9 Class.Nil#r12k : {VV : func(1, [(Class.List  @(0))]) | []}
bind 10 fix#Class.#36#fSizedList#35#r12Y : {VV#241 : (Class.Sized  Class.List) | []}
bind 11 ds_d14r : {VV#234 : (Class.List  a_a14g) | [$k__235]}
bind 12 lq_anf__d14s : {lq_tmp_x_257 : (Class.List  a_a14g) | [(lq_tmp_x_257 = ds_d14r)]}
bind 13 lq_anf__d14s : {lq_tmp_x_259 : (Class.List  a_a14g) | [(lq_tmp_x_259 = ds_d14r)]}
bind 14 lq_anf__d14s : {lq_tmp_x_259 : (Class.List  a_a14g) | [(lq_tmp_x_259 = ds_d14r);
                                                               (sz([lq_tmp_x_259]) = 0);
                                                               (lq_tmp_x_259 = Class.Nil#r12k([]));
                                                               (sz([lq_tmp_x_259]) = 0)]}
bind 15 lq_anf__d14s : {lq_tmp_x_269 : (Class.List  a_a14g) | [(lq_tmp_x_269 = ds_d14r)]}
bind 16 x#a13D : {VV : a_a14g | [$k__232[VV#231:=VV][VV#234:=lq_anf__d14s][lq_tmp_x_257:=lq_anf__d14s][lq_tmp_x_269:=lq_anf__d14s]]}
bind 17 xs#a13E : {lq_tmp_x_276 : (Class.List  a_a14g) | []}
bind 18 lq_anf__d14s : {lq_tmp_x_269 : (Class.List  a_a14g) | [(lq_tmp_x_269 = ds_d14r);
                                                               (sz([lq_tmp_x_269]) = (1 + sz([xs#a13E])));
                                                               (tl([lq_tmp_x_269]) = xs#a13E);
                                                               (hd([lq_tmp_x_269]) = x#a13D);
                                                               (lq_tmp_x_269 = Class.Cons#r12j([x#a13D;
                                                                                                xs#a13E]));
                                                               (sz([lq_tmp_x_269]) = (1 + sz([xs#a13E])));
                                                               (tl([lq_tmp_x_269]) = xs#a13E);
                                                               (hd([lq_tmp_x_269]) = x#a13D)]}
bind 19 VV#298 : {VV#298 : int | [(VV#298 >= 0);
                                  (VV#298 = sz([xs#a13E]))]}
bind 20 VV#298 : {VV#298 : int | [(VV#298 >= 0);
                                  (VV#298 = sz([xs#a13E]))]}
bind 21 VV#301 : {VV#301 : (Class.List  a_a14g) | [(VV#301 = xs#a13E)]}
bind 22 VV#301 : {VV#301 : (Class.List  a_a14g) | [(VV#301 = xs#a13E)]}
bind 23 VV : {VV : a_a14g | [$k__232[VV#231:=VV][VV#234:=lq_anf__d14s][lq_tmp_x_257:=lq_anf__d14s][lq_tmp_x_269:=lq_anf__d14s][lq_tmp_x_274:=x#a13D][lq_tmp_x_276:=VV#301][lq_tmp_x_297:=VV#301]]}
bind 24 VV#305 : {VV#305 : int | [(VV#305 = (0  :  int))]}
bind 25 VV#305 : {VV#305 : int | [(VV#305 = (0  :  int))]}
bind 26 VV#308 : {VV#308 : int | [(VV#308 = 0)]}
bind 27 VV#308 : {VV#308 : int | [(VV#308 = 0)]}
bind 28 VV#312 : {VV#312 : (Class.List  a_a14g) | []}
bind 29 VV#312 : {VV#312 : (Class.List  a_a14g) | []}
bind 30 VV : {VV : a_a14g | []}
bind 31 lq_tmp_x_248 : {lq_tmp_x_251 : (Class.List  a_a14g) | []}
bind 32 VV#317 : {VV#317 : int | [$k__238[ds_d14r:=lq_tmp_x_248][VV#237:=VV#317][lq_tmp_x_240:=lq_tmp_x_248][lq_tmp_x_255:=lq_tmp_x_248][lq_tmp_x_253:=VV#317]]}
bind 33 VV#317 : {VV#317 : int | [$k__238[ds_d14r:=lq_tmp_x_248][VV#237:=VV#317][lq_tmp_x_240:=lq_tmp_x_248][lq_tmp_x_255:=lq_tmp_x_248][lq_tmp_x_253:=VV#317]]}
bind 34 VV#234 : {VV#234 : (Class.List  a_a14g) | [$k__235]}
bind 35 ds_d14r : {VV#234 : (Class.List  a_a14g) | [$k__235]}
bind 36 VV#237 : {VV#237 : int | [$k__238]}




constraint:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 10; 11; 12; 15]
  grd true
  lhs {VV#F1 : int | [(VV#F1 >= 0); (VV#F1 = sz([xs#a13E]))]}
  rhs {VV#F1 : int | [$k__238[ds_d14r:=ds_d14r][lq_tmp_x_240:=ds_d14r][VV#237:=VV#F1][VV#298:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]
  // META constraint id 1 : Class3.hs:28:22-28


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       4;
       5;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       15]
  grd true
  lhs {VV#F2 : a_a14g | [$k__232[VV#231:=VV#F2][VV#234:=lq_anf__d14s][lq_tmp_x_257:=lq_anf__d14s][lq_tmp_x_269:=lq_anf__d14s][lq_tmp_x_274:=x#a13D][lq_tmp_x_276:=VV#301][lq_tmp_x_297:=VV#301][VV:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : a_a14g | [$k__295[lq_tmp_x_291:=VV#301][VV#294:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [1]
  // META constraint id 2 : Class3.hs:28:27-28


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 24; 9; 10; 11; 12; 13; 14]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = (0  :  int))]}
  rhs {VV#F3 : int | [$k__238[ds_d14r:=ds_d14r][lq_tmp_x_240:=ds_d14r][VV#237:=VV#F3][VV#305:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]
  // META constraint id 3 : Class3.hs:27:22


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 28]
  grd true
  lhs {VV#F4 : (Class.List  a_a14g) | []}
  rhs {VV#F4 : (Class.List  a_a14g) | [$k__235[VV#234:=VV#F4][lq_tmp_x_252:=VV#F4][VV#312:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]
  // META constraint id 4 : Class3.hs:22:10-19


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 29; 30]
  grd true
  lhs {VV#F5 : a_a14g | []}
  rhs {VV#F5 : a_a14g | [$k__232[VV#234:=VV#312][lq_tmp_x_252:=VV#312][VV#231:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]
  // META constraint id 5 : Class3.hs:22:10-19


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 31]
  grd true
  lhs {VV#F6 : int | [$k__238[ds_d14r:=lq_tmp_x_248][VV#237:=VV#F6][lq_tmp_x_240:=lq_tmp_x_248][lq_tmp_x_255:=lq_tmp_x_248][lq_tmp_x_253:=VV#F6][VV#317:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [(VV#F6 >= 0)]}
  id 6 tag [1]
  // META constraint id 6 : Class3.hs:22:10-19


constraint:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 31]
  grd true
  lhs {VV#F7 : int | [$k__238[ds_d14r:=lq_tmp_x_248][VV#237:=VV#F7][lq_tmp_x_240:=lq_tmp_x_248][lq_tmp_x_255:=lq_tmp_x_248][lq_tmp_x_253:=VV#F7][VV#317:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : int | [(VV#F7 = sz([lq_tmp_x_248]))]}
  id 7 tag [1]
  // META constraint id 7 : Class3.hs:22:10-19




wf:
  env [0; 16; 1; 17; 2; 18; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 15]
  reft {VV#294 : a_a14g | [$k__295]}
  
  // META wf  : Class3.hs:28:22-25


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#234 : (Class.List  a_a14g) | [$k__235]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 34; 3; 4; 5; 6; 7; 8; 9]
  reft {VV#231 : a_a14g | [$k__232]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 35; 4; 5; 6; 7; 8; 9]
  reft {VV#237 : int | [$k__238]}
  
  // META wf  : <no location info>







