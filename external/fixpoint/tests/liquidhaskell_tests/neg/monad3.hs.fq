qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 fix#GHC.Base.#36#fMonad#91##93##35#r2J : {VV#246 : (GHC.Base.Monad  fix##91##93#) | []}
bind 2 fix#GHC.Classes.#36#fOrdInt#35#rhx : {VV#247 : (GHC.Classes.Ord  int) | []}
bind 3 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#248 : (GHC.Num.Num  int) | []}
bind 4 GHC.Types.EQ#6U : {VV#250 : GHC.Types.Ordering | [(VV#250 = GHC.Types.EQ#6U)]}
bind 5 GHC.Types.LT#6S : {VV#251 : GHC.Types.Ordering | [(VV#251 = GHC.Types.LT#6S)]}
bind 6 GHC.Types.GT#6W : {VV#252 : GHC.Types.Ordering | [(VV#252 = GHC.Types.GT#6W)]}
bind 7 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 8 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 9 GHC.Types.EQ#6U : {VV#296 : GHC.Types.Ordering | [(cmp([VV#296]) = GHC.Types.EQ#6U)]}
bind 10 GHC.Types.LT#6S : {VV#297 : GHC.Types.Ordering | [(cmp([VV#297]) = GHC.Types.LT#6S)]}
bind 11 GHC.Types.GT#6W : {VV#298 : GHC.Types.Ordering | [(cmp([VV#298]) = GHC.Types.GT#6W)]}
bind 12 fix##36#dOrd_a17g : {VV#302 : (GHC.Classes.Ord  b_a17f) | []}
bind 13 fix##36#dNum_a17h : {VV#303 : (GHC.Num.Num  b_a17f) | []}
bind 14 b_a17f : {VV : num | []}
bind 15 fix##36#dMonad_a17i : {VV#304 : (GHC.Base.Monad  m_a17e) | []}
bind 16 z#a16B : {VV#311 : (m_a17e  b_a17f) | [$k__312]}
bind 17 x#a16C : {VV#324 : b_a17f | [$k__325]}
bind 18 lq_anf__d17N : {lq_tmp_x_348 : int | [(lq_tmp_x_348 = 0)]}
bind 19 lq_anf__d17O : {VV : b_a17f | [(VV = lq_anf__d17N)]}
bind 20 lq_anf__d17P : {lq_tmp_x_361 : GHC.Types.Bool | [((? Prop([lq_tmp_x_361])) <=> (x#a16C >= lq_anf__d17O))]}
bind 21 lq_anf__d17Q : {lq_tmp_x_373 : int | [(lq_tmp_x_373 = 1)]}
bind 22 lq_anf__d17R : {VV : b_a17f | [(VV = lq_anf__d17Q)]}
bind 23 lq_anf__d17S : {VV : b_a17f | [(VV = (x#a16C + lq_anf__d17R))]}
bind 24 lq_anf__d17T : {VV#400 : b_a17f | [$k__401[lq_tmp_x_398:=lq_anf__d17P][lq_tmp_x_399:=lq_anf__d17S]]}
bind 25 lq_anf__d17V : {lq_tmp_x_461 : int | [(lq_tmp_x_461 = (0  :  int))]}
bind 26 lq_anf__d17W : {lq_tmp_x_467 : int | [(lq_tmp_x_467 = (1  :  int))]}
bind 27 lq_anf__d17X : {lq_tmp_x_478 : int | [(lq_tmp_x_478 = (- (lq_anf__d17W)))]}
bind 28 lq_tmp_x_492 : {VV#493 : int | []}
bind 29 lq_anf__d17Y : {lq_tmp_x_484 : [int] | [(len([lq_tmp_x_484]) = 0);
                                                ((? null([lq_tmp_x_484])) <=> true);
                                                (len([lq_tmp_x_484]) >= 0)]}
bind 30 lq_tmp_x_510 : {VV#511 : int | []}
bind 31 lq_anf__d17Z : {lq_tmp_x_498 : [int] | [(len([lq_tmp_x_498]) = (1 + len([lq_anf__d17Y])));
                                                ((? null([lq_tmp_x_498])) <=> false);
                                                (xsListSelector([lq_tmp_x_498]) = lq_anf__d17Y);
                                                (xListSelector([lq_tmp_x_498]) = lq_anf__d17X);
                                                (len([lq_tmp_x_498]) >= 0)]}
bind 32 lq_tmp_x_533 : {VV#534 : int | []}
bind 33 Foo.xs#r12h : {VV#457 : [int] | [$k__458;
                                         (len([VV#457]) >= 0)]}
bind 34 Foo.ys#r12i : {lq_tmp_x_557 : [int] | [$k__316[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.xs#r12h][VV#315:=lq_tmp_x_557][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_553:=Foo.xs#r12h];
                                               $k__322[VV#321:=lq_tmp_x_557][fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.xs#r12h][lq_tmp_x_545:=lq_tmp_x_557][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_553:=Foo.xs#r12h];
                                               (len([lq_tmp_x_557]) >= 0)]}
bind 35 Foo.zs#r12j : {lq_tmp_x_588 : [int] | [$k__316[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.ys#r12i][VV#315:=lq_tmp_x_588][lq_tmp_x_581:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_582:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_583:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_584:=Foo.ys#r12i];
                                               $k__322[VV#321:=lq_tmp_x_588][fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.ys#r12i][lq_tmp_x_576:=lq_tmp_x_588][lq_tmp_x_581:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_582:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_583:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_584:=Foo.ys#r12i];
                                               (len([lq_tmp_x_588]) >= 0)]}
bind 36 VV#603 : {VV#603 : [int] | [(VV#603 = Foo.ys#r12i);
                                    (len([VV#603]) >= 0)]}
bind 37 VV#603 : {VV#603 : [int] | [(VV#603 = Foo.ys#r12i);
                                    (len([VV#603]) >= 0)]}
bind 38 VV#606 : {VV#606 : int | [$k__319[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.xs#r12h][VV#318:=VV#606][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_553:=Foo.xs#r12h][lq_tmp_x_559:=VV#606][lq_tmp_x_557:=VV#603][lq_tmp_x_601:=VV#603][lq_tmp_x_598:=VV#606]]}
bind 39 VV#606 : {VV#606 : int | [$k__319[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.xs#r12h][VV#318:=VV#606][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_553:=Foo.xs#r12h][lq_tmp_x_559:=VV#606][lq_tmp_x_557:=VV#603][lq_tmp_x_601:=VV#603][lq_tmp_x_598:=VV#606]]}
bind 40 lq_tmp_x_587 : {VV#609 : int | []}
bind 41 VV#610 : {VV#610 : int | []}
bind 42 VV#610 : {VV#610 : int | []}
bind 43 VV#613 : {VV#613 : [int] | [(VV#613 = Foo.xs#r12h);
                                    (len([VV#613]) >= 0)]}
bind 44 VV#613 : {VV#613 : [int] | [(VV#613 = Foo.xs#r12h);
                                    (len([VV#613]) >= 0)]}
bind 45 VV#616 : {VV#616 : int | [$k__451[VV#450:=VV#616][VV#457:=VV#613][lq_tmp_x_570:=VV#613][lq_tmp_x_567:=VV#616]]}
bind 46 VV#616 : {VV#616 : int | [$k__451[VV#450:=VV#616][VV#457:=VV#613][lq_tmp_x_570:=VV#613][lq_tmp_x_567:=VV#616]]}
bind 47 lq_tmp_x_556 : {VV#619 : int | []}
bind 48 VV#620 : {VV#620 : int | [$k__455[VV#454:=VV#620][lq_tmp_x_453:=lq_tmp_x_556][lq_tmp_x_568:=lq_tmp_x_556][lq_tmp_x_569:=VV#620]]}
bind 49 VV#620 : {VV#620 : int | [$k__455[VV#454:=VV#620][lq_tmp_x_453:=lq_tmp_x_556][lq_tmp_x_568:=lq_tmp_x_556][lq_tmp_x_569:=VV#620]]}
bind 50 VV#623 : {VV#623 : [int] | [(len([VV#623]) = (1 + len([lq_anf__d17Z])));
                                    ((? null([VV#623])) <=> false);
                                    (xsListSelector([VV#623]) = lq_anf__d17Z);
                                    (xListSelector([VV#623]) = lq_anf__d17V);
                                    (len([VV#623]) >= 0)]}
bind 51 VV#623 : {VV#623 : [int] | [(len([VV#623]) = (1 + len([lq_anf__d17Z])));
                                    ((? null([VV#623])) <=> false);
                                    (xsListSelector([VV#623]) = lq_anf__d17Z);
                                    (xListSelector([VV#623]) = lq_anf__d17V);
                                    (len([VV#623]) >= 0)]}
bind 52 VV#626 : {VV#626 : int | [$k__527[VV#526:=VV#626][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_525:=lq_anf__d17Z][lq_tmp_x_521:=VV#623][lq_tmp_x_529:=VV#626]]}
bind 53 VV#626 : {VV#626 : int | [$k__527[VV#526:=VV#626][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_525:=lq_anf__d17Z][lq_tmp_x_521:=VV#623][lq_tmp_x_529:=VV#626]]}
bind 54 lq_tmp_x_453 : {VV#629 : int | []}
bind 55 VV#630 : {VV#630 : int | [$k__531[lq_tmp_x_533:=lq_tmp_x_453][VV#530:=VV#630][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_525:=lq_anf__d17Z][lq_tmp_x_520:=lq_tmp_x_453][lq_tmp_x_529:=VV#630]]}
bind 56 VV#630 : {VV#630 : int | [$k__531[lq_tmp_x_533:=lq_tmp_x_453][VV#530:=VV#630][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_525:=lq_anf__d17Z][lq_tmp_x_520:=lq_tmp_x_453][lq_tmp_x_529:=VV#630]]}
bind 57 VV#633 : {VV#633 : [int] | [(VV#633 = lq_anf__d17Z);
                                    (len([VV#633]) >= 0)]}
bind 58 VV#633 : {VV#633 : [int] | [(VV#633 = lq_anf__d17Z);
                                    (len([VV#633]) >= 0)]}
bind 59 VV#636 : {VV#636 : int | [$k__504[VV#503:=VV#636][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#636][lq_tmp_x_498:=VV#633][lq_tmp_x_539:=VV#633][lq_tmp_x_536:=VV#636]]}
bind 60 VV#636 : {VV#636 : int | [$k__504[VV#503:=VV#636][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#636][lq_tmp_x_498:=VV#633][lq_tmp_x_539:=VV#633][lq_tmp_x_536:=VV#636]]}
bind 61 lq_tmp_x_518 : {VV#639 : int | []}
bind 62 VV#640 : {VV#640 : int | [$k__508[lq_tmp_x_510:=lq_tmp_x_518][VV#507:=VV#640][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#640][lq_tmp_x_497:=lq_tmp_x_518][lq_tmp_x_537:=lq_tmp_x_518][lq_tmp_x_538:=VV#640]]}
bind 63 VV#640 : {VV#640 : int | [$k__508[lq_tmp_x_510:=lq_tmp_x_518][VV#507:=VV#640][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#640][lq_tmp_x_497:=lq_tmp_x_518][lq_tmp_x_537:=lq_tmp_x_518][lq_tmp_x_538:=VV#640]]}
bind 64 VV#643 : {VV#643 : int | [(VV#643 = lq_anf__d17V)]}
bind 65 VV#643 : {VV#643 : int | [(VV#643 = lq_anf__d17V)]}
bind 66 VV#646 : {VV#646 : [int] | [(VV#646 = lq_anf__d17Y);
                                    (len([VV#646]) >= 0)]}
bind 67 VV#646 : {VV#646 : [int] | [(VV#646 = lq_anf__d17Y);
                                    (len([VV#646]) >= 0)]}
bind 68 VV#649 : {VV#649 : int | [$k__486[VV#485:=VV#649][lq_tmp_x_488:=VV#649][lq_tmp_x_484:=VV#646][lq_tmp_x_516:=VV#646][lq_tmp_x_513:=VV#649]]}
bind 69 VV#649 : {VV#649 : int | [$k__486[VV#485:=VV#649][lq_tmp_x_488:=VV#649][lq_tmp_x_484:=VV#646][lq_tmp_x_516:=VV#646][lq_tmp_x_513:=VV#649]]}
bind 70 lq_tmp_x_495 : {VV#652 : int | []}
bind 71 VV#653 : {VV#653 : int | [$k__490[lq_tmp_x_492:=lq_tmp_x_495][VV#489:=VV#653][lq_tmp_x_488:=VV#653][lq_tmp_x_483:=lq_tmp_x_495][lq_tmp_x_514:=lq_tmp_x_495][lq_tmp_x_515:=VV#653]]}
bind 72 VV#653 : {VV#653 : int | [$k__490[lq_tmp_x_492:=lq_tmp_x_495][VV#489:=VV#653][lq_tmp_x_488:=VV#653][lq_tmp_x_483:=lq_tmp_x_495][lq_tmp_x_514:=lq_tmp_x_495][lq_tmp_x_515:=VV#653]]}
bind 73 VV#656 : {VV#656 : int | [(VV#656 = lq_anf__d17X)]}
bind 74 VV#656 : {VV#656 : int | [(VV#656 = lq_anf__d17X)]}
bind 75 VV#659 : {VV#659 : int | [(VV#659 = lq_anf__d17W)]}
bind 76 VV#659 : {VV#659 : int | [(VV#659 = lq_anf__d17W)]}
bind 77 VV#662 : {VV#662 : int | [(VV#662 = 1)]}
bind 78 VV#662 : {VV#662 : int | [(VV#662 = 1)]}
bind 79 VV#665 : {VV#665 : int | [(VV#665 = 0)]}
bind 80 VV#665 : {VV#665 : int | [(VV#665 = 0)]}
bind 81 lq_tmp_x_432 : {lq_tmp_x_432 : (m_a17e  b_a17f) | []}
bind 82 VV : {VV : m_a17e | []}
bind 83 VV#442 : {VV#442 : b_a17f | [$k__443[lq_tmp_x_26:=z#a16B][lq_tmp_x_29:=lq_anf__d17U]]}
bind 84 VV#318 : {VV#318 : b_a17f | [$k__319]}
bind 85 VV#439 : {VV#439 : b_a17f | [$k__440[lq_tmp_x_26:=z#a16B]]}
bind 86 lq_tmp_x_30 : {VV#439 : b_a17f | [$k__440[lq_tmp_x_26:=z#a16B]]}
bind 87 lq_tmp_x_446 : {lq_tmp_x_446 : (m_a17e  b_a17f) | [$k__335[VV#334:=lq_tmp_x_446][x#a16C:=lq_tmp_x_30][lq_tmp_x_448:=lq_tmp_x_30]]}
bind 88 VV#328 : {VV#328 : m_a17e | [$k__329[x#a16C:=lq_tmp_x_30][lq_tmp_x_448:=lq_tmp_x_30]]}
bind 89 VV#331 : {VV#331 : b_a17f | [$k__332[x#a16C:=lq_tmp_x_30][lq_tmp_x_448:=lq_tmp_x_30]]}
bind 90 VV#442 : {VV#442 : b_a17f | [$k__443[lq_tmp_x_26:=z#a16B]]}
bind 91 lq_tmp_x_445 : {lq_tmp_x_445 : (m_a17e  b_a17f) | [(lq_tmp_x_445 = z#a16B)]}
bind 92 VV#305 : {VV#305 : m_a17e | [$k__306]}
bind 93 VV#308 : {VV#308 : b_a17f | [$k__309]}
bind 94 VV#439 : {VV#439 : b_a17f | [$k__440]}
bind 95 lq_tmp_x_423 : {lq_tmp_x_423 : (m_a17e  b_a17f) | [$k__421[VV#420:=lq_tmp_x_423][lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T]]}
bind 96 VV#414 : {VV#414 : m_a17e | [$k__415[lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T]]}
bind 97 VV#417 : {VV#417 : b_a17f | [$k__418[lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T]]}
bind 98 VV#331 : {VV#331 : b_a17f | [$k__332]}
bind 99 VV#400 : {VV#400 : b_a17f | [(VV#400 = lq_anf__d17T)]}
bind 100 VV#411 : {VV#411 : b_a17f | [$k__412]}
bind 101 lq_tmp_x_408 : {VV#411 : b_a17f | [$k__412]}
bind 102 lq_tmp_x_424 : {lq_tmp_x_424 : (m_a17e  b_a17f) | []}
bind 103 VV : {VV : m_a17e | []}
bind 104 VV#344 : {VV#344 : b_a17f | [$k__345[lq_tmp_x_38:=lq_tmp_x_408][lq_tmp_x_426:=lq_tmp_x_408]]}
bind 105 VV#417 : {VV#417 : b_a17f | [$k__418]}
bind 106 VV : {VV : b_a17f | [(VV = lq_anf__d17S)]}
bind 107 VV#696 : {VV#696 : GHC.Types.Bool | [(VV#696 = lq_anf__d17P)]}
bind 108 VV#696 : {VV#696 : GHC.Types.Bool | [(VV#696 = lq_anf__d17P)]}
bind 109 VV : {VV : b_a17f | [(VV = lq_anf__d17R)]}
bind 110 VV#324 : {VV#324 : b_a17f | [(VV#324 = x#a16C)]}
bind 111 VV#701 : {VV#701 : int | [(VV#701 = lq_anf__d17Q)]}
bind 112 VV#701 : {VV#701 : int | [(VV#701 = lq_anf__d17Q)]}
bind 113 VV : {VV : b_a17f | [(VV = lq_anf__d17O)]}
bind 114 VV#324 : {VV#324 : b_a17f | [(VV#324 = x#a16C)]}
bind 115 VV#706 : {VV#706 : int | [(VV#706 = lq_anf__d17N)]}
bind 116 VV#706 : {VV#706 : int | [(VV#706 = lq_anf__d17N)]}
bind 117 fldList : {VV : a_12 | []}
bind 118 fldList : {VV : a_12 | []}
bind 119 VV#530 : {VV#530 : int | [$k__531]}
bind 120 VV#526 : {VV#526 : int | [$k__527]}
bind 121 VV#507 : {VV#507 : int | [$k__508]}
bind 122 VV#503 : {VV#503 : int | [$k__504]}
bind 123 VV#489 : {VV#489 : int | [$k__490]}
bind 124 VV#485 : {VV#485 : int | [$k__486]}
bind 125 VV#457 : {VV#457 : [int] | [$k__458;
                                     (len([VV#457]) >= 0)]}
bind 126 VV#450 : {VV#450 : int | [$k__451]}
bind 127 lq_tmp_x_453 : {VV#719 : int | []}
bind 128 VV#454 : {VV#454 : int | [$k__455]}




constraint:
  env [0;
       1;
       2;
       3;
       67;
       4;
       5;
       6;
       70;
       7;
       71;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       29]
  grd true
  lhs {VV#F16 : int | [$k__490[lq_tmp_x_492:=lq_tmp_x_495][VV#489:=VV#F16][lq_tmp_x_488:=VV#F16][lq_tmp_x_483:=lq_tmp_x_495][lq_tmp_x_514:=lq_tmp_x_495][lq_tmp_x_515:=VV#F16][VV#653:=VV#F16][VV#F:=VV#F16]]}
  rhs {VV#F16 : int | [$k__508[lq_tmp_x_510:=lq_tmp_x_495][VV#507:=VV#F16][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_506:=VV#F16][VV#653:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]
  // META constraint id 16 : <no location info>


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       100;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F32 : b_a17f | [$k__412[VV#411:=VV#F32][VV#F:=VV#F32]]}
  rhs {VV#F32 : b_a17f | [$k__345[VV#344:=VV#F32][VV#F:=VV#F32]]}
  id 32 tag [2]
  // META constraint id 32 : monad3.hs:7:12-17


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 36; 5; 6; 7; 8; 9; 10; 11]
  grd true
  lhs {VV#F1 : [int] | [(VV#F1 = Foo.ys#r12i); (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [int] | [$k__306[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][VV#305:=VV#F1][lq_tmp_x_581:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_582:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_583:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_588:=VV#F1][VV#603:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]
  // META constraint id 1 : monad3.hs:15:10-11


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 73; 10; 26; 11; 27; 29]
  grd true
  lhs {VV#F17 : int | [(VV#F17 = lq_anf__d17X)]}
  rhs {VV#F17 : int | [$k__504[VV#503:=VV#F17][lq_tmp_x_506:=VV#F17][VV#656:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [1]
  // META constraint id 17 : monad3.hs:13:10-11


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       101;
       6;
       22;
       102;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F33 : (m_a17e  b_a17f) | []}
  rhs {VV#F33 : (m_a17e  b_a17f) | [$k__421[VV#420:=VV#F33][lq_tmp_x_423:=VV#F33][VV#F:=VV#F33]]}
  id 33 tag [2]
  // META constraint id 33 : monad3.hs:7:12-17


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 36; 5; 6; 7; 8; 9; 10; 11]
  grd true
  lhs {VV#F2 : [int] | [(VV#F2 = Foo.ys#r12i); (len([VV#F2]) >= 0)]}
  rhs {VV#F2 : [int] | [$k__312[VV#311:=VV#F2][fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_575:=VV#F2][lq_tmp_x_581:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_582:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_583:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_588:=VV#F2][VV#603:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [4]
  // META constraint id 2 : monad3.hs:15:10-11


constraint:
  env [0; 16; 1; 81; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F18 : (m_a17e  b_a17f) | []}
  rhs {VV#F18 : (m_a17e  b_a17f) | [$k__322[VV#321:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [2]
  // META constraint id 18 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       101;
       6;
       22;
       7;
       23;
       103;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F34 : m_a17e | []}
  rhs {VV#F34 : m_a17e | [$k__415[VV#414:=VV#F34][VV#F:=VV#F34]]}
  id 34 tag [2]
  // META constraint id 34 : monad3.hs:7:12-17


constraint:
  env [0; 1; 33; 2; 34; 3; 4; 5; 37; 6; 38; 7; 8; 9; 10; 11]
  grd true
  lhs {VV#F3 : int | [$k__319[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][z#a16B:=Foo.xs#r12h][VV#318:=VV#F3][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_553:=Foo.xs#r12h][lq_tmp_x_559:=VV#F3][lq_tmp_x_557:=VV#603][lq_tmp_x_601:=VV#603][lq_tmp_x_598:=VV#F3][VV#606:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__309[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][VV#308:=VV#F3][lq_tmp_x_581:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_582:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_583:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_588:=VV#603][lq_tmp_x_590:=VV#F3][VV#606:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [4]
  // META constraint id 3 : monad3.hs:15:10-11


constraint:
  env [0; 16; 1; 2; 82; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F19 : m_a17e | []}
  rhs {VV#F19 : m_a17e | [$k__316[VV#315:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [2]
  // META constraint id 19 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       101;
       6;
       22;
       7;
       23;
       8;
       24;
       104;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F35 : b_a17f | [$k__345[lq_tmp_x_38:=lq_tmp_x_408][lq_tmp_x_426:=lq_tmp_x_408][VV#344:=VV#F35][VV#F:=VV#F35]]}
  rhs {VV#F35 : b_a17f | [$k__418[VV#417:=VV#F35][VV#F:=VV#F35]]}
  id 35 tag [2]
  // META constraint id 35 : monad3.hs:7:12-17


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 43]
  grd true
  lhs {VV#F4 : [int] | [(VV#F4 = Foo.xs#r12h); (len([VV#F4]) >= 0)]}
  rhs {VV#F4 : [int] | [$k__306[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][VV#305:=VV#F4][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_557:=VV#F4][VV#613:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]
  // META constraint id 4 : monad3.hs:14:10-11


constraint:
  env [0; 16; 1; 2; 3; 83; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F20 : b_a17f | [$k__443[lq_tmp_x_26:=z#a16B][lq_tmp_x_29:=lq_anf__d17U][VV#442:=VV#F20][VV#F:=VV#F20]]}
  rhs {VV#F20 : b_a17f | [$k__319[VV#318:=VV#F20][VV#F:=VV#F20]]}
  id 20 tag [2]
  // META constraint id 20 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       101;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       105;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F36 : b_a17f | [$k__418[VV#417:=VV#F36][VV#F:=VV#F36]]}
  rhs {VV#F36 : b_a17f | [$k__345[lq_tmp_x_38:=lq_tmp_x_408][lq_tmp_x_426:=lq_tmp_x_408][VV#344:=VV#F36][VV#F:=VV#F36]]}
  id 36 tag [2]
  // META constraint id 36 : monad3.hs:7:12-17


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 43]
  grd true
  lhs {VV#F5 : [int] | [(VV#F5 = Foo.xs#r12h); (len([VV#F5]) >= 0)]}
  rhs {VV#F5 : [int] | [$k__312[VV#311:=VV#F5][fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_544:=VV#F5][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_557:=VV#F5][VV#613:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [3]
  // META constraint id 5 : monad3.hs:14:10-11


constraint:
  env [0; 16; 1; 2; 3; 4; 84; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F21 : b_a17f | [$k__319[VV#318:=VV#F21][VV#F:=VV#F21]]}
  rhs {VV#F21 : b_a17f | [$k__443[lq_tmp_x_26:=z#a16B][lq_tmp_x_29:=lq_anf__d17U][VV#442:=VV#F21][VV#F:=VV#F21]]}
  id 21 tag [2]
  // META constraint id 21 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       106;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F37 : b_a17f | [(VV#F37 = lq_anf__d17S)]}
  rhs {VV#F37 : b_a17f | [$k__401[lq_tmp_x_398:=lq_anf__d17P][VV#400:=VV#F37][VV#F:=VV#F37]]}
  id 37 tag [2]
  // META constraint id 37 : monad3.hs:7:44-48


constraint:
  env [0; 1; 33; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 44; 45]
  grd true
  lhs {VV#F6 : int | [$k__451[VV#450:=VV#F6][VV#457:=VV#613][lq_tmp_x_570:=VV#613][lq_tmp_x_567:=VV#F6][VV#616:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [$k__309[fix##36#dOrd_a17g:=fix#GHC.Classes.#36#fOrdInt#35#rhx][fix##36#dNum_a17h:=fix#GHC.Num.#36#fNumInt#35#rhy][fix##36#dMonad_a17i:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][VV#308:=VV#F6][lq_tmp_x_550:=fix#GHC.Classes.#36#fOrdInt#35#rhx][lq_tmp_x_551:=fix#GHC.Num.#36#fNumInt#35#rhy][lq_tmp_x_552:=fix#GHC.Base.#36#fMonad#91##93##35#r2J][lq_tmp_x_557:=VV#613][lq_tmp_x_559:=VV#F6][VV#616:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [3]
  // META constraint id 6 : monad3.hs:14:10-11


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 85; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F22 : b_a17f | [$k__440[lq_tmp_x_26:=z#a16B][VV#439:=VV#F22][VV#F:=VV#F22]]}
  rhs {VV#F22 : b_a17f | [$k__325[VV#324:=VV#F22][VV#F:=VV#F22]]}
  id 22 tag [2]
  // META constraint id 22 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       107;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F38 : GHC.Types.Bool | [(VV#F38 = lq_anf__d17P)]}
  rhs {VV#F38 : GHC.Types.Bool | [(? Prop([VV#F38]))]}
  id 38 tag [2]
  // META constraint id 38 : monad3.hs:7:35-40


constraint:
  env [0; 1; 2; 50; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29; 31]
  grd true
  lhs {VV#F7 : [int] | [(len([VV#F7]) = (1 + len([lq_anf__d17Z])));
                        ((? null([VV#F7])) <=> false);
                        (xsListSelector([VV#F7]) = lq_anf__d17Z);
                        (xListSelector([VV#F7]) = lq_anf__d17V);
                        (len([VV#F7]) >= 0)]}
  rhs {VV#F7 : [int] | [$k__458[VV#457:=VV#F7][VV#623:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : monad3.hs:13:6-12


constraint:
  env [0;
       16;
       1;
       2;
       3;
       4;
       5;
       6;
       86;
       7;
       8;
       9;
       89;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F23 : b_a17f | [$k__332[x#a16C:=lq_tmp_x_30][lq_tmp_x_448:=lq_tmp_x_30][VV#331:=VV#F23][VV#F:=VV#F23]]}
  rhs {VV#F23 : b_a17f | [$k__443[lq_tmp_x_26:=z#a16B][VV#442:=VV#F23][VV#F:=VV#F23]]}
  id 23 tag [2]
  // META constraint id 23 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       113;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F39 : b_a17f | [(VV#F39 = lq_anf__d17O)]}
  rhs {VV#F39 : b_a17f | [$k__369[lq_tmp_x_365:=fix##36#dOrd_a17g][lq_tmp_x_366:=x#a16C][VV#368:=VV#F39][VV#F:=VV#F39]]}
  id 39 tag [2]
  // META constraint id 39 : monad3.hs:7:40


constraint:
  env [0;
       1;
       2;
       3;
       51;
       4;
       52;
       5;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       29;
       31]
  grd true
  lhs {VV#F8 : int | [$k__527[VV#526:=VV#F8][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_525:=lq_anf__d17Z][lq_tmp_x_521:=VV#623][lq_tmp_x_529:=VV#F8][VV#626:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : int | [$k__451[VV#457:=VV#623][VV#450:=VV#F8][VV#626:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : monad3.hs:13:6-12


constraint:
  env [0;
       16;
       1;
       2;
       3;
       4;
       5;
       6;
       86;
       7;
       8;
       9;
       10;
       90;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F24 : b_a17f | [$k__443[lq_tmp_x_26:=z#a16B][VV#442:=VV#F24][VV#F:=VV#F24]]}
  rhs {VV#F24 : b_a17f | [$k__332[x#a16C:=lq_tmp_x_30][lq_tmp_x_448:=lq_tmp_x_30][VV#331:=VV#F24][VV#F:=VV#F24]]}
  id 24 tag [2]
  // META constraint id 24 : monad3.hs:(6,9)-(7,49)


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       114;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F40 : b_a17f | [(VV#F40 = x#a16C)]}
  rhs {VV#F40 : b_a17f | [$k__369[lq_tmp_x_365:=fix##36#dOrd_a17g][VV#368:=VV#F40][VV#F:=VV#F40]]}
  id 40 tag [2]
  // META constraint id 40 : monad3.hs:7:35


constraint:
  env [0;
       1;
       2;
       3;
       51;
       4;
       5;
       6;
       54;
       7;
       55;
       8;
       9;
       25;
       10;
       26;
       11;
       27;
       29;
       31]
  grd true
  lhs {VV#F9 : int | [$k__531[lq_tmp_x_533:=lq_tmp_x_453][VV#530:=VV#F9][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_525:=lq_anf__d17Z][lq_tmp_x_520:=lq_tmp_x_453][lq_tmp_x_529:=VV#F9][VV#630:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : int | [$k__455[VV#454:=VV#F9][VV#630:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : monad3.hs:13:6-12


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 93; 14; 15]
  grd true
  lhs {VV#F25 : b_a17f | [$k__309[VV#308:=VV#F25][VV#F:=VV#F25]]}
  rhs {VV#F25 : b_a17f | [$k__440[VV#439:=VV#F25][VV#F:=VV#F25]]}
  id 25 tag [2]
  // META constraint id 25 : monad3.hs:6:17


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       58;
       11;
       27;
       59;
       29;
       31]
  grd true
  lhs {VV#F10 : int | [$k__504[VV#503:=VV#F10][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#F10][lq_tmp_x_498:=VV#633][lq_tmp_x_539:=VV#633][lq_tmp_x_536:=VV#F10][VV#636:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : int | [$k__527[VV#526:=VV#F10][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_519:=VV#633][lq_tmp_x_529:=VV#F10][VV#636:=VV#F10][VV#F:=VV#F10]]}
  id 10 tag [1]
  // META constraint id 10 : monad3.hs:13:6-12


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 94; 15]
  grd true
  lhs {VV#F26 : b_a17f | [$k__440[VV#439:=VV#F26][VV#F:=VV#F26]]}
  rhs {VV#F26 : b_a17f | [$k__309[VV#308:=VV#F26][VV#F:=VV#F26]]}
  id 26 tag [2]
  // META constraint id 26 : monad3.hs:6:17


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       58;
       11;
       27;
       59;
       29;
       31]
  grd true
  lhs {VV#F11 : int | [$k__504[VV#503:=VV#F11][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#F11][lq_tmp_x_498:=VV#633][lq_tmp_x_539:=VV#633][lq_tmp_x_536:=VV#F11][VV#636:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : int | [$k__531[lq_tmp_x_533:=lq_anf__d17V][VV#530:=VV#F11][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_519:=VV#633][lq_tmp_x_529:=VV#F11][VV#636:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]
  // META constraint id 11 : monad3.hs:13:6-12


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       95]
  grd true
  lhs {VV#F27 : (m_a17e  b_a17f) | [$k__421[VV#420:=VV#F27][lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T][lq_tmp_x_423:=VV#F27][VV#F:=VV#F27]]}
  rhs {VV#F27 : (m_a17e  b_a17f) | [$k__335[VV#334:=VV#F27][VV#F:=VV#F27]]}
  id 27 tag [2]
  // META constraint id 27 : monad3.hs:7:12-49


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       25;
       10;
       26;
       58;
       11;
       27;
       29;
       61;
       62;
       31]
  grd true
  lhs {VV#F12 : int | [$k__508[lq_tmp_x_510:=lq_tmp_x_518][VV#507:=VV#F12][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_502:=lq_anf__d17Y][lq_tmp_x_506:=VV#F12][lq_tmp_x_497:=lq_tmp_x_518][lq_tmp_x_537:=lq_tmp_x_518][lq_tmp_x_538:=VV#F12][VV#640:=VV#F12][VV#F:=VV#F12]]}
  rhs {VV#F12 : int | [$k__531[lq_tmp_x_533:=lq_tmp_x_518][VV#530:=VV#F12][lq_tmp_x_524:=lq_anf__d17V][lq_tmp_x_529:=VV#F12][VV#640:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : monad3.hs:13:6-12


constraint:
  env [0;
       16;
       96;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F28 : m_a17e | [$k__415[lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T][VV#414:=VV#F28][VV#F:=VV#F28]]}
  rhs {VV#F28 : m_a17e | [$k__329[VV#328:=VV#F28][VV#F:=VV#F28]]}
  id 28 tag [2]
  // META constraint id 28 : monad3.hs:7:12-49


constraint:
  env [0; 64; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29; 31]
  grd true
  lhs {VV#F13 : int | [(VV#F13 = lq_anf__d17V)]}
  rhs {VV#F13 : int | [$k__527[VV#526:=VV#F13][lq_tmp_x_529:=VV#F13][VV#643:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : monad3.hs:13:7


constraint:
  env [0;
       16;
       1;
       17;
       97;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F29 : b_a17f | [$k__418[lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T][VV#417:=VV#F29][VV#F:=VV#F29]]}
  rhs {VV#F29 : b_a17f | [$k__332[VV#331:=VV#F29][VV#F:=VV#F29]]}
  id 29 tag [2]
  // META constraint id 29 : monad3.hs:7:12-49


constraint:
  env [0; 1; 2; 3; 67; 4; 68; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29]
  grd true
  lhs {VV#F14 : int | [$k__486[VV#485:=VV#F14][lq_tmp_x_488:=VV#F14][lq_tmp_x_484:=VV#646][lq_tmp_x_516:=VV#646][lq_tmp_x_513:=VV#F14][VV#649:=VV#F14][VV#F:=VV#F14]]}
  rhs {VV#F14 : int | [$k__504[VV#503:=VV#F14][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_496:=VV#646][lq_tmp_x_506:=VV#F14][VV#649:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [1]
  // META constraint id 14 : <no location info>


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       98;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F30 : b_a17f | [$k__332[VV#331:=VV#F30][VV#F:=VV#F30]]}
  rhs {VV#F30 : b_a17f | [$k__418[lq_tmp_x_409:=lq_anf__d17M][lq_tmp_x_410:=lq_anf__d17T][VV#417:=VV#F30][VV#F:=VV#F30]]}
  id 30 tag [2]
  // META constraint id 30 : monad3.hs:7:12-49


constraint:
  env [0; 1; 2; 3; 67; 4; 68; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29]
  grd true
  lhs {VV#F15 : int | [$k__486[VV#485:=VV#F15][lq_tmp_x_488:=VV#F15][lq_tmp_x_484:=VV#646][lq_tmp_x_516:=VV#646][lq_tmp_x_513:=VV#F15][VV#649:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : int | [$k__508[lq_tmp_x_510:=lq_anf__d17X][VV#507:=VV#F15][lq_tmp_x_501:=lq_anf__d17X][lq_tmp_x_496:=VV#646][lq_tmp_x_506:=VV#F15][VV#649:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [1]
  // META constraint id 15 : <no location info>


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       99;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F31 : b_a17f | [(VV#F31 = lq_anf__d17T)]}
  rhs {VV#F31 : b_a17f | [$k__412[lq_tmp_x_409:=lq_anf__d17M][VV#411:=VV#F31][VV#F:=VV#F31]]}
  id 31 tag [2]
  // META constraint id 31 : monad3.hs:7:21-49




wf:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29; 31]
  reft {VV#530 : int | [$k__531]}
  
  // META wf  : monad3.hs:13:6-12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29; 31]
  reft {VV#526 : int | [$k__527]}
  
  // META wf  : monad3.hs:13:6-12


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29; 30]
  reft {VV#507 : int | [$k__508]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 29]
  reft {VV#503 : int | [$k__504]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27; 28]
  reft {VV#489 : int | [$k__490]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 25; 10; 26; 11; 27]
  reft {VV#485 : int | [$k__486]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#457 : [int] | [$k__458]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 125]
  reft {VV#450 : int | [$k__451]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 127]
  reft {VV#454 : int | [$k__455]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#311 : (m_a17e  b_a17f) | [$k__312]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#305 : m_a17e | [$k__306]}
  
  // META wf  : <no location info>


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#308 : b_a17f | [$k__309]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#442 : b_a17f | [$k__443]}
  
  // META wf  : monad3.hs:(6,9)-(7,49)


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#439 : b_a17f | [$k__440]}
  
  // META wf  : monad3.hs:(6,9)-(7,49)


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#324 : b_a17f | [$k__325]}
  
  // META wf  : <no location info>


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#420 : (m_a17e  b_a17f) | [$k__421]}
  
  // META wf  : monad3.hs:7:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#414 : m_a17e | [$k__415]}
  
  // META wf  : monad3.hs:7:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#417 : b_a17f | [$k__418]}
  
  // META wf  : monad3.hs:7:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       24;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#411 : b_a17f | [$k__412]}
  
  // META wf  : monad3.hs:7:19


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       22;
       7;
       23;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#400 : b_a17f | [$k__401]}
  
  // META wf  : monad3.hs:7:21-32


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  reft {VV#368 : b_a17f | [$k__369]}
  
  // META wf  : monad3.hs:7:37-38


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#344 : b_a17f | [$k__345]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#334 : (m_a17e  b_a17f) | [$k__335]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#328 : m_a17e | [$k__329]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 17; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#331 : b_a17f | [$k__332]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#321 : (m_a17e  b_a17f) | [$k__322]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#315 : m_a17e | [$k__316]}
  
  // META wf  : <no location info>


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#318 : b_a17f | [$k__319]}
  
  // META wf  : <no location info>







