qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [int]): (listElts([v]) = Set_empty([0])) // "coretologic.hs" (line 13, column 1)
qualif Auto(VV : (Set_Set  a_a14d), fix##126#A0 : [a_a14d]): (VV = goo([fix##126#A0])) // "coretologic.hs" (line 21, column 1)
qualif Auto(v : [int]): (listElts([v]) = Set_empty([0])) // "coretologic.hs" (line 17, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif Auto(v : [int]): (listElts([v]) = Set_empty([0])) // "coretologic.hs" (line 13, column 1)
qualif Auto(VV : (Set_Set  a_a14d), fix##126#A0 : [a_a14d]): (VV = goo([fix##126#A0])) // "coretologic.hs" (line 21, column 1)
qualif Auto(v : [int]): (listElts([v]) = Set_empty([0])) // "coretologic.hs" (line 17, column 1)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant Set_emp : (func(1, [(Set_Set  @(0)); bool]))
constant Set_empty : (func(1, [int; (Set_Set  @(0))]))
constant goo : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_cup : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant Set_sub : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             bool]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant Set_dif : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant strLen : (func(0, [int; int]))
constant Set_cap : (func(1, [(Set_Set  @(0));
                             (Set_Set  @(0));
                             (Set_Set  @(0))]))
constant listElts : (func(1, [[@(0)]; (Set_Set  @(0))]))
constant Set_sng : (func(1, [@(0); (Set_Set  @(0))]))
constant Set_mem : (func(1, [@(0); (Set_Set  @(0)); bool]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant GHC.Types.I##6c : (func(0, [int; int]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#GHC.Types.#58##35#64 : (func(1, [@(0);
                                              [@(0)];
                                              [@(0)]]))
constant fix#GHC.Types.#91##93##35#6m : (func(1, [[@(0)]]))


bind 0 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 1 Data.Set.Base.empty#r3r : {VV : func(1, [(Set_Set  @(0))]) | []}
bind 2 GHC.Types.EQ#6U : {VV#151 : GHC.Types.Ordering | [(VV#151 = GHC.Types.EQ#6U)]}
bind 3 GHC.Types.LT#6S : {VV#152 : GHC.Types.Ordering | [(VV#152 = GHC.Types.LT#6S)]}
bind 4 GHC.Types.GT#6W : {VV#153 : GHC.Types.Ordering | [(VV#153 = GHC.Types.GT#6W)]}
bind 5 Data.Set.Base.empty#r3r : {VV : func(1, [(Set_Set  @(0))]) | []}
bind 6 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 7 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 8 GHC.Types.EQ#6U : {VV#179 : GHC.Types.Ordering | [(cmp([VV#179]) = GHC.Types.EQ#6U)]}
bind 9 GHC.Types.LT#6S : {VV#180 : GHC.Types.Ordering | [(cmp([VV#180]) = GHC.Types.LT#6S)]}
bind 10 GHC.Types.GT#6W : {VV#181 : GHC.Types.Ordering | [(cmp([VV#181]) = GHC.Types.GT#6W)]}
bind 11 fix##36#dOrd_a14e : {VV#190 : (GHC.Classes.Ord  a_a14d) | []}
bind 12 ds_d14s : {VV#191 : [a_a14d] | [(len([VV#191]) >= 0)]}
bind 13 lq_anf__d14t : {lq_tmp_x_193 : [a_a14d] | [(lq_tmp_x_193 = ds_d14s);
                                                   (len([lq_tmp_x_193]) >= 0)]}
bind 14 lq_anf__d14t : {lq_tmp_x_196 : [a_a14d] | [(lq_tmp_x_196 = ds_d14s);
                                                   (len([lq_tmp_x_196]) >= 0);
                                                   (len([lq_tmp_x_196]) >= 0)]}
bind 15 lq_anf__d14t : {lq_tmp_x_196 : [a_a14d] | [(lq_tmp_x_196 = ds_d14s);
                                                   (len([lq_tmp_x_196]) >= 0);
                                                   (? Set_emp([listElts([lq_tmp_x_196])]));
                                                   (len([lq_tmp_x_196]) = 0);
                                                   ((? null([lq_tmp_x_196])) <=> true);
                                                   (goo([lq_tmp_x_196]) = Set_empty([0]));
                                                   (lq_tmp_x_196 = fix#GHC.Types.#91##93##35#6m([]));
                                                   (? Set_emp([listElts([lq_tmp_x_196])]));
                                                   (len([lq_tmp_x_196]) = 0);
                                                   ((? null([lq_tmp_x_196])) <=> true);
                                                   (goo([lq_tmp_x_196]) = Set_empty([0]));
                                                   (len([lq_tmp_x_196]) >= 0)]}
bind 16 lq_anf__d14t : {lq_tmp_x_208 : [a_a14d] | [(lq_tmp_x_208 = ds_d14s);
                                                   (len([lq_tmp_x_208]) >= 0);
                                                   (len([lq_tmp_x_208]) >= 0)]}
bind 17 x#a13Y : {VV : a_a14d | []}
bind 18 xs#a13Z : {lq_tmp_x_218 : [a_a14d] | [(len([lq_tmp_x_218]) >= 0)]}
bind 19 lq_anf__d14t : {lq_tmp_x_208 : [a_a14d] | [(lq_tmp_x_208 = ds_d14s);
                                                   (len([lq_tmp_x_208]) >= 0);
                                                   (listElts([lq_tmp_x_208]) = Set_cup([Set_sng([x#a13Y]);
                                                                                        listElts([xs#a13Z])]));
                                                   (len([lq_tmp_x_208]) = (1 + len([xs#a13Z])));
                                                   ((? null([lq_tmp_x_208])) <=> false);
                                                   (xsListSelector([lq_tmp_x_208]) = xs#a13Z);
                                                   (xListSelector([lq_tmp_x_208]) = x#a13Y);
                                                   (goo([lq_tmp_x_208]) = Set_cup([Set_sng([x#a13Y]);
                                                                                   goo([xs#a13Z])]));
                                                   (lq_tmp_x_208 = fix#GHC.Types.#58##35#64([x#a13Y;
                                                                                             xs#a13Z]));
                                                   (listElts([lq_tmp_x_208]) = Set_cup([Set_sng([x#a13Y]);
                                                                                        listElts([xs#a13Z])]));
                                                   (len([lq_tmp_x_208]) = (1 + len([xs#a13Z])));
                                                   ((? null([lq_tmp_x_208])) <=> false);
                                                   (xsListSelector([lq_tmp_x_208]) = xs#a13Z);
                                                   (xListSelector([lq_tmp_x_208]) = x#a13Y);
                                                   (goo([lq_tmp_x_208]) = Set_cup([Set_sng([x#a13Y]);
                                                                                   goo([xs#a13Z])]));
                                                   (len([lq_tmp_x_208]) >= 0)]}
bind 20 lq_anf__d14u : {lq_tmp_x_227 : (Set_Set  a_a14d) | [(lq_tmp_x_227 = Set_sng([x#a13Y]))]}
bind 21 lq_anf__d14v : {VV#248 : (Set_Set  a_a14d) | [(VV#248 = goo([xs#a13Z]))]}
bind 22 lq_anf__d14w : {lq_tmp_x_266 : int | [(lq_tmp_x_266 = (1  :  int))]}
bind 23 lq_tmp_x_280 : {VV#281 : int | []}
bind 24 lq_anf__d14x : {lq_tmp_x_272 : [int] | [(? Set_emp([listElts([lq_tmp_x_272])]));
                                                (len([lq_tmp_x_272]) = 0);
                                                ((? null([lq_tmp_x_272])) <=> true);
                                                (goo([lq_tmp_x_272]) = Set_empty([0]));
                                                (len([lq_tmp_x_272]) >= 0)]}
bind 25 lq_tmp_x_298 : {VV#299 : int | []}
bind 26 CoreToLog.bar#rqn : {v : [int] | [(listElts([v]) = Set_empty([0]));
                                          (len([v]) >= 0)]}
bind 27 lq_tmp_x_315 : {VV#316 : int | []}
bind 28 CoreToLog.foo#rpm : {v : [int] | [(listElts([v]) = Set_empty([0]));
                                          (len([v]) >= 0)]}
bind 29 VV#318 : {VV#318 : [int] | [(? Set_emp([listElts([VV#318])]));
                                    (len([VV#318]) = 0);
                                    ((? null([VV#318])) <=> true);
                                    (goo([VV#318]) = Set_empty([0]));
                                    (len([VV#318]) >= 0)]}
bind 30 VV#318 : {VV#318 : [int] | [(? Set_emp([listElts([VV#318])]));
                                    (len([VV#318]) = 0);
                                    ((? null([VV#318])) <=> true);
                                    (goo([VV#318]) = Set_empty([0]));
                                    (len([VV#318]) >= 0)]}
bind 31 VV#321 : {VV#321 : int | [$k__309[VV#308:=VV#321][lq_tmp_x_307:=VV#318][lq_tmp_x_311:=VV#321]]}
bind 32 VV#321 : {VV#321 : int | [$k__309[VV#308:=VV#321][lq_tmp_x_307:=VV#318][lq_tmp_x_311:=VV#321]]}
bind 33 fldList : {VV#324 : int | []}
bind 34 VV#325 : {VV#325 : int | [$k__313[lq_tmp_x_315:=fldList][VV#312:=VV#325][lq_tmp_x_306:=fldList][lq_tmp_x_311:=VV#325]]}
bind 35 VV#325 : {VV#325 : int | [$k__313[lq_tmp_x_315:=fldList][VV#312:=VV#325][lq_tmp_x_306:=fldList][lq_tmp_x_311:=VV#325]]}
bind 36 VV#328 : {VV#328 : [int] | [(listElts([VV#328]) = Set_cup([Set_sng([lq_anf__d14w]);
                                                                   listElts([lq_anf__d14x])]));
                                    (len([VV#328]) = (1 + len([lq_anf__d14x])));
                                    ((? null([VV#328])) <=> false);
                                    (xsListSelector([VV#328]) = lq_anf__d14x);
                                    (xListSelector([VV#328]) = lq_anf__d14w);
                                    (goo([VV#328]) = Set_cup([Set_sng([lq_anf__d14w]);
                                                              goo([lq_anf__d14x])]));
                                    (len([VV#328]) >= 0)]}
bind 37 VV#328 : {VV#328 : [int] | [(listElts([VV#328]) = Set_cup([Set_sng([lq_anf__d14w]);
                                                                   listElts([lq_anf__d14x])]));
                                    (len([VV#328]) = (1 + len([lq_anf__d14x])));
                                    ((? null([VV#328])) <=> false);
                                    (xsListSelector([VV#328]) = lq_anf__d14x);
                                    (xListSelector([VV#328]) = lq_anf__d14w);
                                    (goo([VV#328]) = Set_cup([Set_sng([lq_anf__d14w]);
                                                              goo([lq_anf__d14x])]));
                                    (len([VV#328]) >= 0)]}
bind 38 VV#331 : {VV#331 : int | [$k__292[VV#291:=VV#331][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_290:=lq_anf__d14x][lq_tmp_x_286:=VV#328][lq_tmp_x_294:=VV#331]]}
bind 39 VV#331 : {VV#331 : int | [$k__292[VV#291:=VV#331][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_290:=lq_anf__d14x][lq_tmp_x_286:=VV#328][lq_tmp_x_294:=VV#331]]}
bind 40 fldList : {VV#334 : int | []}
bind 41 VV#335 : {VV#335 : int | [$k__296[lq_tmp_x_298:=fldList][VV#295:=VV#335][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_290:=lq_anf__d14x][lq_tmp_x_285:=fldList][lq_tmp_x_294:=VV#335]]}
bind 42 VV#335 : {VV#335 : int | [$k__296[lq_tmp_x_298:=fldList][VV#295:=VV#335][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_290:=lq_anf__d14x][lq_tmp_x_285:=fldList][lq_tmp_x_294:=VV#335]]}
bind 43 VV#338 : {VV#338 : [int] | [(VV#338 = lq_anf__d14x);
                                    (len([VV#338]) >= 0)]}
bind 44 VV#338 : {VV#338 : [int] | [(VV#338 = lq_anf__d14x);
                                    (len([VV#338]) >= 0)]}
bind 45 VV#341 : {VV#341 : int | [$k__274[VV#273:=VV#341][lq_tmp_x_276:=VV#341][lq_tmp_x_272:=VV#338][lq_tmp_x_304:=VV#338][lq_tmp_x_301:=VV#341]]}
bind 46 VV#341 : {VV#341 : int | [$k__274[VV#273:=VV#341][lq_tmp_x_276:=VV#341][lq_tmp_x_272:=VV#338][lq_tmp_x_304:=VV#338][lq_tmp_x_301:=VV#341]]}
bind 47 lq_tmp_x_283 : {VV#344 : int | []}
bind 48 VV#345 : {VV#345 : int | [$k__278[lq_tmp_x_280:=lq_tmp_x_283][VV#277:=VV#345][lq_tmp_x_276:=VV#345][lq_tmp_x_271:=lq_tmp_x_283][lq_tmp_x_302:=lq_tmp_x_283][lq_tmp_x_303:=VV#345]]}
bind 49 VV#345 : {VV#345 : int | [$k__278[lq_tmp_x_280:=lq_tmp_x_283][VV#277:=VV#345][lq_tmp_x_276:=VV#345][lq_tmp_x_271:=lq_tmp_x_283][lq_tmp_x_302:=lq_tmp_x_283][lq_tmp_x_303:=VV#345]]}
bind 50 VV#348 : {VV#348 : int | [(VV#348 = lq_anf__d14w)]}
bind 51 VV#348 : {VV#348 : int | [(VV#348 = lq_anf__d14w)]}
bind 52 VV#351 : {VV#351 : int | [(VV#351 = 1)]}
bind 53 VV#351 : {VV#351 : int | [(VV#351 = 1)]}
bind 54 VV#354 : {VV#354 : (Set_Set  a_a14d) | [(VV#354 = Set_cup([lq_anf__d14u;
                                                                   lq_anf__d14v]))]}
bind 55 VV#354 : {VV#354 : (Set_Set  a_a14d) | [(VV#354 = Set_cup([lq_anf__d14u;
                                                                   lq_anf__d14v]))]}
bind 56 VV#259 : {VV#259 : a_a14d | [$k__260[lq_tmp_x_256:=fix##36#dOrd_a14e][lq_tmp_x_257:=lq_anf__d14u][lq_tmp_x_258:=lq_anf__d14v][lq_tmp_x_252:=VV#354]]}
bind 57 VV#358 : {VV#358 : (Set_Set  a_a14d) | [(VV#358 = lq_anf__d14v)]}
bind 58 VV#358 : {VV#358 : (Set_Set  a_a14d) | [(VV#358 = lq_anf__d14v)]}
bind 59 VV#242 : {VV#242 : a_a14d | [$k__243[lq_tmp_x_187:=fix##36#dOrd_a14e][lq_tmp_x_188:=xs#a13Z][VV:=VV#358][VV#248:=VV#358][lq_tmp_x_264:=VV#358]]}
bind 60 VV#362 : {VV#362 : (Set_Set  a_a14d) | [(VV#362 = lq_anf__d14u)]}
bind 61 VV#362 : {VV#362 : (Set_Set  a_a14d) | [(VV#362 = lq_anf__d14u)]}
bind 62 VV#230 : {VV#230 : a_a14d | [$k__231[lq_tmp_x_229:=x#a13Y][lq_tmp_x_227:=VV#362][lq_tmp_x_263:=VV#362]]}
bind 63 VV#366 : {VV#366 : [a_a14d] | [(VV#366 = xs#a13Z);
                                       (len([VV#366]) >= 0)]}
bind 64 VV#366 : {VV#366 : [a_a14d] | [(VV#366 = xs#a13Z);
                                       (len([VV#366]) >= 0)]}
bind 65 VV : {VV : a_a14d | []}
bind 66 fldList : {VV : a_a14d | []}
bind 67 VV : {VV : a_a14d | []}
bind 68 VV : {VV : a_a14d | [(VV = x#a13Y)]}
bind 69 VV#373 : {VV#373 : (Set_Set  a_a14d) | [(? Set_emp([VV#373]))]}
bind 70 VV#373 : {VV#373 : (Set_Set  a_a14d) | [(? Set_emp([VV#373]))]}
bind 71 VV#204 : {VV#204 : a_a14d | [$k__205[lq_tmp_x_203:=VV#373]]}
bind 72 VV#312 : {VV#312 : int | [$k__313]}
bind 73 VV#308 : {VV#308 : int | [$k__309]}
bind 74 VV#295 : {VV#295 : int | [$k__296]}
bind 75 VV#291 : {VV#291 : int | [$k__292]}
bind 76 VV#277 : {VV#277 : int | [$k__278]}
bind 77 VV#273 : {VV#273 : int | [$k__274]}




constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 29]
  grd true
  lhs {VV#F1 : [int] | [(? Set_emp([listElts([VV#F1])]));
                        (len([VV#F1]) = 0);
                        ((? null([VV#F1])) <=> true);
                        (goo([VV#F1]) = Set_empty([0]));
                        (len([VV#F1]) >= 0)]}
  rhs {VV#F1 : [int] | [(listElts([VV#F1]) = Set_empty([0]))]}
  id 1 tag [3]
  // META constraint id 1 : coretologic.hs:13:7-8


constraint:
  env [0; 1; 2; 3; 4; 36; 5; 6; 22; 7; 8; 24; 9; 10]
  grd true
  lhs {VV#F2 : [int] | [(listElts([VV#F2]) = Set_cup([Set_sng([lq_anf__d14w]);
                                                      listElts([lq_anf__d14x])]));
                        (len([VV#F2]) = (1 + len([lq_anf__d14x])));
                        ((? null([VV#F2])) <=> false);
                        (xsListSelector([VV#F2]) = lq_anf__d14x);
                        (xListSelector([VV#F2]) = lq_anf__d14w);
                        (goo([VV#F2]) = Set_cup([Set_sng([lq_anf__d14w]);
                                                 goo([lq_anf__d14x])]));
                        (len([VV#F2]) >= 0)]}
  rhs {VV#F2 : [int] | [(listElts([VV#F2]) = Set_empty([0]))]}
  id 2 tag [2]
  // META constraint id 2 : coretologic.hs:17:7-9


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 24; 9; 10; 44; 45]
  grd true
  lhs {VV#F3 : int | [$k__274[VV#273:=VV#F3][lq_tmp_x_276:=VV#F3][lq_tmp_x_272:=VV#338][lq_tmp_x_304:=VV#338][lq_tmp_x_301:=VV#F3][VV#341:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : int | [$k__292[VV#291:=VV#F3][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_284:=VV#338][lq_tmp_x_294:=VV#F3][VV#341:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : coretologic.hs:17:7-9


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 24; 9; 10; 44; 45]
  grd true
  lhs {VV#F4 : int | [$k__274[VV#273:=VV#F4][lq_tmp_x_276:=VV#F4][lq_tmp_x_272:=VV#338][lq_tmp_x_304:=VV#338][lq_tmp_x_301:=VV#F4][VV#341:=VV#F4][VV#F:=VV#F4]]}
  rhs {VV#F4 : int | [$k__296[lq_tmp_x_298:=lq_anf__d14w][VV#295:=VV#F4][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_284:=VV#338][lq_tmp_x_294:=VV#F4][VV#341:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : coretologic.hs:17:7-9


constraint:
  env [0; 48; 1; 2; 3; 4; 5; 6; 22; 7; 8; 24; 9; 10; 44; 47]
  grd true
  lhs {VV#F5 : int | [$k__278[lq_tmp_x_280:=lq_tmp_x_283][VV#277:=VV#F5][lq_tmp_x_276:=VV#F5][lq_tmp_x_271:=lq_tmp_x_283][lq_tmp_x_302:=lq_tmp_x_283][lq_tmp_x_303:=VV#F5][VV#345:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [$k__296[lq_tmp_x_298:=lq_tmp_x_283][VV#295:=VV#F5][lq_tmp_x_289:=lq_anf__d14w][lq_tmp_x_294:=VV#F5][VV#345:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]
  // META constraint id 5 : coretologic.hs:17:7-9


constraint:
  env [0; 1; 2; 50; 3; 4; 5; 6; 22; 7; 8; 24; 9; 10]
  grd true
  lhs {VV#F6 : int | [(VV#F6 = lq_anf__d14w)]}
  rhs {VV#F6 : int | [$k__292[VV#291:=VV#F6][lq_tmp_x_294:=VV#F6][VV#348:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]
  // META constraint id 6 : coretologic.hs:17:8


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       54;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F7 : (Set_Set  a_a14d) | [(VV#F7 = Set_cup([lq_anf__d14u;
                                                      lq_anf__d14v]))]}
  rhs {VV#F7 : (Set_Set  a_a14d) | [(VV#F7 = goo([ds_d14s]))]}
  id 7 tag [1]
  // META constraint id 7 : coretologic.hs:22:14-43


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       58;
       11;
       59;
       12;
       13]
  grd true
  lhs {VV#F8 : a_a14d | [$k__243[lq_tmp_x_187:=fix##36#dOrd_a14e][lq_tmp_x_188:=xs#a13Z][VV:=VV#358][VV#248:=VV#358][lq_tmp_x_264:=VV#358][VV#242:=VV#F8][VV#F:=VV#F8]]}
  rhs {VV#F8 : a_a14d | [$k__260[lq_tmp_x_256:=fix##36#dOrd_a14e][lq_tmp_x_257:=lq_anf__d14u][lq_tmp_x_251:=VV#358][VV#259:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : coretologic.hs:22:37-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       61;
       62]
  grd true
  lhs {VV#F9 : a_a14d | [$k__231[lq_tmp_x_229:=x#a13Y][lq_tmp_x_227:=VV#362][lq_tmp_x_263:=VV#362][VV#230:=VV#F9][VV#F:=VV#F9]]}
  rhs {VV#F9 : a_a14d | [$k__260[lq_tmp_x_256:=fix##36#dOrd_a14e][lq_tmp_x_250:=VV#362][VV#259:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : coretologic.hs:22:15-25


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       63]
  grd true
  lhs {VV#F10 : [a_a14d] | [(VV#F10 = xs#a13Z);
                            (len([VV#F10]) >= 0)]}
  rhs {VV#F10 : [a_a14d] | [(len([VV#F10]) < len([ds_d14s]))]}
  id 10 tag [1]
  // META constraint id 10 : coretologic.hs:22:41-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       63]
  grd true
  lhs {VV#F11 : [a_a14d] | [(VV#F11 = xs#a13Z);
                            (len([VV#F11]) >= 0)]}
  rhs {VV#F11 : [a_a14d] | [(len([VV#F11]) >= 0)]}
  id 11 tag [1]
  // META constraint id 11 : coretologic.hs:22:41-42


constraint:
  env [0;
       16;
       64;
       1;
       17;
       65;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F12 : a_a14d | []}
  rhs {VV#F12 : a_a14d | [$k__243[lq_tmp_x_187:=fix##36#dOrd_a14e][VV:=VV#366][VV#242:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]
  // META constraint id 12 : coretologic.hs:22:41-42


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       68;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  grd true
  lhs {VV#F13 : a_a14d | [(VV#F13 = x#a13Y)]}
  rhs {VV#F13 : a_a14d | [$k__231[VV#230:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [1]
  // META constraint id 13 : coretologic.hs:22:25


constraint:
  env [0; 1; 2; 3; 4; 5; 69; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F14 : (Set_Set  a_a14d) | [(? Set_emp([VV#F14]))]}
  rhs {VV#F14 : (Set_Set  a_a14d) | [(VV#F14 = goo([ds_d14s]))]}
  id 14 tag [1]
  // META constraint id 14 : coretologic.hs:21:14-18




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26; 27]
  reft {VV#312 : int | [$k__313]}
  
  // META wf  : coretologic.hs:13:7-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 26]
  reft {VV#308 : int | [$k__309]}
  
  // META wf  : coretologic.hs:13:7-8


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 24; 9; 25; 10]
  reft {VV#295 : int | [$k__296]}
  
  // META wf  : coretologic.hs:17:7-9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 24; 9; 10]
  reft {VV#291 : int | [$k__292]}
  
  // META wf  : coretologic.hs:17:7-9


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 9; 10]
  reft {VV#277 : int | [$k__278]}
  
  // META wf  : coretologic.hs:17:1-3


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 8; 9; 10]
  reft {VV#273 : int | [$k__274]}
  
  // META wf  : coretologic.hs:17:1-3


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  reft {VV#259 : a_a14d | [$k__260]}
  
  // META wf  : coretologic.hs:22:28-34


wf:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13]
  reft {VV#242 : a_a14d | [$k__243]}
  
  // META wf  : coretologic.hs:22:37-39


wf:
  env [0; 16; 1; 17; 2; 18; 3; 19; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#230 : a_a14d | [$k__231]}
  
  // META wf  : coretologic.hs:22:15-23


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#204 : a_a14d | [$k__205]}
  
  // META wf  : coretologic.hs:21:14-18







