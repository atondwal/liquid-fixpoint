qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)

qualif Fst(v : @(1), fix##126#Y : @(0)): (v = fst([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 29, column 8)
qualif Snd(v : @(1), fix##126#Y : @(0)): (v = snd([fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.spec" (line 30, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) > 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 13, column 8)
qualif IsEmp(v : GHC.Types.Bool, fix##126#Xs : [@(0)]): ((? Prop([v])) <=> (len([fix##126#Xs]) = 0)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 14, column 8)
qualif ListZ(v : [@(0)]): (len([v]) = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 16, column 8)
qualif ListZ(v : [@(0)]): (len([v]) >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 17, column 8)
qualif ListZ(v : [@(0)]): (len([v]) > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 18, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 20, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) >= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 21, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) > len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 22, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) <= len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 23, column 8)
qualif CmpLen(v : [@(1)], fix##126#Xs : [@(0)]): (len([v]) < len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 24, column 8)
qualif EqLen(v : int, fix##126#Xs : [@(0)]): (v = len([fix##126#Xs])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 26, column 8)
qualif LenEq(v : [@(0)], fix##126#X : int): (fix##126#X = len([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 27, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X + 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 28, column 8)
qualif LenDiff(v : [@(0)], fix##126#X : int): (len([v]) = (fix##126#X - 1)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 29, column 8)
qualif LenAcc(v : int, fix##126#Xs : [@(0)], fix##126#N : int): (v = (len([fix##126#Xs]) + fix##126#N)) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/GHC/Base.hquals" (line 30, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 3, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 4, column 8)
qualif Bot(v : @(0)): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 5, column 8)
qualif Bot(v : bool): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 6, column 8)
qualif Bot(v : int): (0 = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 7, column 8)
qualif CmpZ(v : @(0)): (v < 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 9, column 8)
qualif CmpZ(v : @(0)): (v <= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 10, column 8)
qualif CmpZ(v : @(0)): (v > 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 11, column 8)
qualif CmpZ(v : @(0)): (v >= 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 12, column 8)
qualif CmpZ(v : @(0)): (v = 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 13, column 8)
qualif CmpZ(v : @(0)): (v != 0) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 14, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v < fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 16, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v <= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 17, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v > fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 18, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v >= fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 19, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v = fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 20, column 8)
qualif Cmp(v : @(0), fix##126#X : @(0)): (v != fix##126#X) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 21, column 8)
qualif One(v : int): (v = 1) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 28, column 8)
qualif True(v : bool): (? v) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 29, column 8)
qualif False(v : bool): (~ ((? v))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 30, column 8)
qualif True1(v : GHC.Types.Bool): (? Prop([v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 31, column 8)
qualif False1(v : GHC.Types.Bool): (~ ((? Prop([v])))) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 32, column 8)
qualif Papp(v : @(0), fix##126#P : (Pred  @(0))): (? papp1([fix##126#P;
                                                            v])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 35, column 8)
qualif Papp2(v : @(1), fix##126#X : @(0), fix##126#P : (Pred  @(1)  @(0))): (? papp2([fix##126#P;
                                                                                      v;
                                                                                      fix##126#X])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 38, column 8)
qualif Papp3(v : @(2), fix##126#X : @(0), fix##126#Y : @(1), fix##126#P : (Pred  @(2)  @(0)  @(1))): (? papp3([fix##126#P;
                                                                                                               v;
                                                                                                               fix##126#X;
                                                                                                               fix##126#Y])) // "/Users/benjamin/UCSDrepos/liquidhaskell/.cabal-sandbox/share/x86_64-osx-ghc-7.8.3/liquidhaskell-0.5.0.1/include/Prelude.hquals" (line 41, column 8)




constant Prop : (func(0, [GHC.Types.Bool; bool]))
constant x_Tuple54 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(3)]))
constant x_Tuple44 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(3)]))
constant xListSelector : (func(1, [[@(0)]; @(0)]))
constant x_Tuple41 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(0)]))
constant x_Tuple76 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(5)]))
constant autolen : (func(1, [@(0); int]))
constant addrLen : (func(0, [int; int]))
constant x_Tuple65 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(4)]))
constant strLen : (func(0, [int; int]))
constant x_Tuple52 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(1)]))
constant x_Tuple75 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(4)]))
constant x_Tuple64 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(3)]))
constant x_Tuple33 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(2)]))
constant fst : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant Data.Maybe.Just#r1a : (func(1, [@(0);
                                         (Data.Maybe.Maybe  @(0))]))
constant x_Tuple31 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(0)]))
constant x_Tuple43 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(2)]))
constant papp4 : (func(8, [(Pred  @(0)  @(1)  @(2)  @(6));
                           @(3);
                           @(4);
                           @(5);
                           @(7);
                           bool]))
constant x_Tuple71 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(0)]))
constant papp2 : (func(4, [(Pred  @(0)  @(1)); @(2); @(3); bool]))
constant x_Tuple32 : (func(3, [(Tuple  @(0)  @(1)  @(2)); @(1)]))
constant x_Tuple72 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(1)]))
constant x_Tuple63 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(2)]))
constant x_Tuple51 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(0)]))
constant len : (func(2, [(@(0)  @(1)); int]))
constant xsListSelector : (func(1, [[@(0)]; [@(0)]]))
constant null : (func(1, [[@(0)]; bool]))
constant x_Tuple53 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(2)]))
constant x_Tuple22 : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant fromJust : (func(1, [(Data.Maybe.Maybe  @(0)); @(0)]))
constant snd : (func(2, [(Tuple  @(0)  @(1)); @(1)]))
constant x_Tuple73 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(2)]))
constant x_Tuple62 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(1)]))
constant x_Tuple55 : (func(5, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4));
                               @(4)]))
constant papp3 : (func(6, [(Pred  @(0)  @(1)  @(2));
                           @(3);
                           @(4);
                           @(5);
                           bool]))
constant x_Tuple74 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(3)]))
constant cmp : (func(0, [GHC.Types.Ordering; GHC.Types.Ordering]))
constant papp1 : (func(1, [(Pred  @(0)); @(0); bool]))
constant isJust : (func(1, [(Data.Maybe.Maybe  @(0)); bool]))
constant x_Tuple42 : (func(4, [(Tuple  @(0)  @(1)  @(2)  @(3));
                               @(1)]))
constant x_Tuple21 : (func(2, [(Tuple  @(0)  @(1)); @(0)]))
constant x_Tuple61 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(0)]))
constant Data.Maybe.Nothing#r19 : (func(1, [(Data.Maybe.Maybe  @(0))]))
constant x_Tuple66 : (func(6, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5));
                               @(5)]))
constant x_Tuple77 : (func(7, [(Tuple  @(0)  @(1)  @(2)  @(3)  @(4)  @(5)  @(6));
                               @(6)]))


constant fix#lit#35#CastedTotality.hs#58#8#58#9#45#39#124#Data.Maybe.Just#32#x : (Str)
constant Data.Maybe.Just#r1a : (func(1, [@(0);
                                         (Data.Maybe.Maybe  @(0))]))
constant fix#lit#35#CastedTotality.hs#58#12#58#10#45#25#124#Data.Maybe.Just#32#x : (Str)
constant Data.Maybe.Nothing#r19 : (func(1, [(Data.Maybe.Maybe  @(0))]))


bind 0 GHC.Prim.void##0l : {VV#165 : GHC.Prim.Void# | []}
bind 1 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 2 fix#GHC.Show.#36#fShowInt#35#r13q : {VV#170 : (GHC.Show.Show  int) | []}
bind 3 GHC.Types.EQ#6U : {VV#171 : GHC.Types.Ordering | [(VV#171 = GHC.Types.EQ#6U)]}
bind 4 GHC.Types.LT#6S : {VV#172 : GHC.Types.Ordering | [(VV#172 = GHC.Types.LT#6S)]}
bind 5 GHC.Types.GT#6W : {VV#173 : GHC.Types.Ordering | [(VV#173 = GHC.Types.GT#6W)]}
bind 6 fix#GHC.Types.#91##93##35#6m : {VV : func(1, [[@(0)]]) | []}
bind 7 Data.Maybe.Nothing#r19 : {VV : func(1, [(Data.Maybe.Maybe  @(0))]) | []}
bind 8 GHC.Types.EQ#6U : {VV#218 : GHC.Types.Ordering | [(cmp([VV#218]) = GHC.Types.EQ#6U)]}
bind 9 GHC.Types.LT#6S : {VV#219 : GHC.Types.Ordering | [(cmp([VV#219]) = GHC.Types.LT#6S)]}
bind 10 GHC.Types.GT#6W : {VV#220 : GHC.Types.Ordering | [(cmp([VV#220]) = GHC.Types.GT#6W)]}
bind 11 lq_anf__d1hk : {lq_tmp_x_227 : (Data.Maybe.Maybe  t_a1gH) | [((? isJust([lq_tmp_x_227])) <=> false)]}
bind 12 lq_anf__d1hl : {lq_tmp_x_232 : (Data.Maybe.Maybe  t_a1gH) | [(lq_tmp_x_232 = lq_anf__d1hk)]}
bind 13 lq_anf__d1hl : {lq_tmp_x_234 : (Data.Maybe.Maybe  t_a1gH) | [(lq_tmp_x_234 = lq_anf__d1hk)]}
bind 14 lq_anf__d1hl : {lq_tmp_x_234 : (Data.Maybe.Maybe  t_a1gH) | [(lq_tmp_x_234 = lq_anf__d1hk);
                                                                     ((? isJust([lq_tmp_x_234])) <=> false);
                                                                     (lq_tmp_x_234 = Data.Maybe.Nothing#r19([]));
                                                                     ((? isJust([lq_tmp_x_234])) <=> false)]}
bind 15 ds_d1hf : {VV#239 : GHC.Prim.Void# | [$k__240]}
bind 16 lq_anf__d1hm : {lq_tmp_x_246 : int | [(lq_tmp_x_246 ~~ fix#lit#35#CastedTotality.hs#58#12#58#10#45#25#124#Data.Maybe.Just#32#x);
                                              (strLen([lq_tmp_x_246]) = 44)]}
bind 17 lq_anf__d1hn : {lq_tmp_x_254 : Tuple | [$k__252[VV#251:=lq_tmp_x_254][lq_tmp_x_250:=lq_anf__d1hm]]}
bind 18 lq_anf__d1hl : {lq_tmp_x_259 : (Data.Maybe.Maybe  t_a1gH) | [(lq_tmp_x_259 = lq_anf__d1hk)]}
bind 19 x#a1gD : {VV#228 : t_a1gH | [$k__229[lq_tmp_x_227:=lq_anf__d1hl][lq_tmp_x_232:=lq_anf__d1hl][lq_tmp_x_259:=lq_anf__d1hl]]}
bind 20 lq_anf__d1hl : {lq_tmp_x_259 : (Data.Maybe.Maybe  t_a1gH) | [(lq_tmp_x_259 = lq_anf__d1hk);
                                                                     (fromJust([lq_tmp_x_259]) = x#a1gD);
                                                                     ((? isJust([lq_tmp_x_259])) <=> true);
                                                                     (lq_tmp_x_259 = Data.Maybe.Just#r1a([x#a1gD]));
                                                                     (fromJust([lq_tmp_x_259]) = x#a1gD);
                                                                     ((? isJust([lq_tmp_x_259])) <=> true)]}
bind 21 x#a1gy : {VV : func(1, [@(0)]) | []}
bind 22 lq_anf__d1ho : {lq_tmp_x_272 : int | [$k__270[VV#269:=lq_tmp_x_272];
                                              $k__225[VV#224:=lq_tmp_x_272]]}
bind 23 Fixme.main0#r12h : {VV#286 : (GHC.Types.IO  Tuple) | []}
bind 24 lq_anf__d1hp : {lq_tmp_x_287 : (Data.Maybe.Maybe  int) | [((? isJust([lq_tmp_x_287])) <=> false)]}
bind 25 lq_anf__d1hq : {lq_tmp_x_297 : (Data.Maybe.Maybe  int) | [(lq_tmp_x_297 = lq_anf__d1hp)]}
bind 26 lq_anf__d1hq : {lq_tmp_x_300 : (Data.Maybe.Maybe  int) | [(lq_tmp_x_300 = lq_anf__d1hp)]}
bind 27 lq_anf__d1hq : {lq_tmp_x_300 : (Data.Maybe.Maybe  int) | [(lq_tmp_x_300 = lq_anf__d1hp);
                                                                  ((? isJust([lq_tmp_x_300])) <=> false);
                                                                  (lq_tmp_x_300 = Data.Maybe.Nothing#r19([]));
                                                                  ((? isJust([lq_tmp_x_300])) <=> false)]}
bind 28 ds_d1hj : {VV#305 : GHC.Prim.Void# | [$k__306]}
bind 29 lq_anf__d1hr : {lq_tmp_x_312 : int | [(lq_tmp_x_312 ~~ fix#lit#35#CastedTotality.hs#58#8#58#9#45#39#124#Data.Maybe.Just#32#x);
                                              (strLen([lq_tmp_x_312]) = 42)]}
bind 30 lq_anf__d1hs : {lq_tmp_x_320 : Tuple | [$k__318[VV#317:=lq_tmp_x_320][lq_tmp_x_316:=lq_anf__d1hr]]}
bind 31 lq_anf__d1hq : {lq_tmp_x_326 : (Data.Maybe.Maybe  int) | [(lq_tmp_x_326 = lq_anf__d1hp)]}
bind 32 x#a1gX : {lq_tmp_x_325 : int | [$k__289[VV#288:=lq_tmp_x_325][lq_tmp_x_291:=lq_tmp_x_325][lq_tmp_x_287:=lq_anf__d1hq][lq_tmp_x_296:=lq_tmp_x_325][lq_tmp_x_297:=lq_anf__d1hq][lq_tmp_x_326:=lq_anf__d1hq]]}
bind 33 lq_anf__d1hq : {lq_tmp_x_326 : (Data.Maybe.Maybe  int) | [(lq_tmp_x_326 = lq_anf__d1hp);
                                                                  (fromJust([lq_tmp_x_326]) = x#a1gX);
                                                                  ((? isJust([lq_tmp_x_326])) <=> true);
                                                                  (lq_tmp_x_326 = Data.Maybe.Just#r1a([x#a1gX]));
                                                                  (fromJust([lq_tmp_x_326]) = x#a1gX);
                                                                  ((? isJust([lq_tmp_x_326])) <=> true)]}
bind 34 x#a1gx : {VV#293 : int | [$k__294]}
bind 35 Fixme.main#rZN : {VV#351 : [GHC.Types.Char] | [(len([VV#351]) >= 0)]}
bind 36 VV#352 : {VV#352 : [GHC.Types.Char] | [(len([VV#352]) >= 0)]}
bind 37 VV#352 : {VV#352 : [GHC.Types.Char] | [(len([VV#352]) >= 0)]}
bind 38 VV#355 : {VV#355 : GHC.Types.Char | []}
bind 39 VV#355 : {VV#355 : GHC.Types.Char | []}
bind 40 fldList : {VV#358 : GHC.Types.Char | []}
bind 41 VV#359 : {VV#359 : GHC.Types.Char | []}
bind 42 VV#359 : {VV#359 : GHC.Types.Char | []}
bind 43 VV#362 : {VV#362 : int | [(VV#362 = x#a1gx)]}
bind 44 VV#362 : {VV#362 : int | [(VV#362 = x#a1gx)]}
bind 45 VV#365 : {VV#365 : int | [(VV#365 = x#a1gX)]}
bind 46 VV#365 : {VV#365 : int | [(VV#365 = x#a1gX)]}
bind 47 VV#368 : {VV#368 : int | [$k__310[ds_d1hj:=GHC.Prim.void##0l][VV#309:=VV#368]]}
bind 48 VV#368 : {VV#368 : int | [$k__310[ds_d1hj:=GHC.Prim.void##0l][VV#309:=VV#368]]}
bind 49 VV#371 : {VV#371 : GHC.Prim.Void# | [(VV#371 = GHC.Prim.void##0l)]}
bind 50 VV#371 : {VV#371 : GHC.Prim.Void# | [(VV#371 = GHC.Prim.void##0l)]}
bind 51 VV#374 : {VV#374 : int | [(VV#374 ~~ lq_anf__d1hs)]}
bind 52 VV#374 : {VV#374 : int | [(VV#374 ~~ lq_anf__d1hs)]}
bind 53 VV#377 : {VV#377 : int | [(VV#377 = lq_anf__d1hr)]}
bind 54 VV#377 : {VV#377 : int | [(VV#377 = lq_anf__d1hr)]}
bind 55 VV#380 : {VV#380 : (GHC.Types.IO  Tuple) | []}
bind 56 VV#380 : {VV#380 : (GHC.Types.IO  Tuple) | []}
bind 57 VV#383 : {VV#383 : Tuple | []}
bind 58 VV#383 : {VV#383 : Tuple | []}
bind 59 VV#386 : {VV#386 : int | [(VV#386 = lq_anf__d1ho)]}
bind 60 VV#386 : {VV#386 : int | [(VV#386 = lq_anf__d1ho)]}
bind 61 VV#228 : {VV#228 : t_a1gH | [(VV#228 = x#a1gD)]}
bind 62 VV#243 : {VV#243 : t_a1gH | [$k__244[ds_d1hf:=GHC.Prim.void##0l]]}
bind 63 VV#391 : {VV#391 : GHC.Prim.Void# | [(VV#391 = GHC.Prim.void##0l)]}
bind 64 VV#391 : {VV#391 : GHC.Prim.Void# | [(VV#391 = GHC.Prim.void##0l)]}
bind 65 VV : {VV : t_a1gH | [(VV ~~ lq_anf__d1hn)]}
bind 66 VV#395 : {VV#395 : int | [(VV#395 = lq_anf__d1hm)]}
bind 67 VV#395 : {VV#395 : int | [(VV#395 = lq_anf__d1hm)]}
bind 68 VV#305 : {VV#305 : GHC.Prim.Void# | [$k__306]}
bind 69 VV#317 : {VV#317 : Tuple | [$k__318]}
bind 70 VV#309 : {VV#309 : int | [$k__310]}
bind 71 VV#293 : {VV#293 : int | [$k__294]}
bind 72 VV#288 : {VV#288 : int | [$k__289]}
bind 73 VV#269 : {VV#269 : int | [$k__270]}
bind 74 VV#239 : {VV#239 : GHC.Prim.Void# | [$k__240]}
bind 75 VV#251 : {VV#251 : Tuple | [$k__252]}




constraint:
  env [0; 32; 1; 33; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 10; 45; 31]
  grd true
  lhs {VV#F1 : int | [(VV#F1 = x#a1gX)]}
  rhs {VV#F1 : int | [$k__294[VV#293:=VV#F1][VV#365:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]
  // META constraint id 1 : CastedTotality.hs:7:1-4


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 10; 26; 27; 47]
  grd true
  lhs {VV#F2 : int | [$k__310[ds_d1hj:=GHC.Prim.void##0l][VV#309:=VV#F2][VV#368:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [$k__294[VV#293:=VV#F2][VV#368:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]
  // META constraint id 2 : CastedTotality.hs:7:1-4


constraint:
  env [0; 1; 49; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 10; 26; 27]
  grd true
  lhs {VV#F3 : GHC.Prim.Void# | [(VV#F3 = GHC.Prim.void##0l)]}
  rhs {VV#F3 : GHC.Prim.Void# | [$k__306[VV#305:=VV#F3][VV#371:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]
  // META constraint id 3 : CastedTotality.hs:7:1-4


constraint:
  env [0;
       1;
       2;
       3;
       51;
       4;
       5;
       6;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       26;
       27;
       28;
       29;
       30]
  grd true
  lhs {VV#F4 : int | [(VV#F4 ~~ lq_anf__d1hs)]}
  rhs {VV#F4 : int | [$k__310[VV#309:=VV#F4][VV#374:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]
  // META constraint id 4 : CastedTotality.hs:7:1-4


constraint:
  env [0;
       1;
       2;
       3;
       4;
       5;
       53;
       6;
       7;
       23;
       8;
       24;
       9;
       25;
       10;
       26;
       27;
       28;
       29]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = lq_anf__d1hr)]}
  rhs {VV#F5 : int | [false]}
  id 5 tag [2]
  // META constraint id 5 : CastedTotality.hs:7:1-4


constraint:
  env [0; 1; 2; 18; 3; 19; 4; 20; 5; 6; 7; 8; 9; 10; 11; 12; 61]
  grd true
  lhs {VV#F6 : t_a1gH | [(VV#F6 = x#a1gD)]}
  rhs {VV#F6 : t_a1gH | [$k__225[VV#224:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]
  // META constraint id 6 : CastedTotality.hs:11:1-5


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 62]
  grd true
  lhs {VV#F7 : t_a1gH | [$k__244[ds_d1hf:=GHC.Prim.void##0l][VV#243:=VV#F7][VV#F:=VV#F7]]}
  rhs {VV#F7 : t_a1gH | [$k__225[VV#224:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]
  // META constraint id 7 : CastedTotality.hs:11:1-5


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 63]
  grd true
  lhs {VV#F8 : GHC.Prim.Void# | [(VV#F8 = GHC.Prim.void##0l)]}
  rhs {VV#F8 : GHC.Prim.Void# | [$k__240[VV#239:=VV#F8][VV#391:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]
  // META constraint id 8 : CastedTotality.hs:11:1-5


constraint:
  env [0;
       16;
       1;
       17;
       65;
       2;
       3;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F9 : t_a1gH | [(VV#F9 ~~ lq_anf__d1hn)]}
  rhs {VV#F9 : t_a1gH | [$k__244[VV#243:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]
  // META constraint id 9 : CastedTotality.hs:11:1-5


constraint:
  env [0; 16; 1; 2; 66; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F10 : int | [(VV#F10 = lq_anf__d1hm)]}
  rhs {VV#F10 : int | [false]}
  id 10 tag [1]
  // META constraint id 10 : CastedTotality.hs:11:1-5




wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 10; 26; 27]
  reft {VV#305 : GHC.Prim.Void# | [$k__306]}
  
  // META wf  : CastedTotality.hs:7:1-4


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 10; 26; 27; 28; 29]
  reft {VV#317 : Tuple | [$k__318]}
  
  // META wf  : CastedTotality.hs:7:1-4


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 25; 10; 26; 27; 28]
  reft {VV#309 : int | [$k__310]}
  
  // META wf  : CastedTotality.hs:7:1-4


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 24; 9; 10]
  reft {VV#293 : int | [$k__294]}
  
  // META wf  : CastedTotality.hs:7:1-4


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 23; 8; 9; 10]
  reft {VV#288 : int | [$k__289]}
  
  // META wf  : CastedTotality.hs:7:1-4


wf:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 8; 9; 10]
  reft {VV#269 : int | [$k__270]}
  
  // META wf  : CastedTotality.hs:11:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14]
  reft {VV#239 : GHC.Prim.Void# | [$k__240]}
  
  // META wf  : CastedTotality.hs:11:1-5


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#251 : Tuple | [$k__252]}
  
  // META wf  : CastedTotality.hs:11:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#243 : t_a1gH | [$k__244]}
  
  // META wf  : CastedTotality.hs:11:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#228 : t_a1gH | [$k__229]}
  
  // META wf  : CastedTotality.hs:11:1-5


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  reft {VV#224 : t_a1gH | [$k__225]}
  
  // META wf  : CastedTotality.hs:11:1-5







